{
  "contractName": "StakingAuRa",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "delegatorStakeSnapshot",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolDelegatorIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "removePools",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_validatorSetContract",
          "type": "address"
        },
        {
          "name": "_initialStakingAddresses",
          "type": "address[]"
        },
        {
          "name": "_delegatorMinStake",
          "type": "uint256"
        },
        {
          "name": "_candidateMinStake",
          "type": "uint256"
        },
        {
          "name": "_stakingEpochDuration",
          "type": "uint256"
        },
        {
          "name": "_stakingEpochStartBlock",
          "type": "uint256"
        },
        {
          "name": "_stakeWithdrawDisallowPeriod",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "setStakingEpochStartBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_stakingEpochDuration",
          "type": "uint256"
        }
      ],
      "name": "setStakingEpochDuration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fromPoolStakingAddress",
          "type": "address"
        },
        {
          "name": "_toPoolStakingAddress",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "moveStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minStake",
          "type": "uint256"
        }
      ],
      "name": "setDelegatorMinStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rewardWasTaken",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_miningAddress",
          "type": "address"
        }
      ],
      "name": "addPool",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_stakingAddress",
          "type": "address"
        }
      ],
      "name": "removePool",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_stakingEpochs",
          "type": "uint256[]"
        },
        {
          "name": "_poolStakingAddress",
          "type": "address"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minStake",
          "type": "uint256"
        }
      ],
      "name": "setCandidateMinStake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakeAmountTotal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakeFirstEpoch",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "candidateMinStake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolInactiveIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPools",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "allowMiningClaimCall",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_poolStakingAddress",
          "type": "address"
        },
        {
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "maxWithdrawAllowed",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stakingEpochStartBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_poolStakingAddress",
          "type": "address"
        }
      ],
      "name": "poolDelegatorsInactive",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "executeParamsChange",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_poolStakingAddress",
          "type": "address"
        },
        {
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "stakeAmountByCurrentEpoch",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stakingEpoch",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stakingEpochEndBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_stakeWithdrawDisallowPeriod",
          "type": "uint256"
        }
      ],
      "name": "setStakeWithdrawDisallowPeriod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_poolStakingAddress",
          "type": "address"
        },
        {
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "maxWithdrawOrderAllowed",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolDelegatorInactiveIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newEpochDuration",
          "type": "uint256"
        },
        {
          "name": "_newStakeWithdrawDisallowPeriod",
          "type": "uint256"
        },
        {
          "name": "_newCollectRoundLength",
          "type": "uint256"
        }
      ],
      "name": "scheduleParamsChange",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPoolsLikelihood",
      "outputs": [
        {
          "name": "likelihoods",
          "type": "uint256[]"
        },
        {
          "name": "sum",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stakeWithdrawDisallowPeriod",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_unremovableStakingAddress",
          "type": "address"
        }
      ],
      "name": "clearUnremovableValidator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_staker",
          "type": "address"
        },
        {
          "name": "_offset",
          "type": "uint256"
        },
        {
          "name": "_length",
          "type": "uint256"
        }
      ],
      "name": "getStakerPools",
      "outputs": [
        {
          "name": "result",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_poolStakingAddress",
          "type": "address"
        }
      ],
      "name": "poolDelegators",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "orderWithdrawEpoch",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPoolsToBeElected",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakeAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getStakerPoolsLength",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_stakingAddress",
          "type": "address"
        }
      ],
      "name": "isPoolActive",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_toPoolStakingAddress",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_poolStakingAddress",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "int256"
        }
      ],
      "name": "orderWithdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakeLastEpoch",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_poolStakingAddress",
          "type": "address"
        }
      ],
      "name": "claimOrderedWithdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPoolsToBeRemoved",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "disallowMiningClaimCall",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stakingEpochDuration",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "delegatorMinStake",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "orderedWithdrawAmountTotal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPoolsInactive",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "validatorSetContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "isMiningClaimCallAllowed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "orderedWithdrawAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "removeMyPool",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolToBeRemovedIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "incrementStakingEpoch",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_CANDIDATES",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fromPoolStakingAddress",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "areStakeAndWithdrawAllowed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolToBeElectedIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_stakingEpochs",
          "type": "uint256[]"
        },
        {
          "name": "_poolStakingAddress",
          "type": "address"
        },
        {
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "getRewardAmount",
      "outputs": [
        {
          "name": "rewardSum",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "fromPoolStakingAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "stakingEpoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "nativeCoinsAmount",
          "type": "uint256"
        }
      ],
      "name": "ClaimedReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "poolStakingAddress",
          "type": "address"
        }
      ],
      "name": "AddedPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "fromPoolStakingAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "stakingEpoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimedOrderedWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "fromPoolStakingAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "toPoolStakingAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "stakingEpoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MovedStake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "fromPoolStakingAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "stakingEpoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "int256"
        }
      ],
      "name": "OrderedWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "toPoolStakingAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "stakingEpoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PlacedStake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "poolStakingAddress",
          "type": "address"
        }
      ],
      "name": "RemovedPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "fromPoolStakingAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "stakingEpoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrewStake",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"delegatorStakeSnapshot\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolDelegatorIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"removePools\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_validatorSetContract\",\"type\":\"address\"},{\"name\":\"_initialStakingAddresses\",\"type\":\"address[]\"},{\"name\":\"_delegatorMinStake\",\"type\":\"uint256\"},{\"name\":\"_candidateMinStake\",\"type\":\"uint256\"},{\"name\":\"_stakingEpochDuration\",\"type\":\"uint256\"},{\"name\":\"_stakingEpochStartBlock\",\"type\":\"uint256\"},{\"name\":\"_stakeWithdrawDisallowPeriod\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"setStakingEpochStartBlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stakingEpochDuration\",\"type\":\"uint256\"}],\"name\":\"setStakingEpochDuration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fromPoolStakingAddress\",\"type\":\"address\"},{\"name\":\"_toPoolStakingAddress\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"moveStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minStake\",\"type\":\"uint256\"}],\"name\":\"setDelegatorMinStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardWasTaken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_miningAddress\",\"type\":\"address\"}],\"name\":\"addPool\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stakingAddress\",\"type\":\"address\"}],\"name\":\"removePool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stakingEpochs\",\"type\":\"uint256[]\"},{\"name\":\"_poolStakingAddress\",\"type\":\"address\"}],\"name\":\"claimReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minStake\",\"type\":\"uint256\"}],\"name\":\"setCandidateMinStake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakeAmountTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakeFirstEpoch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"candidateMinStake\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolInactiveIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPools\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"allowMiningClaimCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_poolStakingAddress\",\"type\":\"address\"},{\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"maxWithdrawAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingEpochStartBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_poolStakingAddress\",\"type\":\"address\"}],\"name\":\"poolDelegatorsInactive\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"executeParamsChange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_poolStakingAddress\",\"type\":\"address\"},{\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"stakeAmountByCurrentEpoch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingEpoch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingEpochEndBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stakeWithdrawDisallowPeriod\",\"type\":\"uint256\"}],\"name\":\"setStakeWithdrawDisallowPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_poolStakingAddress\",\"type\":\"address\"},{\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"maxWithdrawOrderAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolDelegatorInactiveIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newEpochDuration\",\"type\":\"uint256\"},{\"name\":\"_newStakeWithdrawDisallowPeriod\",\"type\":\"uint256\"},{\"name\":\"_newCollectRoundLength\",\"type\":\"uint256\"}],\"name\":\"scheduleParamsChange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPoolsLikelihood\",\"outputs\":[{\"name\":\"likelihoods\",\"type\":\"uint256[]\"},{\"name\":\"sum\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakeWithdrawDisallowPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_unremovableStakingAddress\",\"type\":\"address\"}],\"name\":\"clearUnremovableValidator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_staker\",\"type\":\"address\"},{\"name\":\"_offset\",\"type\":\"uint256\"},{\"name\":\"_length\",\"type\":\"uint256\"}],\"name\":\"getStakerPools\",\"outputs\":[{\"name\":\"result\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_poolStakingAddress\",\"type\":\"address\"}],\"name\":\"poolDelegators\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"orderWithdrawEpoch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPoolsToBeElected\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakeAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakerPoolsLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_stakingAddress\",\"type\":\"address\"}],\"name\":\"isPoolActive\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_toPoolStakingAddress\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_poolStakingAddress\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"int256\"}],\"name\":\"orderWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakeLastEpoch\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_poolStakingAddress\",\"type\":\"address\"}],\"name\":\"claimOrderedWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPoolsToBeRemoved\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disallowMiningClaimCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingEpochDuration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"delegatorMinStake\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"orderedWithdrawAmountTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPoolsInactive\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"validatorSetContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"isMiningClaimCallAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"orderedWithdrawAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"removeMyPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolToBeRemovedIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"incrementStakingEpoch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_CANDIDATES\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fromPoolStakingAddress\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"areStakeAndWithdrawAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolToBeElectedIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_stakingEpochs\",\"type\":\"uint256[]\"},{\"name\":\"_poolStakingAddress\",\"type\":\"address\"},{\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getRewardAmount\",\"outputs\":[{\"name\":\"rewardSum\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"fromPoolStakingAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"stakingEpoch\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"nativeCoinsAmount\",\"type\":\"uint256\"}],\"name\":\"ClaimedReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"poolStakingAddress\",\"type\":\"address\"}],\"name\":\"AddedPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"fromPoolStakingAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"stakingEpoch\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimedOrderedWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"fromPoolStakingAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"toPoolStakingAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"stakingEpoch\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MovedStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"fromPoolStakingAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"stakingEpoch\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"OrderedWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"toPoolStakingAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"stakingEpoch\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PlacedStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"poolStakingAddress\",\"type\":\"address\"}],\"name\":\"RemovedPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"fromPoolStakingAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"stakingEpoch\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrewStake\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addPool(uint256,address)\":{\"details\":\"Adds a new candidate's pool to the list of active pools (see the `getPools` getter) and moves the specified amount of staking tokens/coins from the candidate's staking address to the candidate's pool. A participant calls this function using their staking address when they want to create a pool. This is a wrapper for the `stake` function.\",\"params\":{\"_amount\":\"The amount of tokens to be staked. Ignored when staking in native coins because `msg.value` is used in that case.\",\"_miningAddress\":\"The mining address of the candidate. The mining address is bound to the staking address (msg.sender). This address cannot be equal to `msg.sender`.\"}},\"areStakeAndWithdrawAllowed()\":{\"details\":\"Determines whether staking/withdrawal operations are allowed at the moment. Used by all staking/withdrawal functions.\"},\"claimOrderedWithdraw(address)\":{\"details\":\"Withdraws the staking tokens/coins from the specified pool ordered during the previous staking epochs with the `orderWithdraw` function. The ordered amount can be retrieved by the `orderedWithdrawAmount` getter.\",\"params\":{\"_poolStakingAddress\":\"The staking address of the pool from which the ordered tokens/coins are withdrawn.\"}},\"claimReward(uint256[],address)\":{\"details\":\"Withdraws a reward from the specified pool for the specified staking epochs to the staker address (msg.sender).\",\"params\":{\"_poolStakingAddress\":\"The staking address of the pool from which the reward needs to be withdrawn.\",\"_stakingEpochs\":\"The list of staking epochs in ascending order. If the list is empty, it is taken with `BlockRewardAuRa.epochsPoolGotRewardFor` getter.\"}},\"clearUnremovableValidator(address)\":{\"details\":\"Adds the `unremovable validator` to either the `poolsToBeElected` or the `poolsToBeRemoved` array depending on their own stake in their own pool when they become removable. This allows the `ValidatorSetAuRa.newValidatorSet` function to recognize the unremovable validator as a regular removable pool. Called by the `ValidatorSet.clearUnremovableValidator` function.\",\"params\":{\"_unremovableStakingAddress\":\"The staking address of the unremovable validator.\"}},\"executeParamsChange()\":{\"details\":\"Schedule stakingEpochDuration change\"},\"getPools()\":{\"details\":\"Returns an array of the current active pools (the staking addresses of candidates and validators). The size of the array cannot exceed MAX_CANDIDATES. A pool can be added to this array with the `_addPoolActive` internal function which is called by the `stake` or `orderWithdraw` function. A pool is considered active if its address has at least the minimum stake and this stake is not ordered to be withdrawn.\"},\"getPoolsInactive()\":{\"details\":\"Returns an array of the current inactive pools (the staking addresses of former candidates). A pool can be added to this array with the `_addPoolInactive` internal function which is called by `_removePool`. A pool is considered inactive if it is banned for some reason, if its address has zero stake, or if its entire stake is ordered to be withdrawn.\"},\"getPoolsLikelihood()\":{\"details\":\"Returns the array of stake amounts for each corresponding address in the `poolsToBeElected` array (see the `getPoolsToBeElected` getter) and a sum of these amounts. Used by the `ValidatorSetAuRa.newValidatorSet` function when randomly selecting new validators at the last block of a staking epoch. An array value is updated every time any staked amount is changed in this pool (see the `_setLikelihood` internal function).\",\"return\":\"`uint256[] likelihoods` - The array of the coefficients. The array length is always equal to the length of the `poolsToBeElected` array. `uint256 sum` - The total sum of the amounts.\"},\"getPoolsToBeElected()\":{\"details\":\"Returns the list of pools (their staking addresses) which will participate in a new validator set selection process in the `ValidatorSetAuRa.newValidatorSet` function. This is an array of pools which will be considered as candidates when forming a new validator set (at the last block of a staking epoch). This array is kept updated by the `_addPoolToBeElected` and `_deletePoolToBeElected` internal functions.\"},\"getPoolsToBeRemoved()\":{\"details\":\"Returns the list of pools (their staking addresses) which will be removed by the `ValidatorSetAuRa.newValidatorSet` function from the active `pools` array (at the last block of a staking epoch). This array is kept updated by the `_addPoolToBeRemoved` and `_deletePoolToBeRemoved` internal functions. A pool is added to this array when the pool's address withdraws (or orders) all of its own staking tokens from the pool, inactivating the pool.\"},\"getRewardAmount(uint256[],address,address)\":{\"details\":\"Returns reward amount in native coins for the specified pool, the specified staking epochs, and the specified staker address (delegator or validator).\",\"params\":{\"_poolStakingAddress\":\"The staking address of the pool for which the amounts need to be returned.\",\"_staker\":\"The staker address (validator's staking address or delegator's address).\",\"_stakingEpochs\":\"The list of staking epochs in ascending order. If the list is empty, it is taken with `BlockRewardAuRa.epochsPoolGotRewardFor` getter.\"}},\"getStakerPools(address,uint256,uint256)\":{\"details\":\"Returns the list of pools (staking addresses) into which the specified staker have ever staked.\",\"params\":{\"_length\":\"The max number of items to return.\",\"_offset\":\"The index in the array at which the reading should start. Ignored if the `_length` is 0.\",\"_staker\":\"The staker address (it can be a delegator or a pool staking address itself).\"}},\"getStakerPoolsLength(address)\":{\"details\":\"Returns the length of the list of pools into which the specified staker have ever staked.\",\"params\":{\"_staker\":\"The staker address (it can be a delegator or a pool staking address itself).\"}},\"incrementStakingEpoch()\":{\"details\":\"Increments the serial number of the current staking epoch. Called by the `ValidatorSetAuRa.newValidatorSet` at the last block of the finished staking epoch.\"},\"initialize(address,address[],uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Initializes the network parameters. Can only be called by the constructor of the `InitializerAuRa` contract or owner.\",\"params\":{\"_candidateMinStake\":\"The minimum allowed amount of candidate/validator stake in Wei.\",\"_delegatorMinStake\":\"The minimum allowed amount of delegator stake in Wei.\",\"_initialStakingAddresses\":\"The array of initial validators' staking addresses.\",\"_stakeWithdrawDisallowPeriod\":\"The duration period (in blocks) at the end of a staking epoch during which participants cannot stake/withdraw/order/claim their staking tokens/coins (e.g., 4320 = 6 hours for 5-seconds blocks in AuRa).\",\"_stakingEpochDuration\":\"The duration of a staking epoch in blocks (e.g., 120954 = 1 week for 5-seconds blocks in AuRa).\",\"_stakingEpochStartBlock\":\"The number of the first block of initial staking epoch (must be zero if the network is starting from genesis block).\",\"_validatorSetContract\":\"The address of the `ValidatorSetAuRa` contract.\"}},\"isInitialized()\":{\"details\":\"Returns a boolean flag indicating if the `initialize` function has been called.\"},\"isPoolActive(address)\":{\"details\":\"Returns a flag indicating whether a specified address is in the `pools` array. See the `getPools` getter.\",\"params\":{\"_stakingAddress\":\"The staking address of the pool.\"}},\"maxWithdrawAllowed(address,address)\":{\"details\":\"Returns the maximum amount which can be withdrawn from the specified pool by the specified staker at the moment. Used by the `withdraw` and `moveStake` functions.\",\"params\":{\"_poolStakingAddress\":\"The pool staking address from which the withdrawal will be made.\",\"_staker\":\"The staker address that is going to withdraw.\"}},\"maxWithdrawOrderAllowed(address,address)\":{\"details\":\"Returns the maximum amount which can be ordered to be withdrawn from the specified pool by the specified staker at the moment. Used by the `orderWithdraw` function.\",\"params\":{\"_poolStakingAddress\":\"The pool staking address from which the withdrawal will be ordered.\",\"_staker\":\"The staker address that is going to order the withdrawal.\"}},\"moveStake(address,address,uint256)\":{\"details\":\"Moves staking tokens/coins from one pool to another. A staker calls this function when they want to move their tokens/coins from one pool to another without withdrawing their tokens/coins.\",\"params\":{\"_amount\":\"The amount of staking tokens/coins to be moved. The amount cannot exceed the value returned by the `maxWithdrawAllowed` getter.\",\"_fromPoolStakingAddress\":\"The staking address of the source pool.\",\"_toPoolStakingAddress\":\"The staking address of the target pool.\"}},\"onTokenTransfer(address,uint256,bytes)\":{\"details\":\"Prevents sending tokens directly to the `StakingAuRa` contract address by the `ERC677BridgeTokenRewardable.transferAndCall` function.\"},\"orderWithdraw(address,int256)\":{\"details\":\"Orders tokens/coins withdrawal from the staking address of the specified pool to the staker's address. The requested tokens/coins can be claimed after the current staking epoch is complete using the `claimOrderedWithdraw` function.\",\"params\":{\"_amount\":\"The amount to be withdrawn. A positive value means the staker wants to either set or increase their withdrawal amount. A negative value means the staker wants to decrease a withdrawal amount that was previously set. The amount cannot exceed the value returned by the `maxWithdrawOrderAllowed` getter.\",\"_poolStakingAddress\":\"The staking address of the pool from which the amount will be withdrawn.\"}},\"poolDelegators(address)\":{\"details\":\"Returns an array of the current active delegators of the specified pool. A delegator is considered active if they have staked into the specified pool and their stake is not ordered to be withdrawn.\",\"params\":{\"_poolStakingAddress\":\"The pool staking address.\"}},\"poolDelegatorsInactive(address)\":{\"details\":\"Returns an array of the current inactive delegators of the specified pool. A delegator is considered inactive if their entire stake is ordered to be withdrawn but not yet claimed.\",\"params\":{\"_poolStakingAddress\":\"The pool staking address.\"}},\"removeMyPool()\":{\"details\":\"Removes the candidate's or validator's pool from the `pools` array (a list of active pools which can be retrieved by the `getPools` getter). When a candidate or validator wants to remove their pool, they should call this function from their staking address. A validator cannot remove their pool while they are an `unremovable validator`.\"},\"removePool(address)\":{\"details\":\"Removes a specified pool from the `pools` array (a list of active pools which can be retrieved by the `getPools` getter). Called by the `ValidatorSetAuRa._removeMaliciousValidator` internal function when a pool must be removed by the algorithm.\",\"params\":{\"_stakingAddress\":\"The staking address of the pool to be removed.\"}},\"removePools()\":{\"details\":\"Removes pools which are in the `_poolsToBeRemoved` internal array from the `pools` array. Called by the `ValidatorSetAuRa.newValidatorSet` function when a pool must be removed by the algorithm.\"},\"scheduleParamsChange(uint256,uint256,uint256)\":{\"details\":\"Schedule stakingEpochDuration change\"},\"setCandidateMinStake(uint256)\":{\"details\":\"Sets (updates) the limit of the minimum candidate stake (CANDIDATE_MIN_STAKE). Can only be called by the `owner`.\",\"params\":{\"_minStake\":\"The value of a new limit in Wei.\"}},\"setDelegatorMinStake(uint256)\":{\"details\":\"Sets (updates) the limit of the minimum delegator stake (DELEGATOR_MIN_STAKE). Can only be called by the `owner`.\",\"params\":{\"_minStake\":\"The value of a new limit in Wei.\"}},\"setStakingEpochStartBlock(uint256)\":{\"details\":\"Sets the number of the first block in the upcoming staking epoch. Called by the `ValidatorSetAuRa.newValidatorSet` function at the last block of a staking epoch.\",\"params\":{\"_blockNumber\":\"The number of the very first block in the upcoming staking epoch.\"}},\"stake(address,uint256)\":{\"details\":\"Moves the specified amount of staking tokens/coins from the staker's address to the staking address of the specified pool. Actually, the amount is stored in a balance of this StakingAuRa contract. A staker calls this function when they want to make a stake into a pool.\",\"params\":{\"_amount\":\"The amount of tokens to be staked. Ignored when staking in native coins because `msg.value` is used instead.\",\"_toPoolStakingAddress\":\"The staking address of the pool where the tokens should be staked.\"}},\"stakeAmountByCurrentEpoch(address,address)\":{\"details\":\"Returns the amount of staking tokens/coins staked into the specified pool by the specified staker during the current staking epoch (see the `stakingEpoch` getter). Used by the `stake`, `withdraw`, and `orderWithdraw` functions.\",\"params\":{\"_poolStakingAddress\":\"The pool staking address.\",\"_staker\":\"The staker's address.\"}},\"stakingEpochEndBlock()\":{\"details\":\"Returns the number of the last block of the current staking epoch.\"},\"withdraw(address,uint256)\":{\"details\":\"Moves the specified amount of staking tokens/coins from the staking address of the specified pool to the staker's address. A staker calls this function when they want to withdraw their tokens/coins.\",\"params\":{\"_amount\":\"The amount of tokens/coins to be withdrawn. The amount cannot exceed the value returned by the `maxWithdrawAllowed` getter.\",\"_fromPoolStakingAddress\":\"The staking address of the pool from which the tokens/coins should be withdrawn.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/StakingAuRa.sol\":\"StakingAuRa\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/StakingAuRa.sol\":{\"keccak256\":\"0x3f91cfc0882c7415a6f2a895de92a4a579845f4b0e07fd34bc8e44a71dcad4e0\",\"urls\":[\"bzzr://d728b3f96f0a60f22a6334419b536024b36eda7b2274388112b82ba1454ac35c\",\"dweb:/ipfs/QmQBu1J3uLReZQyvw7UNGsZvyLneCYRMPXW6uEadfJRED4\"]},\"/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/base/StakingAuRaBase.sol\":{\"keccak256\":\"0xd12d1902c4040dca1361baa25b9cd9d122e00477acb5f46c2fb5f02af2512717\",\"urls\":[\"bzzr://a88b796b19b3e7af1870401d3ce6579c430bde9634e9befc8be1cf915ea2268d\",\"dweb:/ipfs/QmXanSCZy2MeTpZJmnKcDDhsF3zWEHjbmkNvbqSqzFZaS2\"]},\"/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/base/StakingAuRaCoins.sol\":{\"keccak256\":\"0x44f31321ba2155174f45725282f6c38fcb526ef3733a02288973d253acd8cebf\",\"urls\":[\"bzzr://bdadc62ba80f70a92777653beab57543cb4328c23e37774fb36adb8f064aa5a6\",\"dweb:/ipfs/QmWnkG13tnYVbMaTKNGmVK8fCdrvHnJDEqugnQ9o1K3vCK\"]},\"/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/interfaces/IBlockRewardAuRa.sol\":{\"keccak256\":\"0x3530f79ac6d8930c178acf7d32de59414f248f2e619fb4085e6f7030c3c5d5d7\",\"urls\":[\"bzzr://ea94e03a9f9ca0f241de1bf1fa6ca536ea986c9fe0f8cb5016bf1f13f2b63a54\",\"dweb:/ipfs/QmPR1ihVpddDeXszWr6CPPsapkUo5A6kFQZnEQEQ3mnUMX\"]},\"/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/interfaces/IBlockRewardAuRaCoins.sol\":{\"keccak256\":\"0x045022a14272664e683b777061d7ed62edd6f11e8593c086848c24c390f138f1\",\"urls\":[\"bzzr://1a46fdb2f1d346ed81aacae666532f21717017da1763daab98ca569bc21ded94\",\"dweb:/ipfs/QmWwy441NYx42mRg9gnsEz6SbSpUEVGaCRSauQgcLsCmAX\"]},\"/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/interfaces/IERC677Minting.sol\":{\"keccak256\":\"0x99b969e03b42e5f002dfdc51dee8686763ed5e7584c8c8361f13315e2bb23ebb\",\"urls\":[\"bzzr://0b1d2d0e8e43eaab90cecd150ac582c9b2a97dc6d6b36f670e76b27ebf12773e\",\"dweb:/ipfs/QmPngs8y3dUsCWjTcNyr6YUG7w5qQXKstJ75EuAMsU5PBt\"]},\"/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/interfaces/IRandomAuRa.sol\":{\"keccak256\":\"0x0332e9c81dd440317f222fe62053ad848bb5fb381eae8bd7b60694010796329a\",\"urls\":[\"bzzr://30fa3b34087cd8b2e5c669ac483958851f852b5720834308868a8bbbe72fd6b0\",\"dweb:/ipfs/QmasTAdfdoLh8Cu6fpXHmcVG7T9bdpJah7VAzKc4XNQ52M\"]},\"/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/interfaces/IStakingAuRa.sol\":{\"keccak256\":\"0xa9aa55b896f6f3e0064eecce039a8b235469853e82a257f6ea0e4b4c979f893b\",\"urls\":[\"bzzr://aaea4eb45d7eb77cc9d4bbb35318c8aab02cb0a90784663ae349df0fb4304fea\",\"dweb:/ipfs/QmVH5vRKFPo173PWJQDuAiPMeFDMtnboEJHxo1oiVAkpGN\"]},\"/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/interfaces/IValidatorSetAuRa.sol\":{\"keccak256\":\"0x9c28594d6c895b94d826ed212a6eb3bc316e0fcdd6556ab1295f24661d5cd34d\",\"urls\":[\"bzzr://290d129087298867a300afae0552380e0ff7c08c0400c737c3f46b334fca4728\",\"dweb:/ipfs/QmU8t9QZ5yMTgN4AB9jdqQaca9mUpG5umDEG3RBJn7q9ou\"]},\"/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/libs/SafeMath.sol\":{\"keccak256\":\"0xb480033e8328684139cda6d81df5177232365ea84d7eefe4f7a893db1621b694\",\"urls\":[\"bzzr://7ee15bb54eb1b521fce8721514ad86f3081ee63dd126c68ccaaf40ba887df0a1\",\"dweb:/ipfs/QmZkvLwQQmc3vmX7hhN4ru6BSxCw8Eghg7yDSKPrqZswVw\"]},\"/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/upgradeability/UpgradeabilityAdmin.sol\":{\"keccak256\":\"0x9addb17fda1bc4c4f8ba64e929be2acdb29472f9d3cfe18491852c0617d20169\",\"urls\":[\"bzzr://c0af15280f0b0edeedb355bea94acfaa3142e361b61f8356937ca1b039f131dd\",\"dweb:/ipfs/QmRmtnWMBvXYFBNppWcEdVTakMwPgqB4JhnXgMuT48yEou\"]},\"/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/upgradeability/UpgradeableOwned.sol\":{\"keccak256\":\"0x73510448e23835a18719cd4b087f66c839bcb2d6b11b5a82e84f0a5e4ed6ad78\",\"urls\":[\"bzzr://302da89b7ac42ede7da35b64062e44ed04e1bdbd6066972dfa342445b23d2cb7\",\"dweb:/ipfs/QmTYnqfmNRdAz2QQhZAZcFRV8a34eBhmFfN9gXx9xRAKTr\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50615243806100206000396000f3fe6080604052600436106103c25760003560e01c806397997ebb116101f2578063d53651701161010d578063edd7db75116100a0578063f3fef3a31161006f578063f3fef3a314611017578063f494250114611050578063fa4aaf4714611065578063fb367a9b14611098576103c2565b8063edd7db7514610fa5578063edf94b8214610fba578063ee435f5514610fed578063f078609614611002576103c2565b8063df6f55f5116100dc578063df6f55f514610ef1578063dfc8bf4e14610f06578063e9471b1c14610f37578063e9ab030014610f6a576103c2565b8063d536517014610e7f578063d609ea9314610e94578063da7a9b6a14610ea9578063dadee88a14610ebe576103c2565b8063a6a3a25611610185578063b61ed63a11610154578063b61ed63a14610dc3578063bc9eb2c314610dfc578063cfef144114610e37578063d290c21d14610e6a576103c2565b8063a6a3a25614610cfe578063a711e6a114610d31578063adc9772e14610d64578063b42754a514610d90576103c2565b8063a4205967116101c1578063a420596714610bad578063a4c0ed3614610be8578063a5d54f6514610cae578063a697ecff14610cc3576103c2565b806397997ebb14610af357806398c46b9014610b085780639dc7798814610b3b5780639ea8082b14610b7a576103c2565b80635fef7643116102e2578063750dd2a111610275578063950a651311610244578063950a6513146109d75780639518c48114610a12578063954a35f714610a4d578063957950a714610a83576103c2565b8063750dd2a114610948578063794c0c68146109835780638c2243ae146109985780638efe5e49146109ad576103c2565b80636bda1577116102b15780636bda1577146108b05780637069e746146108eb57806373c218031461090057806374d9654214610933576103c2565b80635fef7643146107ee5780636511391814610803578063673a2a1f146108365780636ada686a1461089b576103c2565b8063317277301161035a5780633ea15d62116103295780633ea15d621461069d57806348aaa4a2146107565780635267e1d6146107805780635659b742146107b3576103c2565b806331727730146105d257806333ba888214610629578063392e53cd146106555780633b7d09461461066a576103c2565b806320d96e461161039657806320d96e46146105115780632474435a1461053b578063251441a9146105655780632bafde8d146105a8576103c2565b80622ceebc146103c75780630868c0d61461041c5780631555371c146104575780631c5fb52d1461046e575b600080fd5b3480156103d357600080fd5b5061040a600480360360608110156103ea57600080fd5b506001600160a01b0381358116916020810135909116906040013561115c565b60408051918252519081900360200190f35b34801561042857600080fd5b5061040a6004803603604081101561043f57600080fd5b506001600160a01b038135811691602001351661117f565b34801561046357600080fd5b5061046c61119c565b005b34801561047a57600080fd5b5061046c600480360360e081101561049157600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156104bb57600080fd5b8201836020820111156104cd57600080fd5b803590602001918460208302840111600160201b831117156104ee57600080fd5b919350915080359060208101359060408101359060608101359060800135611248565b34801561051d57600080fd5b5061046c6004803603602081101561053457600080fd5b50356112bf565b34801561054757600080fd5b5061046c6004803603602081101561055e57600080fd5b50356112db565b34801561057157600080fd5b5061046c6004803603606081101561058857600080fd5b506001600160a01b03813581169160208101359091169060400135611316565b3480156105b457600080fd5b5061046c600480360360208110156105cb57600080fd5b50356113bb565b3480156105de57600080fd5b50610615600480360360608110156105f557600080fd5b506001600160a01b038135811691602081013590911690604001356113f6565b604080519115158252519081900360200190f35b61046c6004803603604081101561063f57600080fd5b50803590602001356001600160a01b031661141c565b34801561066157600080fd5b50610615611499565b34801561067657600080fd5b5061046c6004803603602081101561068d57600080fd5b50356001600160a01b03166114ab565b3480156106a957600080fd5b5061046c600480360360408110156106c057600080fd5b810190602081018135600160201b8111156106da57600080fd5b8201836020820111156106ec57600080fd5b803590602001918460208302840111600160201b8311171561070d57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b031691506114ce9050565b34801561076257600080fd5b5061046c6004803603602081101561077957600080fd5b5035611ba5565b34801561078c57600080fd5b5061040a600480360360208110156107a357600080fd5b50356001600160a01b0316611be0565b3480156107bf57600080fd5b5061040a600480360360408110156107d657600080fd5b506001600160a01b0381358116916020013516611bf2565b3480156107fa57600080fd5b5061040a611c0f565b34801561080f57600080fd5b5061040a6004803603602081101561082657600080fd5b50356001600160a01b0316611c15565b34801561084257600080fd5b5061084b611c27565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561088757818101518382015260200161086f565b505050509050019250505060405180910390f35b3480156108a757600080fd5b5061046c611c89565b3480156108bc57600080fd5b5061040a600480360360408110156108d357600080fd5b506001600160a01b0381358116916020013516611cb6565b3480156108f757600080fd5b5061040a611e1d565b34801561090c57600080fd5b5061084b6004803603602081101561092357600080fd5b50356001600160a01b0316611e23565b34801561093f57600080fd5b5061046c611e99565b34801561095457600080fd5b5061040a6004803603604081101561096b57600080fd5b506001600160a01b0381358116916020013516612165565b34801561098f57600080fd5b5061040a61219a565b3480156109a457600080fd5b5061040a6121a0565b3480156109b957600080fd5b5061046c600480360360208110156109d057600080fd5b50356121c5565b3480156109e357600080fd5b5061040a600480360360408110156109fa57600080fd5b506001600160a01b0381358116916020013516612200565b348015610a1e57600080fd5b5061040a60048036036040811015610a3557600080fd5b506001600160a01b0381358116916020013516612370565b348015610a5957600080fd5b5061046c60048036036060811015610a7057600080fd5b508035906020810135906040013561238d565b348015610a8f57600080fd5b50610a986124ad565b6040518080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015610ade578181015183820152602001610ac6565b50505050905001935050505060405180910390f35b348015610aff57600080fd5b5061040a612510565b348015610b1457600080fd5b5061046c60048036036020811015610b2b57600080fd5b50356001600160a01b0316612516565b348015610b4757600080fd5b5061084b60048036036060811015610b5e57600080fd5b506001600160a01b038135169060208101359060400135612586565b348015610b8657600080fd5b5061084b60048036036020811015610b9d57600080fd5b50356001600160a01b03166126c5565b348015610bb957600080fd5b5061040a60048036036040811015610bd057600080fd5b506001600160a01b0381358116916020013516612739565b348015610bf457600080fd5b5061061560048036036060811015610c0b57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115610c3a57600080fd5b820183602082011115610c4c57600080fd5b803590602001918460018302840111600160201b83111715610c6d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612756945050505050565b348015610cba57600080fd5b5061084b61275d565b348015610ccf57600080fd5b5061040a60048036036040811015610ce657600080fd5b506001600160a01b03813581169160200135166127bd565b348015610d0a57600080fd5b5061040a60048036036020811015610d2157600080fd5b50356001600160a01b03166127da565b348015610d3d57600080fd5b5061061560048036036020811015610d5457600080fd5b50356001600160a01b03166127f5565b61046c60048036036040811015610d7a57600080fd5b506001600160a01b03813516906020013561284d565b348015610d9c57600080fd5b5061040a60048036036020811015610db357600080fd5b50356001600160a01b0316612857565b348015610dcf57600080fd5b5061046c60048036036040811015610de657600080fd5b506001600160a01b038135169060200135612869565b348015610e0857600080fd5b5061040a60048036036040811015610e1f57600080fd5b506001600160a01b0381358116916020013516612c64565b348015610e4357600080fd5b5061046c60048036036020811015610e5a57600080fd5b50356001600160a01b0316612c81565b348015610e7657600080fd5b5061084b612e79565b348015610e8b57600080fd5b5061046c612ed9565b348015610ea057600080fd5b5061040a612f03565b348015610eb557600080fd5b5061040a612f09565b348015610eca57600080fd5b5061040a60048036036020811015610ee157600080fd5b50356001600160a01b0316612f0f565b348015610efd57600080fd5b5061084b612f21565b348015610f1257600080fd5b50610f1b612f81565b604080516001600160a01b039092168252519081900360200190f35b348015610f4357600080fd5b5061061560048036036020811015610f5a57600080fd5b50356001600160a01b0316612f90565b348015610f7657600080fd5b5061040a60048036036040811015610f8d57600080fd5b506001600160a01b0381358116916020013516612fae565b348015610fb157600080fd5b5061046c612fcb565b348015610fc657600080fd5b5061040a60048036036020811015610fdd57600080fd5b50356001600160a01b031661318e565b348015610ff957600080fd5b5061046c6131a0565b34801561100e57600080fd5b5061040a6131c2565b34801561102357600080fd5b5061046c6004803603604081101561103a57600080fd5b506001600160a01b0381351690602001356131c8565b34801561105c57600080fd5b5061061561324c565b34801561107157600080fd5b5061040a6004803603602081101561108857600080fd5b50356001600160a01b0316613284565b3480156110a457600080fd5b5061040a600480360360608110156110bb57600080fd5b810190602081018135600160201b8111156110d557600080fd5b8201836020820111156110e757600080fd5b803590602001918460208302840111600160201b8311171561110857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b0383358116945060209093013590921691506132969050565b602660209081526000938452604080852082529284528284209052825290205481565b602a60209081526000928352604080842090915290825290205481565b6039546001600160a01b031633146111b357600080fd5b6060600380548060200260200160405190810160405280929190818152602001828054801561120b57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116111ed575b50939450600093505050505b81518110156112445761123c82828151811061122f57fe5b6020026020010151613724565b600101611217565b5050565b8261125257600080fd5b80831161125e57600080fd5b8061126857600080fd5b6112a9888888808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508a92508991506138799050565b6036929092556034919091556037555050505050565b6039546001600160a01b031633146112d657600080fd5b603755565b6112e3613a3d565b6001600160a01b0316336001600160a01b03161461130057600080fd5b611308611499565b61131157600080fd5b603655565b3a61132057600080fd5b611328611499565b61133157600080fd5b816001600160a01b0316836001600160a01b0316141561135057600080fd5b3361135c848284613a62565b611367838284613c03565b603554604080516001600160a01b03878116825260208201869052825181861693918816927f4480d8e4b1e9095b94bf513961d26fe1d32386ebdd103d18fe8738cf4b2223ff92908290030190a450505050565b6113c3613a3d565b6001600160a01b0316336001600160a01b0316146113e057600080fd5b6113e8611499565b6113f157600080fd5b602555565b603060209081526000938452604080852082529284528284209052825290205460ff1681565b60395460408051630526083960e11b81526001600160a01b0384811660048301523360248301819052925192931691630a4c10729160448082019260009290919082900301818387803b15801561147257600080fd5b505af1158015611486573d6000803e3d6000fd5b505050506114948184614012565b505050565b6039546001600160a01b031615155b90565b6039546001600160a01b031633146114c257600080fd5b6114cb81613724565b50565b3a6114d857600080fd5b6114e0611499565b6114e957600080fd5b603954604080516307b9342f60e21b8152336004820181905291519192600092839283926001600160a01b031691631ee4d0bc91602480820192602092909190829003018186803b15801561153d57600080fd5b505afa158015611551573d6000803e3d6000fd5b505050506040513d602081101561156757600080fd5b505190506001600160a01b038116156115d85761158381612f90565b6115d4576040805162461bcd60e51b815260206004820181905260248201527f6d696e696e6720636c61696d2063616c6c206973206e6f7420616c6c6f776564604482015290519081900360640190fd5b8093505b836001600160a01b0316856001600160a01b03161461164c576001600160a01b0380861660009081526032602090815260408083209388168352929052205492508261162357600080fd5b6001600160a01b0380861660009081526033602090815260408083209388168352929052205491505b60395460408051632b5aa5d760e11b815290516000926001600160a01b0316916356b54bae916004808301926020929190829003018186803b15801561169157600080fd5b505afa1580156116a5573d6000803e3d6000fd5b505050506040513d60208110156116bb57600080fd5b5051603954604080516253517560e01b81526001600160a01b038a811660048301529151939450600093919092169162535175916024808301926020929190829003018186803b15801561170e57600080fd5b505afa158015611722573d6000803e3d6000fd5b505050506040513d602081101561173857600080fd5b50518851909150600090819061182a57836001600160a01b031663dd03f5b9846040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060006040518083038186803b15801561179e57600080fd5b505afa1580156117b2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156117db57600080fd5b810190808051600160201b8111156117f257600080fd5b8201602081018481111561180557600080fd5b81518560208202830111600160201b8211171561182157600080fd5b50909d50505050505b60005b8a51811015611b205760008b828151811061184457fe5b60200260200101519050816000148061187257508b600183038151811061186757fe5b602002602001015181115b61187b57600080fd5b603554811061188957600080fd5b6001600160a01b03808c166000908152603060209081526040808320938e1683529281528282208483529052205460ff16156118c55750611b18565b60008a6001600160a01b03168c6001600160a01b0316146119b857898210156118ef575050611b18565b8189111580156118fe57508815155b1561190a575050611b20565b611917828b868f8f61408e565b9350816001019950866001600160a01b031663e1ab96d88584896040518463ffffffff1660e01b815260040180848152602001838152602001826001600160a01b03166001600160a01b03168152602001935050505060206040518083038186803b15801561198557600080fd5b505afa158015611999573d6000803e3d6000fd5b505050506040513d60208110156119af57600080fd5b50519050611a45565b866001600160a01b031663ba2d759783886040518363ffffffff1660e01b815260040180838152602001826001600160a01b03166001600160a01b031681526020019250505060206040518083038186803b158015611a1657600080fd5b505afa158015611a2a573d6000803e3d6000fd5b505050506040513d6020811015611a4057600080fd5b505190505b611a55858263ffffffff61410316565b94506001603060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff021916908315150217905550818b6001600160a01b03168d6001600160a01b03167fd3208fd5300db64b97bc442f47ade72b7ebcd9272aaecdcc04c777bb762861b9846040518082815260200191505060405180910390a450505b60010161182d565b50836001600160a01b031663469507c6838a6040518363ffffffff1660e01b815260040180838152602001826001600160a01b03166001600160a01b0316815260200192505050600060405180830381600087803b158015611b8157600080fd5b505af1158015611b95573d6000803e3d6000fd5b5050505050505050505050505050565b611bad613a3d565b6001600160a01b0316336001600160a01b031614611bca57600080fd5b611bd2611499565b611bdb57600080fd5b602455565b60386020526000908152604090205481565b603260209081526000928352604080842090915290825290205481565b60245481565b602c6020526000908152604090205481565b60606000805480602002602001604051908101604052809291908181526020018280548015611c7f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611c61575b5050505050905090565b611c91611499565b611c9a57600080fd5b336000908152605360205260409020805460ff19166001179055565b603954604080516253517560e01b81526001600160a01b03858116600483015291516000938493169162535175916024808301926020929190829003018186803b158015611d0357600080fd5b505afa158015611d17573d6000803e3d6000fd5b505050506040513d6020811015611d2d57600080fd5b50519050611d4a816001600160a01b038681169086161415614115565b611d58576000915050611e17565b6001600160a01b038085166000908152603160209081526040808320878516845282529182902054603954835163a0d16cad60e01b8152868616600482015293519194169263a0d16cad926024808301939192829003018186803b158015611dbf57600080fd5b505afa158015611dd3573d6000803e3d6000fd5b505050506040513d6020811015611de957600080fd5b5051611df8579150611e179050565b6000611e048686612165565b905080821115611e12578091505b509150505b92915050565b60375481565b6001600160a01b038116600090815260076020908152604091829020805483518184028101840190945280845260609392830182828015611e8d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611e6f575b50505050509050919050565b603960009054906101000a90046001600160a01b03166001600160a01b03166356b54bae6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ee757600080fd5b505afa158015611efb573d6000803e3d6000fd5b505050506040513d6020811015611f1157600080fd5b50516001600160a01b03163314611f2757600080fd5b611f2f611499565b611f3857600080fd5b600b5415801590611f4d5750600b5460365414155b15611f5e57600b8054603655600090555b600c5415801590611f735750600c5460345414155b15611f8457600c8054603455600090555b6039546040805163ccf69e9b60e01b815290516000926001600160a01b03169163ccf69e9b916004808301926020929190829003018186803b158015611fc957600080fd5b505afa158015611fdd573d6000803e3d6000fd5b505050506040513d6020811015611ff357600080fd5b50516040805163071df16360e21b815290516001600160a01b0390921691631c77c58c91600480820192602092909190829003018186803b15801561203757600080fd5b505afa15801561204b573d6000803e3d6000fd5b505050506040513d602081101561206157600080fd5b5051600d54909150158015906120795750600d548114155b156114cb57603960009054906101000a90046001600160a01b03166001600160a01b031663ccf69e9b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156120cc57600080fd5b505afa1580156120e0573d6000803e3d6000fd5b505050506040513d60208110156120f657600080fd5b5051600d54604080516366aae47b60e11b81526004810192909252516001600160a01b039092169163cd55c8f69160248082019260009290919082900301818387803b15801561214557600080fd5b505af1158015612159573d6000803e3d6000fd5b50506000600d55505050565b6001600160a01b039182166000908152600a602090815260408083209390941682529182528281206035548252909152205490565b60355481565b60375460009080156121b35760016121b6565b60005b60ff1660365482010391505090565b6121cd613a3d565b6001600160a01b0316336001600160a01b0316146121ea57600080fd5b6121f2611499565b6121fb57600080fd5b603455565b603954604080516253517560e01b81526001600160a01b03858116600483015291516000938493169162535175916024808301926020929190829003018186803b15801561224d57600080fd5b505afa158015612261573d6000803e3d6000fd5b505050506040513d602081101561227757600080fd5b50519050612294816001600160a01b038681169086161415614115565b6122a2576000915050611e17565b6039546040805163a0d16cad60e01b81526001600160a01b0384811660048301529151919092169163a0d16cad916024808301926020929190829003018186803b1580156122ef57600080fd5b505afa158015612303573d6000803e3d6000fd5b505050506040513d602081101561231957600080fd5b5051612329576000915050611e17565b6123686123368585612165565b6001600160a01b038087166000908152603160209081526040808320938916835292905220549063ffffffff61424b16565b949350505050565b602b60209081526000928352604080842090915290825290205481565b612395613a3d565b6001600160a01b0316336001600160a01b0316146123b257600080fd5b6123ba611499565b6123c357600080fd5b826123cd57600080fd5b8183116123d957600080fd5b8083816123e257fe5b06156123ed57600080fd5b60028106156123fb57600080fd5b603960009054906101000a90046001600160a01b03166001600160a01b031663714897df6040518163ffffffff1660e01b815260040160206040518083038186803b15801561244957600080fd5b505afa15801561245d573d6000803e3d6000fd5b505050506040513d602081101561247357600080fd5b5051818161247d57fe5b061561248857600080fd5b821561249457600b8390555b81156124a057600c8290555b801561149457600d555050565b6060600060046005548180548060200260200160405190810160405280929190818152602001828054801561250157602002820191906000526020600020905b8154815260200190600101908083116124ed575b50505050509150915091509091565b60345481565b6039546001600160a01b0316331461252d57600080fd5b6001600160a01b03811661254057600080fd5b6001600160a01b03811660009081526031602090815260408083209091529020541561257d5761256f81614260565b6125788161434f565b6114cb565b6114cb8161440f565b6001600160a01b038316600090815260086020526040902060609082612604578054604080516020808402820181019092528281529183918301828280156125f757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116125d9575b50505050509150506126be565b8054600090612619908663ffffffff61424b16565b9050808411612628578361262a565b805b604051908082528060200260200182016040528015612653578160200160208202803883390190505b50925060005b83518110156126ba57828187018154811061267057fe5b9060005260206000200160009054906101000a90046001600160a01b031684828151811061269a57fe5b6001600160a01b0390921660209283029190910190910152600101612659565b5050505b9392505050565b6001600160a01b038116600090815260066020908152604091829020805483518184028101840190945280845260609392830182828015611e8d576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311611e6f5750505050509050919050565b602960209081526000928352604080842090915290825290205481565b6000806000fd5b60606002805480602002602001604051908101604052809291908181526020018280548015611c7f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311611c61575050505050905090565b603160209081526000928352604080842090915290825290205481565b6001600160a01b031660009081526008602052604090205490565b6001600160a01b0381166000908152602d60205260408120548154811080156126be5750826001600160a01b03166000828154811061283057fe5b6000918252602090912001546001600160a01b0316149392505050565b6112448282614012565b602d6020526000908152604090205481565b3a61287357600080fd5b61287b611499565b61288457600080fd5b6001600160a01b03821661289757600080fd5b806128a157600080fd5b603954604080516253517560e01b81526001600160a01b0385811660048301529151339361293093169162535175916024808301926020929190829003018186803b1580156128ef57600080fd5b505afa158015612903573d6000803e3d6000fd5b505050506040513d602081101561291957600080fd5b50516001600160a01b038381169086161415614115565b61293957600080fd5b6001600160a01b0380841660008181526027602090815260408083209486168084529482528083205484845260288352818420546031845282852096855295835281842054948452603890925282205490939291861315612a23578561299f8887612200565b8111156129ab57600080fd5b6129bb858263ffffffff61410316565b94506129cd848263ffffffff61410316565b93506129df838263ffffffff61424b16565b92506129f1828263ffffffff61424b16565b6035546001600160a01b03808b166000908152602960209081526040808320938c16835292905220559150612a729050565b6000869003612a38858263ffffffff61424b16565b9450612a4a848263ffffffff61424b16565b9350612a5c838263ffffffff61410316565b9250612a6e828263ffffffff61410316565b9150505b6001600160a01b038088166000818152602760209081526040808320948a1680845294825280832089905583835260288252808320889055603182528083208584528252808320879055838352603890915290208390551415612bbb57811580612ade57506024548210155b612ae757600080fd5b60395460408051633820c4e560e11b815290516000926001600160a01b03169163704189ca916004808301926020929190829003018186803b158015612b2c57600080fd5b505afa158015612b40573d6000803e3d6000fd5b505050506040513d6020811015612b5657600080fd5b505190506000871315612b965782158015612b835750806001600160a01b0316886001600160a01b031614155b15612b9157612b918861440f565b612bb5565b612bb588826001600160a01b03168a6001600160a01b031614156144cd565b50612c04565b811580612bca57506025548210155b612bd357600080fd5b6000861315612bf05781612beb57612beb8786614596565b612bfa565b612bfa87866146ee565b612c0487866147b0565b612c0d8761434f565b603554856001600160a01b0316886001600160a01b03167f80d5c777e5f7ac6ee89723223803ca5c0ec0204f89e99c1b0cde973c66a64594896040518082815260200191505060405180910390a450505050505050565b603360209081526000928352604080842090915290825290205481565b3a612c8b57600080fd5b612c93611499565b612c9c57600080fd5b6001600160a01b03811660009081526029602090815260408083203380855292529091205460355411612cce57600080fd5b603954604080516253517560e01b81526001600160a01b0385811660048301529151612d5f9392909216916253517591602480820192602092909190829003018186803b158015612d1e57600080fd5b505afa158015612d32573d6000803e3d6000fd5b505050506040513d6020811015612d4857600080fd5b50516001600160a01b038381169085161415614115565b612d6857600080fd5b6001600160a01b0380831660009081526027602090815260408083209385168352929052205480612d9857600080fd5b6001600160a01b038084166000818152602760209081526040808320948716835293815283822082905591815260289091522054612ddc908263ffffffff61424b16565b6001600160a01b03808516600090815260286020908152604080832094909455603181528382209286168252919091522054612e1c57612e1c83836148a2565b612e268282614a7d565b603554826001600160a01b0316846001600160a01b03167ff380b0bc887e00f5b50d3c9d4eaaf5c9a0afd97b956316b995159384c4ede9b3846040518082815260200191505060405180910390a4505050565b60606003805480602002602001604051908101604052809291908181526020018280548015611c7f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311611c61575050505050905090565b612ee1611499565b612eea57600080fd5b336000908152605360205260409020805460ff19169055565b60365481565b60255481565b60286020526000908152604090205481565b60606001805480602002602001604051908101604052809291908181526020018280548015611c7f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311611c61575050505050905090565b6039546001600160a01b031681565b6001600160a01b031660009081526053602052604090205460ff1690565b602760209081526000928352604080842090915290825290205481565b3a612fd557600080fd5b612fdd611499565b612fe657600080fd5b603954604080516253517560e01b81523360048201819052915191926000926001600160a01b039091169162535175916024808301926020929190829003018186803b15801561303557600080fd5b505afa158015613049573d6000803e3d6000fd5b505050506040513d602081101561305f57600080fd5b50516035549091501515806130ea57506039546040805163facd743b60e01b81526001600160a01b0384811660048301529151919092169163facd743b916024808301926020929190829003018186803b1580156130bc57600080fd5b505afa1580156130d0573d6000803e3d6000fd5b505050506040513d60208110156130e657600080fd5b5051155b6130f357600080fd5b603960009054906101000a90046001600160a01b03166001600160a01b031663704189ca6040518163ffffffff1660e01b815260040160206040518083038186803b15801561314157600080fd5b505afa158015613155573d6000803e3d6000fd5b505050506040513d602081101561316b57600080fd5b50516001600160a01b038381169116141561318557600080fd5b61124482613724565b602f6020526000908152604090205481565b6039546001600160a01b031633146131b757600080fd5b603580546001019055565b610bb881565b3a6131d257600080fd5b6131da611499565b6131e357600080fd5b336131ef838284613a62565b6131f98183614a7d565b603554816001600160a01b0316846001600160a01b03167fa7c0f0cac6bd4d18042007706c84a8abe823751cf289b69c01e83eef7b5915c7856040518082815260200191505060405180910390a4505050565b600080613257614ae0565b6034546036546037549293500390821015613277576000925050506114a8565b6037549091031115905090565b602e6020526000908152604090205481565b6000806000836001600160a01b0316856001600160a01b03161461330e576001600160a01b038086166000908152603260209081526040808320938816835292905220549150816132e657600080fd5b506001600160a01b038085166000908152603360209081526040808320938716835292905220545b60395460408051632b5aa5d760e11b815290516000926001600160a01b0316916356b54bae916004808301926020929190829003018186803b15801561335357600080fd5b505afa158015613367573d6000803e3d6000fd5b505050506040513d602081101561337d57600080fd5b5051603954604080516253517560e01b81526001600160a01b038a811660048301529151939450600093919092169162535175916024808301926020929190829003018186803b1580156133d057600080fd5b505afa1580156133e4573d6000803e3d6000fd5b505050506040513d60208110156133fa57600080fd5b505188516000965090915085906134ed57826001600160a01b031663dd03f5b9836040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060006040518083038186803b15801561346157600080fd5b505afa158015613475573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561349e57600080fd5b810190808051600160201b8111156134b557600080fd5b820160208101848111156134c857600080fd5b81518560208202830111600160201b821117156134e457600080fd5b50909c50505050505b60005b89518110156137175760008a828151811061350757fe5b60200260200101519050816000148061353557508a600183038151811061352a57fe5b602002602001015181115b61353e57600080fd5b603554811061354c57600080fd5b6001600160a01b03808b166000908152603060209081526040808320938d1683529281528282208483529052205460ff1615613588575061370f565b6000896001600160a01b03168b6001600160a01b03161461367b57878210156135b257505061370f565b8187111580156135c157508615155b156135cd575050613717565b6135da8289868e8e61408e565b9350816001019750856001600160a01b031663e1ab96d88584886040518463ffffffff1660e01b815260040180848152602001838152602001826001600160a01b03166001600160a01b03168152602001935050505060206040518083038186803b15801561364857600080fd5b505afa15801561365c573d6000803e3d6000fd5b505050506040513d602081101561367257600080fd5b50519050613708565b856001600160a01b031663ba2d759783876040518363ffffffff1660e01b815260040180838152602001826001600160a01b03166001600160a01b031681526020019250505060206040518083038186803b1580156136d957600080fd5b505afa1580156136ed573d6000803e3d6000fd5b505050506040513d602081101561370357600080fd5b505190505b9790970196505b6001016134f0565b5050505050509392505050565b6001600160a01b0381166000908152602d60205260408120549054811080156137765750816001600160a01b03166000828154811061375f57fe5b6000918252602090912001546001600160a01b0316145b1561384257600080548190600019810190811061378f57fe5b600091825260208220015481546001600160a01b039091169250829190849081106137b657fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790558383168252602d90526040808220859055918516815290812081905580549061380b90600019830161518e565b506040516001600160a01b038416907fa594a98df279c030a78f76e64f370882494d1a6fcedd0bd0d636d4608e1eb9f990600090a2505b61384b82614ae4565b1561385e5761385982614b22565b613867565b61386782614c0e565b61387082614cc6565b61124482614e6a565b613881614ae0565b15806138a55750613890613a3d565b6001600160a01b0316336001600160a01b0316145b6138ae57600080fd5b6138b6611499565b156138c057600080fd5b6001600160a01b0384166138d357600080fd5b60008351116138e157600080fd5b816138eb57600080fd5b806138f557600080fd5b603980546001600160a01b0319166001600160a01b03868116919091179182905560408051633820c4e560e11b815290516000939092169163704189ca91600480820192602092909190829003018186803b15801561395357600080fd5b505afa158015613967573d6000803e3d6000fd5b505050506040513d602081101561397d57600080fd5b5051905060005b8451811015613a2e5760006001600160a01b03168582815181106139a457fe5b60200260200101516001600160a01b031614156139c057600080fd5b6139de8582815181106139cf57fe5b602002602001015160006144cd565b816001600160a01b03168582815181106139f457fe5b60200260200101516001600160a01b031614613a2657613a26858281518110613a1957fe5b602002602001015161440f565b600101613984565b50506025919091556024555050565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b6001600160a01b038316613a7557600080fd5b80613a7f57600080fd5b613a898383611cb6565b811115613a9557600080fd5b6001600160a01b038084166000908152603160209081526040808320938616835292905290812054613acd908363ffffffff61424b16565b90506000836001600160a01b0316856001600160a01b031614613af257602554613af6565b6024545b9050811580613b055750808210155b613b0e57600080fd5b6001600160a01b0380861660009081526031602090815260408083209388168352929052908120839055613b428686612165565b905083811015613b53576000613b57565b8381035b6001600160a01b038088166000818152600a60209081526040808320948b16835293815283822060355483528152838220949094559081526038909252902054613ba7908563ffffffff61424b16565b6001600160a01b03871660009081526038602052604090205582613bcf57613bcf86866148a2565b856001600160a01b0316856001600160a01b031614613bf257613bf286866147b0565b613bfb8661434f565b505050505050565b603954604080516253517560e01b81526001600160a01b038681166004830152915160009392909216916253517591602480820192602092909190829003018186803b158015613c5257600080fd5b505afa158015613c66573d6000803e3d6000fd5b505050506040513d6020811015613c7c57600080fd5b505190506001600160a01b038116613c9357600080fd5b6001600160a01b038416613ca657600080fd5b81613cb057600080fd5b60395460408051635491295760e11b81526001600160a01b0384811660048301529151919092169163a92252ae916024808301926020929190829003018186803b158015613cfd57600080fd5b505afa158015613d11573d6000803e3d6000fd5b505050506040513d6020811015613d2757600080fd5b505115613d3357600080fd5b613d3b61324c565b613d4457600080fd5b6001600160a01b038085166000908152603160209081526040808320938716835292905290812054613d7c908463ffffffff61410316565b9050846001600160a01b0316846001600160a01b03161415613dac57602454811015613da757600080fd5b613de5565b602554811015613dbb57600080fd5b6001600160a01b0385166000908152603160209081526040808320909152902054613de557600080fd5b6001600160a01b038086166000908152603160209081526040808320938816835292905220819055613e2783613e1b8787612165565b9063ffffffff61410316565b6001600160a01b038087166000818152600a60209081526040808320948a16835293815283822060355483528152838220949094559081526038909252902054613e77908463ffffffff61410316565b6001600160a01b0380871660008181526038602052604090209290925585161415613f3357613f2e85603960009054906101000a90046001600160a01b03166001600160a01b031663704189ca6040518163ffffffff1660e01b815260040160206040518083038186803b158015613eee57600080fd5b505afa158015613f02573d6000803e3d6000fd5b505050506040513d6020811015613f1857600080fd5b50516001600160a01b03888116911614156144cd565b613f47565b613f3d85856146ee565b613f4785856147b0565b613f508561434f565b6001600160a01b03808516600090815260086020908152604080832060098352818420948a16845293909152902054815481101580613fb85750866001600160a01b0316828281548110613fa057fe5b6000918252602090912001546001600160a01b031614155b156140095781546001600160a01b038088166000908152600960209081526040808320938c168084529382528220849055600184018655858252902090910180546001600160a01b03191690911790555b50505050505050565b3a61401c57600080fd5b614024611499565b61402d57600080fd5b50343361403b838284613c03565b603554816001600160a01b0316846001600160a01b03167f2273de02cb1f69ba6259d22c4bc22c60e4c94c193265ef6afee324a04a9b6d22856040518082815260200191505060405180910390a4505050565b60005b506001600160a01b03808316600090815260266020908152604080832093851683529281528282208883529052205480156140df5760001981146140d557806140d8565b60005b90506140fa565b848614156140ee5750826140fa565b60001990950194614091565b95945050505050565b6000828201838110156126be57600080fd5b600081156141a8576039546040805163a881c5fd60e01b81526001600160a01b0386811660048301529151919092169163a881c5fd916024808301926020929190829003018186803b15801561416a57600080fd5b505afa15801561417e573d6000803e3d6000fd5b505050506040513d602081101561419457600080fd5b5051156141a357506000611e17565b61422e565b60395460408051635491295760e11b81526001600160a01b0386811660048301529151919092169163a92252ae916024808301926020929190829003018186803b1580156141f557600080fd5b505afa158015614209573d6000803e3d6000fd5b505050506040513d602081101561421f57600080fd5b50511561422e57506000611e17565b61423661324c565b61424257506000611e17565b50600192915050565b60008282111561425a57600080fd5b50900390565b6001600160a01b0381166000908152602e602052604090205460025480821015806142b55750826001600160a01b03166002838154811061429d57fe5b6000918252602090912001546001600160a01b031614155b15614346576001600160a01b0383166000818152602e602052604081208390556002805460018181019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b03191690931790925560048054928301815581527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b909101555b61149483614e6a565b60008061435b83614f56565b915091508161436b5750506114cb565b60006004828154811061437a57fe5b90600052602060002001549050600060386000866001600160a01b03166001600160a01b0316815260200190815260200160002054905080600484815481106143bf57fe5b6000918252602090912001558181106143ef576005546143e79083830363ffffffff61410316565b600555614408565b6005546144049082840363ffffffff61424b16565b6005555b5050505050565b6001600160a01b0381166000908152602f602052604090205460035480821015806144645750826001600160a01b03166003838154811061444c57fe5b6000918252602090912001546001600160a01b031614155b156144c4576001600160a01b0383166000818152602f602052604081208390556003805460018101825591527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b03191690911790555b61149483614cc6565b6144d6826127f5565b61457e57600080546001600160a01b038416808352602d602052604083208290556001820183559180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b031916909117905561453b614fc3565b600054111561454957600080fd5b6040516001600160a01b038316907fd26e92d2046eac29686a6b001477592c752fb2045b2875e4e96f567ad735269d90600090a25b61458782614b22565b80156112445761124482614260565b6001600160a01b038083166000908152600660209081526040808320602a83528184209486168452939091529020548154811080156145fd5750826001600160a01b03168282815481106145e657fe5b6000918252602090912001546001600160a01b0316145b156146a45781546000908390600019810190811061461757fe5b9060005260206000200160009054906101000a90046001600160a01b031690508083838154811061464457fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790558783168252602a81526040808320858516845290915280822085905591861681529081205582546146a184600019830161518e565b50505b6001600160a01b03808516600090815260276020908152604080832093871683529290522054156146de576146d98484614fc9565b6146e8565b6146e88484615087565b50505050565b6001600160a01b038083166000908152600660209081526040808320602a8352818420948616845293909152902054815480821015806147575750836001600160a01b031683838154811061473f57fe5b6000918252602090912001546001600160a01b031614155b156147a6576001600160a01b038086166000908152602a602090815260408083209388168084529382528220849055855460018101875586835291200180546001600160a01b03191690911790555b6144088585615087565b6035546001600160a01b03808416600090815260316020908152604080832093861683529290522054600190910190806147ec576000196147ee565b805b6001600160a01b038086166000818152602660209081526040808320948916808452948252808320888452825280832095909555918152603282528381209281529190522054614861576001600160a01b0380851660009081526032602090815260408083209387168352929052208290555b801561486e576000614870565b815b6001600160a01b0394851660009081526033602090815260408083209690971682529490945293909220929092555050565b816001600160a01b0316816001600160a01b03161415614a5c5760395460408051633820c4e560e11b815290516000926001600160a01b03169163704189ca916004808301926020929190829003018186803b15801561490157600080fd5b505afa158015614915573d6000803e3d6000fd5b505050506040513d602081101561492b57600080fd5b505190506001600160a01b0383811690821614614a5657603954604080516253517560e01b81526001600160a01b038681166004830152915160009392909216916253517591602480820192602092909190829003018186803b15801561499157600080fd5b505afa1580156149a5573d6000803e3d6000fd5b505050506040513d60208110156149bb57600080fd5b50516039546040805163facd743b60e01b81526001600160a01b038085166004830152915193945091169163facd743b91602480820192602092909190829003018186803b158015614a0c57600080fd5b505afa158015614a20573d6000803e3d6000fd5b505050506040513d6020811015614a3657600080fd5b505115614a4b57614a468461440f565b614a54565b614a5484613724565b505b50611244565b614a668282614596565b614a6f82614ae4565b156112445761124482614b22565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050611244578082604051614ab4906151b2565b6001600160a01b039091168152604051908190036020019082f080158015614408573d6000803e3d6000fd5b4390565b6001600160a01b038116600090815260386020526040812054158015611e175750506001600160a01b03166000908152602860205260409020541590565b6001600160a01b0381166000908152602c602052604090205460015481108015614b755750816001600160a01b031660018281548110614b5e57fe5b6000918252602090912001546001600160a01b0316145b156112445760018054600091906000198101908110614b9057fe5b600091825260209091200154600180546001600160a01b039092169250829184908110614bb957fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790558383168252602c9052604080822085905591851681529081205560018054906146e890600019830161518e565b6001600160a01b0381166000908152602c60205260409020546001548082101580614c635750826001600160a01b031660018381548110614c4b57fe5b6000918252602090912001546001600160a01b031614155b15611494576001600160a01b0383166000818152602c6020526040812083905560018054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319169091179055505050565b60045460025414614cd6576114cb565b6001600160a01b0381166000908152602e602052604090205460025481108015614d295750816001600160a01b031660028281548110614d1257fe5b6000918252602090912001546001600160a01b0316145b156112445760048181548110614d3b57fe5b906000526020600020015460055410614d765760048181548110614d5b57fe5b60009182526020909120015460058054919091039055614d7c565b60006005555b6002805460001981019160009183908110614d9357fe5b600091825260209091200154600280546001600160a01b039092169250829185908110614dbc57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060048281548110614df757fe5b906000526020600020015460048481548110614e0f57fe5b60009182526020808320909101929092556001600160a01b038084168252602e90925260408082208690559186168152908120556002805490614e5690600019830161518e565b50600480549061440890600019830161518e565b6001600160a01b0381166000908152602f602052604090205460035481108015614ebd5750816001600160a01b031660038281548110614ea657fe5b6000918252602090912001546001600160a01b0316145b156112445760038054600091906000198101908110614ed857fe5b600091825260209091200154600380546001600160a01b039092169250829184908110614f0157fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790558383168252602f9052604080822085905591851681529081205560038054906146e890600019830161518e565b6001600160a01b0381166000908152602e602052604081205460025481108015614fa95750826001600160a01b031660028281548110614f9257fe5b6000918252602090912001546001600160a01b0316145b15614fb75760019150614fbe565b5060009050805b915091565b610bb890565b6001600160a01b038083166000908152600760209081526040808320602b8352818420948616845293909152902054815480821015806150325750836001600160a01b031683838154811061501a57fe5b6000918252602090912001546001600160a01b031614155b15614408576001600160a01b038086166000908152602b602090815260408083209388168084529382528220849055855460018101875586835291200180546001600160a01b03191690911790555050505050565b6001600160a01b038083166000908152600760209081526040808320602b83528184209486168452939091529020548154811080156150ee5750826001600160a01b03168282815481106150d757fe5b6000918252602090912001546001600160a01b0316145b156146e85781546000908390600019810190811061510857fe5b9060005260206000200160009054906101000a90046001600160a01b031690508083838154811061513557fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790558783168252602b8152604080832085851684529091528082208590559186168152908120558254613bfb8460001983015b815481835581811115611494576000838152602090206114949181019083016151be565b6032806151dd83390190565b6114a891905b808211156151d857600081556001016151c4565b509056fe60806040526040516032380380603283398181016040526020811015602357600080fd5b50516001600160a01b038116fffea265627a7a72305820752bae461158a869704ca5ca69d10353980f521793177a8b7d0bd63a9a079efb64736f6c634300050a0032",
  "deployedBytecode": "0x6080604052600436106103c25760003560e01c806397997ebb116101f2578063d53651701161010d578063edd7db75116100a0578063f3fef3a31161006f578063f3fef3a314611017578063f494250114611050578063fa4aaf4714611065578063fb367a9b14611098576103c2565b8063edd7db7514610fa5578063edf94b8214610fba578063ee435f5514610fed578063f078609614611002576103c2565b8063df6f55f5116100dc578063df6f55f514610ef1578063dfc8bf4e14610f06578063e9471b1c14610f37578063e9ab030014610f6a576103c2565b8063d536517014610e7f578063d609ea9314610e94578063da7a9b6a14610ea9578063dadee88a14610ebe576103c2565b8063a6a3a25611610185578063b61ed63a11610154578063b61ed63a14610dc3578063bc9eb2c314610dfc578063cfef144114610e37578063d290c21d14610e6a576103c2565b8063a6a3a25614610cfe578063a711e6a114610d31578063adc9772e14610d64578063b42754a514610d90576103c2565b8063a4205967116101c1578063a420596714610bad578063a4c0ed3614610be8578063a5d54f6514610cae578063a697ecff14610cc3576103c2565b806397997ebb14610af357806398c46b9014610b085780639dc7798814610b3b5780639ea8082b14610b7a576103c2565b80635fef7643116102e2578063750dd2a111610275578063950a651311610244578063950a6513146109d75780639518c48114610a12578063954a35f714610a4d578063957950a714610a83576103c2565b8063750dd2a114610948578063794c0c68146109835780638c2243ae146109985780638efe5e49146109ad576103c2565b80636bda1577116102b15780636bda1577146108b05780637069e746146108eb57806373c218031461090057806374d9654214610933576103c2565b80635fef7643146107ee5780636511391814610803578063673a2a1f146108365780636ada686a1461089b576103c2565b8063317277301161035a5780633ea15d62116103295780633ea15d621461069d57806348aaa4a2146107565780635267e1d6146107805780635659b742146107b3576103c2565b806331727730146105d257806333ba888214610629578063392e53cd146106555780633b7d09461461066a576103c2565b806320d96e461161039657806320d96e46146105115780632474435a1461053b578063251441a9146105655780632bafde8d146105a8576103c2565b80622ceebc146103c75780630868c0d61461041c5780631555371c146104575780631c5fb52d1461046e575b600080fd5b3480156103d357600080fd5b5061040a600480360360608110156103ea57600080fd5b506001600160a01b0381358116916020810135909116906040013561115c565b60408051918252519081900360200190f35b34801561042857600080fd5b5061040a6004803603604081101561043f57600080fd5b506001600160a01b038135811691602001351661117f565b34801561046357600080fd5b5061046c61119c565b005b34801561047a57600080fd5b5061046c600480360360e081101561049157600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156104bb57600080fd5b8201836020820111156104cd57600080fd5b803590602001918460208302840111600160201b831117156104ee57600080fd5b919350915080359060208101359060408101359060608101359060800135611248565b34801561051d57600080fd5b5061046c6004803603602081101561053457600080fd5b50356112bf565b34801561054757600080fd5b5061046c6004803603602081101561055e57600080fd5b50356112db565b34801561057157600080fd5b5061046c6004803603606081101561058857600080fd5b506001600160a01b03813581169160208101359091169060400135611316565b3480156105b457600080fd5b5061046c600480360360208110156105cb57600080fd5b50356113bb565b3480156105de57600080fd5b50610615600480360360608110156105f557600080fd5b506001600160a01b038135811691602081013590911690604001356113f6565b604080519115158252519081900360200190f35b61046c6004803603604081101561063f57600080fd5b50803590602001356001600160a01b031661141c565b34801561066157600080fd5b50610615611499565b34801561067657600080fd5b5061046c6004803603602081101561068d57600080fd5b50356001600160a01b03166114ab565b3480156106a957600080fd5b5061046c600480360360408110156106c057600080fd5b810190602081018135600160201b8111156106da57600080fd5b8201836020820111156106ec57600080fd5b803590602001918460208302840111600160201b8311171561070d57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b031691506114ce9050565b34801561076257600080fd5b5061046c6004803603602081101561077957600080fd5b5035611ba5565b34801561078c57600080fd5b5061040a600480360360208110156107a357600080fd5b50356001600160a01b0316611be0565b3480156107bf57600080fd5b5061040a600480360360408110156107d657600080fd5b506001600160a01b0381358116916020013516611bf2565b3480156107fa57600080fd5b5061040a611c0f565b34801561080f57600080fd5b5061040a6004803603602081101561082657600080fd5b50356001600160a01b0316611c15565b34801561084257600080fd5b5061084b611c27565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561088757818101518382015260200161086f565b505050509050019250505060405180910390f35b3480156108a757600080fd5b5061046c611c89565b3480156108bc57600080fd5b5061040a600480360360408110156108d357600080fd5b506001600160a01b0381358116916020013516611cb6565b3480156108f757600080fd5b5061040a611e1d565b34801561090c57600080fd5b5061084b6004803603602081101561092357600080fd5b50356001600160a01b0316611e23565b34801561093f57600080fd5b5061046c611e99565b34801561095457600080fd5b5061040a6004803603604081101561096b57600080fd5b506001600160a01b0381358116916020013516612165565b34801561098f57600080fd5b5061040a61219a565b3480156109a457600080fd5b5061040a6121a0565b3480156109b957600080fd5b5061046c600480360360208110156109d057600080fd5b50356121c5565b3480156109e357600080fd5b5061040a600480360360408110156109fa57600080fd5b506001600160a01b0381358116916020013516612200565b348015610a1e57600080fd5b5061040a60048036036040811015610a3557600080fd5b506001600160a01b0381358116916020013516612370565b348015610a5957600080fd5b5061046c60048036036060811015610a7057600080fd5b508035906020810135906040013561238d565b348015610a8f57600080fd5b50610a986124ad565b6040518080602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015610ade578181015183820152602001610ac6565b50505050905001935050505060405180910390f35b348015610aff57600080fd5b5061040a612510565b348015610b1457600080fd5b5061046c60048036036020811015610b2b57600080fd5b50356001600160a01b0316612516565b348015610b4757600080fd5b5061084b60048036036060811015610b5e57600080fd5b506001600160a01b038135169060208101359060400135612586565b348015610b8657600080fd5b5061084b60048036036020811015610b9d57600080fd5b50356001600160a01b03166126c5565b348015610bb957600080fd5b5061040a60048036036040811015610bd057600080fd5b506001600160a01b0381358116916020013516612739565b348015610bf457600080fd5b5061061560048036036060811015610c0b57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115610c3a57600080fd5b820183602082011115610c4c57600080fd5b803590602001918460018302840111600160201b83111715610c6d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612756945050505050565b348015610cba57600080fd5b5061084b61275d565b348015610ccf57600080fd5b5061040a60048036036040811015610ce657600080fd5b506001600160a01b03813581169160200135166127bd565b348015610d0a57600080fd5b5061040a60048036036020811015610d2157600080fd5b50356001600160a01b03166127da565b348015610d3d57600080fd5b5061061560048036036020811015610d5457600080fd5b50356001600160a01b03166127f5565b61046c60048036036040811015610d7a57600080fd5b506001600160a01b03813516906020013561284d565b348015610d9c57600080fd5b5061040a60048036036020811015610db357600080fd5b50356001600160a01b0316612857565b348015610dcf57600080fd5b5061046c60048036036040811015610de657600080fd5b506001600160a01b038135169060200135612869565b348015610e0857600080fd5b5061040a60048036036040811015610e1f57600080fd5b506001600160a01b0381358116916020013516612c64565b348015610e4357600080fd5b5061046c60048036036020811015610e5a57600080fd5b50356001600160a01b0316612c81565b348015610e7657600080fd5b5061084b612e79565b348015610e8b57600080fd5b5061046c612ed9565b348015610ea057600080fd5b5061040a612f03565b348015610eb557600080fd5b5061040a612f09565b348015610eca57600080fd5b5061040a60048036036020811015610ee157600080fd5b50356001600160a01b0316612f0f565b348015610efd57600080fd5b5061084b612f21565b348015610f1257600080fd5b50610f1b612f81565b604080516001600160a01b039092168252519081900360200190f35b348015610f4357600080fd5b5061061560048036036020811015610f5a57600080fd5b50356001600160a01b0316612f90565b348015610f7657600080fd5b5061040a60048036036040811015610f8d57600080fd5b506001600160a01b0381358116916020013516612fae565b348015610fb157600080fd5b5061046c612fcb565b348015610fc657600080fd5b5061040a60048036036020811015610fdd57600080fd5b50356001600160a01b031661318e565b348015610ff957600080fd5b5061046c6131a0565b34801561100e57600080fd5b5061040a6131c2565b34801561102357600080fd5b5061046c6004803603604081101561103a57600080fd5b506001600160a01b0381351690602001356131c8565b34801561105c57600080fd5b5061061561324c565b34801561107157600080fd5b5061040a6004803603602081101561108857600080fd5b50356001600160a01b0316613284565b3480156110a457600080fd5b5061040a600480360360608110156110bb57600080fd5b810190602081018135600160201b8111156110d557600080fd5b8201836020820111156110e757600080fd5b803590602001918460208302840111600160201b8311171561110857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b0383358116945060209093013590921691506132969050565b602660209081526000938452604080852082529284528284209052825290205481565b602a60209081526000928352604080842090915290825290205481565b6039546001600160a01b031633146111b357600080fd5b6060600380548060200260200160405190810160405280929190818152602001828054801561120b57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116111ed575b50939450600093505050505b81518110156112445761123c82828151811061122f57fe5b6020026020010151613724565b600101611217565b5050565b8261125257600080fd5b80831161125e57600080fd5b8061126857600080fd5b6112a9888888808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508a92508991506138799050565b6036929092556034919091556037555050505050565b6039546001600160a01b031633146112d657600080fd5b603755565b6112e3613a3d565b6001600160a01b0316336001600160a01b03161461130057600080fd5b611308611499565b61131157600080fd5b603655565b3a61132057600080fd5b611328611499565b61133157600080fd5b816001600160a01b0316836001600160a01b0316141561135057600080fd5b3361135c848284613a62565b611367838284613c03565b603554604080516001600160a01b03878116825260208201869052825181861693918816927f4480d8e4b1e9095b94bf513961d26fe1d32386ebdd103d18fe8738cf4b2223ff92908290030190a450505050565b6113c3613a3d565b6001600160a01b0316336001600160a01b0316146113e057600080fd5b6113e8611499565b6113f157600080fd5b602555565b603060209081526000938452604080852082529284528284209052825290205460ff1681565b60395460408051630526083960e11b81526001600160a01b0384811660048301523360248301819052925192931691630a4c10729160448082019260009290919082900301818387803b15801561147257600080fd5b505af1158015611486573d6000803e3d6000fd5b505050506114948184614012565b505050565b6039546001600160a01b031615155b90565b6039546001600160a01b031633146114c257600080fd5b6114cb81613724565b50565b3a6114d857600080fd5b6114e0611499565b6114e957600080fd5b603954604080516307b9342f60e21b8152336004820181905291519192600092839283926001600160a01b031691631ee4d0bc91602480820192602092909190829003018186803b15801561153d57600080fd5b505afa158015611551573d6000803e3d6000fd5b505050506040513d602081101561156757600080fd5b505190506001600160a01b038116156115d85761158381612f90565b6115d4576040805162461bcd60e51b815260206004820181905260248201527f6d696e696e6720636c61696d2063616c6c206973206e6f7420616c6c6f776564604482015290519081900360640190fd5b8093505b836001600160a01b0316856001600160a01b03161461164c576001600160a01b0380861660009081526032602090815260408083209388168352929052205492508261162357600080fd5b6001600160a01b0380861660009081526033602090815260408083209388168352929052205491505b60395460408051632b5aa5d760e11b815290516000926001600160a01b0316916356b54bae916004808301926020929190829003018186803b15801561169157600080fd5b505afa1580156116a5573d6000803e3d6000fd5b505050506040513d60208110156116bb57600080fd5b5051603954604080516253517560e01b81526001600160a01b038a811660048301529151939450600093919092169162535175916024808301926020929190829003018186803b15801561170e57600080fd5b505afa158015611722573d6000803e3d6000fd5b505050506040513d602081101561173857600080fd5b50518851909150600090819061182a57836001600160a01b031663dd03f5b9846040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060006040518083038186803b15801561179e57600080fd5b505afa1580156117b2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156117db57600080fd5b810190808051600160201b8111156117f257600080fd5b8201602081018481111561180557600080fd5b81518560208202830111600160201b8211171561182157600080fd5b50909d50505050505b60005b8a51811015611b205760008b828151811061184457fe5b60200260200101519050816000148061187257508b600183038151811061186757fe5b602002602001015181115b61187b57600080fd5b603554811061188957600080fd5b6001600160a01b03808c166000908152603060209081526040808320938e1683529281528282208483529052205460ff16156118c55750611b18565b60008a6001600160a01b03168c6001600160a01b0316146119b857898210156118ef575050611b18565b8189111580156118fe57508815155b1561190a575050611b20565b611917828b868f8f61408e565b9350816001019950866001600160a01b031663e1ab96d88584896040518463ffffffff1660e01b815260040180848152602001838152602001826001600160a01b03166001600160a01b03168152602001935050505060206040518083038186803b15801561198557600080fd5b505afa158015611999573d6000803e3d6000fd5b505050506040513d60208110156119af57600080fd5b50519050611a45565b866001600160a01b031663ba2d759783886040518363ffffffff1660e01b815260040180838152602001826001600160a01b03166001600160a01b031681526020019250505060206040518083038186803b158015611a1657600080fd5b505afa158015611a2a573d6000803e3d6000fd5b505050506040513d6020811015611a4057600080fd5b505190505b611a55858263ffffffff61410316565b94506001603060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff021916908315150217905550818b6001600160a01b03168d6001600160a01b03167fd3208fd5300db64b97bc442f47ade72b7ebcd9272aaecdcc04c777bb762861b9846040518082815260200191505060405180910390a450505b60010161182d565b50836001600160a01b031663469507c6838a6040518363ffffffff1660e01b815260040180838152602001826001600160a01b03166001600160a01b0316815260200192505050600060405180830381600087803b158015611b8157600080fd5b505af1158015611b95573d6000803e3d6000fd5b5050505050505050505050505050565b611bad613a3d565b6001600160a01b0316336001600160a01b031614611bca57600080fd5b611bd2611499565b611bdb57600080fd5b602455565b60386020526000908152604090205481565b603260209081526000928352604080842090915290825290205481565b60245481565b602c6020526000908152604090205481565b60606000805480602002602001604051908101604052809291908181526020018280548015611c7f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611c61575b5050505050905090565b611c91611499565b611c9a57600080fd5b336000908152605360205260409020805460ff19166001179055565b603954604080516253517560e01b81526001600160a01b03858116600483015291516000938493169162535175916024808301926020929190829003018186803b158015611d0357600080fd5b505afa158015611d17573d6000803e3d6000fd5b505050506040513d6020811015611d2d57600080fd5b50519050611d4a816001600160a01b038681169086161415614115565b611d58576000915050611e17565b6001600160a01b038085166000908152603160209081526040808320878516845282529182902054603954835163a0d16cad60e01b8152868616600482015293519194169263a0d16cad926024808301939192829003018186803b158015611dbf57600080fd5b505afa158015611dd3573d6000803e3d6000fd5b505050506040513d6020811015611de957600080fd5b5051611df8579150611e179050565b6000611e048686612165565b905080821115611e12578091505b509150505b92915050565b60375481565b6001600160a01b038116600090815260076020908152604091829020805483518184028101840190945280845260609392830182828015611e8d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611e6f575b50505050509050919050565b603960009054906101000a90046001600160a01b03166001600160a01b03166356b54bae6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ee757600080fd5b505afa158015611efb573d6000803e3d6000fd5b505050506040513d6020811015611f1157600080fd5b50516001600160a01b03163314611f2757600080fd5b611f2f611499565b611f3857600080fd5b600b5415801590611f4d5750600b5460365414155b15611f5e57600b8054603655600090555b600c5415801590611f735750600c5460345414155b15611f8457600c8054603455600090555b6039546040805163ccf69e9b60e01b815290516000926001600160a01b03169163ccf69e9b916004808301926020929190829003018186803b158015611fc957600080fd5b505afa158015611fdd573d6000803e3d6000fd5b505050506040513d6020811015611ff357600080fd5b50516040805163071df16360e21b815290516001600160a01b0390921691631c77c58c91600480820192602092909190829003018186803b15801561203757600080fd5b505afa15801561204b573d6000803e3d6000fd5b505050506040513d602081101561206157600080fd5b5051600d54909150158015906120795750600d548114155b156114cb57603960009054906101000a90046001600160a01b03166001600160a01b031663ccf69e9b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156120cc57600080fd5b505afa1580156120e0573d6000803e3d6000fd5b505050506040513d60208110156120f657600080fd5b5051600d54604080516366aae47b60e11b81526004810192909252516001600160a01b039092169163cd55c8f69160248082019260009290919082900301818387803b15801561214557600080fd5b505af1158015612159573d6000803e3d6000fd5b50506000600d55505050565b6001600160a01b039182166000908152600a602090815260408083209390941682529182528281206035548252909152205490565b60355481565b60375460009080156121b35760016121b6565b60005b60ff1660365482010391505090565b6121cd613a3d565b6001600160a01b0316336001600160a01b0316146121ea57600080fd5b6121f2611499565b6121fb57600080fd5b603455565b603954604080516253517560e01b81526001600160a01b03858116600483015291516000938493169162535175916024808301926020929190829003018186803b15801561224d57600080fd5b505afa158015612261573d6000803e3d6000fd5b505050506040513d602081101561227757600080fd5b50519050612294816001600160a01b038681169086161415614115565b6122a2576000915050611e17565b6039546040805163a0d16cad60e01b81526001600160a01b0384811660048301529151919092169163a0d16cad916024808301926020929190829003018186803b1580156122ef57600080fd5b505afa158015612303573d6000803e3d6000fd5b505050506040513d602081101561231957600080fd5b5051612329576000915050611e17565b6123686123368585612165565b6001600160a01b038087166000908152603160209081526040808320938916835292905220549063ffffffff61424b16565b949350505050565b602b60209081526000928352604080842090915290825290205481565b612395613a3d565b6001600160a01b0316336001600160a01b0316146123b257600080fd5b6123ba611499565b6123c357600080fd5b826123cd57600080fd5b8183116123d957600080fd5b8083816123e257fe5b06156123ed57600080fd5b60028106156123fb57600080fd5b603960009054906101000a90046001600160a01b03166001600160a01b031663714897df6040518163ffffffff1660e01b815260040160206040518083038186803b15801561244957600080fd5b505afa15801561245d573d6000803e3d6000fd5b505050506040513d602081101561247357600080fd5b5051818161247d57fe5b061561248857600080fd5b821561249457600b8390555b81156124a057600c8290555b801561149457600d555050565b6060600060046005548180548060200260200160405190810160405280929190818152602001828054801561250157602002820191906000526020600020905b8154815260200190600101908083116124ed575b50505050509150915091509091565b60345481565b6039546001600160a01b0316331461252d57600080fd5b6001600160a01b03811661254057600080fd5b6001600160a01b03811660009081526031602090815260408083209091529020541561257d5761256f81614260565b6125788161434f565b6114cb565b6114cb8161440f565b6001600160a01b038316600090815260086020526040902060609082612604578054604080516020808402820181019092528281529183918301828280156125f757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116125d9575b50505050509150506126be565b8054600090612619908663ffffffff61424b16565b9050808411612628578361262a565b805b604051908082528060200260200182016040528015612653578160200160208202803883390190505b50925060005b83518110156126ba57828187018154811061267057fe5b9060005260206000200160009054906101000a90046001600160a01b031684828151811061269a57fe5b6001600160a01b0390921660209283029190910190910152600101612659565b5050505b9392505050565b6001600160a01b038116600090815260066020908152604091829020805483518184028101840190945280845260609392830182828015611e8d576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311611e6f5750505050509050919050565b602960209081526000928352604080842090915290825290205481565b6000806000fd5b60606002805480602002602001604051908101604052809291908181526020018280548015611c7f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311611c61575050505050905090565b603160209081526000928352604080842090915290825290205481565b6001600160a01b031660009081526008602052604090205490565b6001600160a01b0381166000908152602d60205260408120548154811080156126be5750826001600160a01b03166000828154811061283057fe5b6000918252602090912001546001600160a01b0316149392505050565b6112448282614012565b602d6020526000908152604090205481565b3a61287357600080fd5b61287b611499565b61288457600080fd5b6001600160a01b03821661289757600080fd5b806128a157600080fd5b603954604080516253517560e01b81526001600160a01b0385811660048301529151339361293093169162535175916024808301926020929190829003018186803b1580156128ef57600080fd5b505afa158015612903573d6000803e3d6000fd5b505050506040513d602081101561291957600080fd5b50516001600160a01b038381169086161415614115565b61293957600080fd5b6001600160a01b0380841660008181526027602090815260408083209486168084529482528083205484845260288352818420546031845282852096855295835281842054948452603890925282205490939291861315612a23578561299f8887612200565b8111156129ab57600080fd5b6129bb858263ffffffff61410316565b94506129cd848263ffffffff61410316565b93506129df838263ffffffff61424b16565b92506129f1828263ffffffff61424b16565b6035546001600160a01b03808b166000908152602960209081526040808320938c16835292905220559150612a729050565b6000869003612a38858263ffffffff61424b16565b9450612a4a848263ffffffff61424b16565b9350612a5c838263ffffffff61410316565b9250612a6e828263ffffffff61410316565b9150505b6001600160a01b038088166000818152602760209081526040808320948a1680845294825280832089905583835260288252808320889055603182528083208584528252808320879055838352603890915290208390551415612bbb57811580612ade57506024548210155b612ae757600080fd5b60395460408051633820c4e560e11b815290516000926001600160a01b03169163704189ca916004808301926020929190829003018186803b158015612b2c57600080fd5b505afa158015612b40573d6000803e3d6000fd5b505050506040513d6020811015612b5657600080fd5b505190506000871315612b965782158015612b835750806001600160a01b0316886001600160a01b031614155b15612b9157612b918861440f565b612bb5565b612bb588826001600160a01b03168a6001600160a01b031614156144cd565b50612c04565b811580612bca57506025548210155b612bd357600080fd5b6000861315612bf05781612beb57612beb8786614596565b612bfa565b612bfa87866146ee565b612c0487866147b0565b612c0d8761434f565b603554856001600160a01b0316886001600160a01b03167f80d5c777e5f7ac6ee89723223803ca5c0ec0204f89e99c1b0cde973c66a64594896040518082815260200191505060405180910390a450505050505050565b603360209081526000928352604080842090915290825290205481565b3a612c8b57600080fd5b612c93611499565b612c9c57600080fd5b6001600160a01b03811660009081526029602090815260408083203380855292529091205460355411612cce57600080fd5b603954604080516253517560e01b81526001600160a01b0385811660048301529151612d5f9392909216916253517591602480820192602092909190829003018186803b158015612d1e57600080fd5b505afa158015612d32573d6000803e3d6000fd5b505050506040513d6020811015612d4857600080fd5b50516001600160a01b038381169085161415614115565b612d6857600080fd5b6001600160a01b0380831660009081526027602090815260408083209385168352929052205480612d9857600080fd5b6001600160a01b038084166000818152602760209081526040808320948716835293815283822082905591815260289091522054612ddc908263ffffffff61424b16565b6001600160a01b03808516600090815260286020908152604080832094909455603181528382209286168252919091522054612e1c57612e1c83836148a2565b612e268282614a7d565b603554826001600160a01b0316846001600160a01b03167ff380b0bc887e00f5b50d3c9d4eaaf5c9a0afd97b956316b995159384c4ede9b3846040518082815260200191505060405180910390a4505050565b60606003805480602002602001604051908101604052809291908181526020018280548015611c7f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311611c61575050505050905090565b612ee1611499565b612eea57600080fd5b336000908152605360205260409020805460ff19169055565b60365481565b60255481565b60286020526000908152604090205481565b60606001805480602002602001604051908101604052809291908181526020018280548015611c7f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311611c61575050505050905090565b6039546001600160a01b031681565b6001600160a01b031660009081526053602052604090205460ff1690565b602760209081526000928352604080842090915290825290205481565b3a612fd557600080fd5b612fdd611499565b612fe657600080fd5b603954604080516253517560e01b81523360048201819052915191926000926001600160a01b039091169162535175916024808301926020929190829003018186803b15801561303557600080fd5b505afa158015613049573d6000803e3d6000fd5b505050506040513d602081101561305f57600080fd5b50516035549091501515806130ea57506039546040805163facd743b60e01b81526001600160a01b0384811660048301529151919092169163facd743b916024808301926020929190829003018186803b1580156130bc57600080fd5b505afa1580156130d0573d6000803e3d6000fd5b505050506040513d60208110156130e657600080fd5b5051155b6130f357600080fd5b603960009054906101000a90046001600160a01b03166001600160a01b031663704189ca6040518163ffffffff1660e01b815260040160206040518083038186803b15801561314157600080fd5b505afa158015613155573d6000803e3d6000fd5b505050506040513d602081101561316b57600080fd5b50516001600160a01b038381169116141561318557600080fd5b61124482613724565b602f6020526000908152604090205481565b6039546001600160a01b031633146131b757600080fd5b603580546001019055565b610bb881565b3a6131d257600080fd5b6131da611499565b6131e357600080fd5b336131ef838284613a62565b6131f98183614a7d565b603554816001600160a01b0316846001600160a01b03167fa7c0f0cac6bd4d18042007706c84a8abe823751cf289b69c01e83eef7b5915c7856040518082815260200191505060405180910390a4505050565b600080613257614ae0565b6034546036546037549293500390821015613277576000925050506114a8565b6037549091031115905090565b602e6020526000908152604090205481565b6000806000836001600160a01b0316856001600160a01b03161461330e576001600160a01b038086166000908152603260209081526040808320938816835292905220549150816132e657600080fd5b506001600160a01b038085166000908152603360209081526040808320938716835292905220545b60395460408051632b5aa5d760e11b815290516000926001600160a01b0316916356b54bae916004808301926020929190829003018186803b15801561335357600080fd5b505afa158015613367573d6000803e3d6000fd5b505050506040513d602081101561337d57600080fd5b5051603954604080516253517560e01b81526001600160a01b038a811660048301529151939450600093919092169162535175916024808301926020929190829003018186803b1580156133d057600080fd5b505afa1580156133e4573d6000803e3d6000fd5b505050506040513d60208110156133fa57600080fd5b505188516000965090915085906134ed57826001600160a01b031663dd03f5b9836040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060006040518083038186803b15801561346157600080fd5b505afa158015613475573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561349e57600080fd5b810190808051600160201b8111156134b557600080fd5b820160208101848111156134c857600080fd5b81518560208202830111600160201b821117156134e457600080fd5b50909c50505050505b60005b89518110156137175760008a828151811061350757fe5b60200260200101519050816000148061353557508a600183038151811061352a57fe5b602002602001015181115b61353e57600080fd5b603554811061354c57600080fd5b6001600160a01b03808b166000908152603060209081526040808320938d1683529281528282208483529052205460ff1615613588575061370f565b6000896001600160a01b03168b6001600160a01b03161461367b57878210156135b257505061370f565b8187111580156135c157508615155b156135cd575050613717565b6135da8289868e8e61408e565b9350816001019750856001600160a01b031663e1ab96d88584886040518463ffffffff1660e01b815260040180848152602001838152602001826001600160a01b03166001600160a01b03168152602001935050505060206040518083038186803b15801561364857600080fd5b505afa15801561365c573d6000803e3d6000fd5b505050506040513d602081101561367257600080fd5b50519050613708565b856001600160a01b031663ba2d759783876040518363ffffffff1660e01b815260040180838152602001826001600160a01b03166001600160a01b031681526020019250505060206040518083038186803b1580156136d957600080fd5b505afa1580156136ed573d6000803e3d6000fd5b505050506040513d602081101561370357600080fd5b505190505b9790970196505b6001016134f0565b5050505050509392505050565b6001600160a01b0381166000908152602d60205260408120549054811080156137765750816001600160a01b03166000828154811061375f57fe5b6000918252602090912001546001600160a01b0316145b1561384257600080548190600019810190811061378f57fe5b600091825260208220015481546001600160a01b039091169250829190849081106137b657fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790558383168252602d90526040808220859055918516815290812081905580549061380b90600019830161518e565b506040516001600160a01b038416907fa594a98df279c030a78f76e64f370882494d1a6fcedd0bd0d636d4608e1eb9f990600090a2505b61384b82614ae4565b1561385e5761385982614b22565b613867565b61386782614c0e565b61387082614cc6565b61124482614e6a565b613881614ae0565b15806138a55750613890613a3d565b6001600160a01b0316336001600160a01b0316145b6138ae57600080fd5b6138b6611499565b156138c057600080fd5b6001600160a01b0384166138d357600080fd5b60008351116138e157600080fd5b816138eb57600080fd5b806138f557600080fd5b603980546001600160a01b0319166001600160a01b03868116919091179182905560408051633820c4e560e11b815290516000939092169163704189ca91600480820192602092909190829003018186803b15801561395357600080fd5b505afa158015613967573d6000803e3d6000fd5b505050506040513d602081101561397d57600080fd5b5051905060005b8451811015613a2e5760006001600160a01b03168582815181106139a457fe5b60200260200101516001600160a01b031614156139c057600080fd5b6139de8582815181106139cf57fe5b602002602001015160006144cd565b816001600160a01b03168582815181106139f457fe5b60200260200101516001600160a01b031614613a2657613a26858281518110613a1957fe5b602002602001015161440f565b600101613984565b50506025919091556024555050565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b6001600160a01b038316613a7557600080fd5b80613a7f57600080fd5b613a898383611cb6565b811115613a9557600080fd5b6001600160a01b038084166000908152603160209081526040808320938616835292905290812054613acd908363ffffffff61424b16565b90506000836001600160a01b0316856001600160a01b031614613af257602554613af6565b6024545b9050811580613b055750808210155b613b0e57600080fd5b6001600160a01b0380861660009081526031602090815260408083209388168352929052908120839055613b428686612165565b905083811015613b53576000613b57565b8381035b6001600160a01b038088166000818152600a60209081526040808320948b16835293815283822060355483528152838220949094559081526038909252902054613ba7908563ffffffff61424b16565b6001600160a01b03871660009081526038602052604090205582613bcf57613bcf86866148a2565b856001600160a01b0316856001600160a01b031614613bf257613bf286866147b0565b613bfb8661434f565b505050505050565b603954604080516253517560e01b81526001600160a01b038681166004830152915160009392909216916253517591602480820192602092909190829003018186803b158015613c5257600080fd5b505afa158015613c66573d6000803e3d6000fd5b505050506040513d6020811015613c7c57600080fd5b505190506001600160a01b038116613c9357600080fd5b6001600160a01b038416613ca657600080fd5b81613cb057600080fd5b60395460408051635491295760e11b81526001600160a01b0384811660048301529151919092169163a92252ae916024808301926020929190829003018186803b158015613cfd57600080fd5b505afa158015613d11573d6000803e3d6000fd5b505050506040513d6020811015613d2757600080fd5b505115613d3357600080fd5b613d3b61324c565b613d4457600080fd5b6001600160a01b038085166000908152603160209081526040808320938716835292905290812054613d7c908463ffffffff61410316565b9050846001600160a01b0316846001600160a01b03161415613dac57602454811015613da757600080fd5b613de5565b602554811015613dbb57600080fd5b6001600160a01b0385166000908152603160209081526040808320909152902054613de557600080fd5b6001600160a01b038086166000908152603160209081526040808320938816835292905220819055613e2783613e1b8787612165565b9063ffffffff61410316565b6001600160a01b038087166000818152600a60209081526040808320948a16835293815283822060355483528152838220949094559081526038909252902054613e77908463ffffffff61410316565b6001600160a01b0380871660008181526038602052604090209290925585161415613f3357613f2e85603960009054906101000a90046001600160a01b03166001600160a01b031663704189ca6040518163ffffffff1660e01b815260040160206040518083038186803b158015613eee57600080fd5b505afa158015613f02573d6000803e3d6000fd5b505050506040513d6020811015613f1857600080fd5b50516001600160a01b03888116911614156144cd565b613f47565b613f3d85856146ee565b613f4785856147b0565b613f508561434f565b6001600160a01b03808516600090815260086020908152604080832060098352818420948a16845293909152902054815481101580613fb85750866001600160a01b0316828281548110613fa057fe5b6000918252602090912001546001600160a01b031614155b156140095781546001600160a01b038088166000908152600960209081526040808320938c168084529382528220849055600184018655858252902090910180546001600160a01b03191690911790555b50505050505050565b3a61401c57600080fd5b614024611499565b61402d57600080fd5b50343361403b838284613c03565b603554816001600160a01b0316846001600160a01b03167f2273de02cb1f69ba6259d22c4bc22c60e4c94c193265ef6afee324a04a9b6d22856040518082815260200191505060405180910390a4505050565b60005b506001600160a01b03808316600090815260266020908152604080832093851683529281528282208883529052205480156140df5760001981146140d557806140d8565b60005b90506140fa565b848614156140ee5750826140fa565b60001990950194614091565b95945050505050565b6000828201838110156126be57600080fd5b600081156141a8576039546040805163a881c5fd60e01b81526001600160a01b0386811660048301529151919092169163a881c5fd916024808301926020929190829003018186803b15801561416a57600080fd5b505afa15801561417e573d6000803e3d6000fd5b505050506040513d602081101561419457600080fd5b5051156141a357506000611e17565b61422e565b60395460408051635491295760e11b81526001600160a01b0386811660048301529151919092169163a92252ae916024808301926020929190829003018186803b1580156141f557600080fd5b505afa158015614209573d6000803e3d6000fd5b505050506040513d602081101561421f57600080fd5b50511561422e57506000611e17565b61423661324c565b61424257506000611e17565b50600192915050565b60008282111561425a57600080fd5b50900390565b6001600160a01b0381166000908152602e602052604090205460025480821015806142b55750826001600160a01b03166002838154811061429d57fe5b6000918252602090912001546001600160a01b031614155b15614346576001600160a01b0383166000818152602e602052604081208390556002805460018181019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b03191690931790925560048054928301815581527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b909101555b61149483614e6a565b60008061435b83614f56565b915091508161436b5750506114cb565b60006004828154811061437a57fe5b90600052602060002001549050600060386000866001600160a01b03166001600160a01b0316815260200190815260200160002054905080600484815481106143bf57fe5b6000918252602090912001558181106143ef576005546143e79083830363ffffffff61410316565b600555614408565b6005546144049082840363ffffffff61424b16565b6005555b5050505050565b6001600160a01b0381166000908152602f602052604090205460035480821015806144645750826001600160a01b03166003838154811061444c57fe5b6000918252602090912001546001600160a01b031614155b156144c4576001600160a01b0383166000818152602f602052604081208390556003805460018101825591527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b03191690911790555b61149483614cc6565b6144d6826127f5565b61457e57600080546001600160a01b038416808352602d602052604083208290556001820183559180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b031916909117905561453b614fc3565b600054111561454957600080fd5b6040516001600160a01b038316907fd26e92d2046eac29686a6b001477592c752fb2045b2875e4e96f567ad735269d90600090a25b61458782614b22565b80156112445761124482614260565b6001600160a01b038083166000908152600660209081526040808320602a83528184209486168452939091529020548154811080156145fd5750826001600160a01b03168282815481106145e657fe5b6000918252602090912001546001600160a01b0316145b156146a45781546000908390600019810190811061461757fe5b9060005260206000200160009054906101000a90046001600160a01b031690508083838154811061464457fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790558783168252602a81526040808320858516845290915280822085905591861681529081205582546146a184600019830161518e565b50505b6001600160a01b03808516600090815260276020908152604080832093871683529290522054156146de576146d98484614fc9565b6146e8565b6146e88484615087565b50505050565b6001600160a01b038083166000908152600660209081526040808320602a8352818420948616845293909152902054815480821015806147575750836001600160a01b031683838154811061473f57fe5b6000918252602090912001546001600160a01b031614155b156147a6576001600160a01b038086166000908152602a602090815260408083209388168084529382528220849055855460018101875586835291200180546001600160a01b03191690911790555b6144088585615087565b6035546001600160a01b03808416600090815260316020908152604080832093861683529290522054600190910190806147ec576000196147ee565b805b6001600160a01b038086166000818152602660209081526040808320948916808452948252808320888452825280832095909555918152603282528381209281529190522054614861576001600160a01b0380851660009081526032602090815260408083209387168352929052208290555b801561486e576000614870565b815b6001600160a01b0394851660009081526033602090815260408083209690971682529490945293909220929092555050565b816001600160a01b0316816001600160a01b03161415614a5c5760395460408051633820c4e560e11b815290516000926001600160a01b03169163704189ca916004808301926020929190829003018186803b15801561490157600080fd5b505afa158015614915573d6000803e3d6000fd5b505050506040513d602081101561492b57600080fd5b505190506001600160a01b0383811690821614614a5657603954604080516253517560e01b81526001600160a01b038681166004830152915160009392909216916253517591602480820192602092909190829003018186803b15801561499157600080fd5b505afa1580156149a5573d6000803e3d6000fd5b505050506040513d60208110156149bb57600080fd5b50516039546040805163facd743b60e01b81526001600160a01b038085166004830152915193945091169163facd743b91602480820192602092909190829003018186803b158015614a0c57600080fd5b505afa158015614a20573d6000803e3d6000fd5b505050506040513d6020811015614a3657600080fd5b505115614a4b57614a468461440f565b614a54565b614a5484613724565b505b50611244565b614a668282614596565b614a6f82614ae4565b156112445761124482614b22565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050611244578082604051614ab4906151b2565b6001600160a01b039091168152604051908190036020019082f080158015614408573d6000803e3d6000fd5b4390565b6001600160a01b038116600090815260386020526040812054158015611e175750506001600160a01b03166000908152602860205260409020541590565b6001600160a01b0381166000908152602c602052604090205460015481108015614b755750816001600160a01b031660018281548110614b5e57fe5b6000918252602090912001546001600160a01b0316145b156112445760018054600091906000198101908110614b9057fe5b600091825260209091200154600180546001600160a01b039092169250829184908110614bb957fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790558383168252602c9052604080822085905591851681529081205560018054906146e890600019830161518e565b6001600160a01b0381166000908152602c60205260409020546001548082101580614c635750826001600160a01b031660018381548110614c4b57fe5b6000918252602090912001546001600160a01b031614155b15611494576001600160a01b0383166000818152602c6020526040812083905560018054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319169091179055505050565b60045460025414614cd6576114cb565b6001600160a01b0381166000908152602e602052604090205460025481108015614d295750816001600160a01b031660028281548110614d1257fe5b6000918252602090912001546001600160a01b0316145b156112445760048181548110614d3b57fe5b906000526020600020015460055410614d765760048181548110614d5b57fe5b60009182526020909120015460058054919091039055614d7c565b60006005555b6002805460001981019160009183908110614d9357fe5b600091825260209091200154600280546001600160a01b039092169250829185908110614dbc57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060048281548110614df757fe5b906000526020600020015460048481548110614e0f57fe5b60009182526020808320909101929092556001600160a01b038084168252602e90925260408082208690559186168152908120556002805490614e5690600019830161518e565b50600480549061440890600019830161518e565b6001600160a01b0381166000908152602f602052604090205460035481108015614ebd5750816001600160a01b031660038281548110614ea657fe5b6000918252602090912001546001600160a01b0316145b156112445760038054600091906000198101908110614ed857fe5b600091825260209091200154600380546001600160a01b039092169250829184908110614f0157fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790558383168252602f9052604080822085905591851681529081205560038054906146e890600019830161518e565b6001600160a01b0381166000908152602e602052604081205460025481108015614fa95750826001600160a01b031660028281548110614f9257fe5b6000918252602090912001546001600160a01b0316145b15614fb75760019150614fbe565b5060009050805b915091565b610bb890565b6001600160a01b038083166000908152600760209081526040808320602b8352818420948616845293909152902054815480821015806150325750836001600160a01b031683838154811061501a57fe5b6000918252602090912001546001600160a01b031614155b15614408576001600160a01b038086166000908152602b602090815260408083209388168084529382528220849055855460018101875586835291200180546001600160a01b03191690911790555050505050565b6001600160a01b038083166000908152600760209081526040808320602b83528184209486168452939091529020548154811080156150ee5750826001600160a01b03168282815481106150d757fe5b6000918252602090912001546001600160a01b0316145b156146e85781546000908390600019810190811061510857fe5b9060005260206000200160009054906101000a90046001600160a01b031690508083838154811061513557fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790558783168252602b8152604080832085851684529091528082208590559186168152908120558254613bfb8460001983015b815481835581811115611494576000838152602090206114949181019083016151be565b6032806151dd83390190565b6114a891905b808211156151d857600081556001016151c4565b509056fe60806040526040516032380380603283398181016040526020811015602357600080fd5b50516001600160a01b038116fffea265627a7a72305820752bae461158a869704ca5ca69d10353980f521793177a8b7d0bd63a9a079efb64736f6c634300050a0032",
  "sourceMap": "278:43:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;278:43:6;;;;;;;",
  "deployedSourceMap": "278:43:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14164:8:12;;;2192:97;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2192:97:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2192:97:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3796:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3796:73:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3796:73:12;;;;;;;;;;:::i;19014:238::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19014:238:12;;;:::i;:::-;;17463:848;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17463:848:12;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;17463:848:12;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;17463:848:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;17463:848:12;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;17463:848:12;;-1:-1:-1;17463:848:12;-1:-1:-1;17463:848:12;;;;;;;;;;;;;;;;;;;;;;:::i;20417:145::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20417:145:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20417:145:12;;:::i;30064:154::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30064:154:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;30064:154:12;;:::i;21093:503::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21093:503:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;21093:503:12;;;;;;;;;;;;;;;;;:::i;29933:130::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29933:130:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;29933:130:12;;:::i;6218:86::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6218:86:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6218:86:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;14893:248;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14893:248:12;;;;;;-1:-1:-1;;;;;14893:248:12;;:::i;37340:119::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37340:119:12;;;:::i;18669:124::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18669:124:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18669:124:12;-1:-1:-1;;;;;18669:124:12;;:::i;2051:2869:13:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2051:2869:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2051:2869:13;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2051:2869:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2051:2869:13;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2051:2869:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2051:2869:13;;-1:-1:-1;;;2051:2869:13;;-1:-1:-1;;;;;2051:2869:13;;-1:-1:-1;2051:2869:13;;-1:-1:-1;2051:2869:13:i;29604:130:12:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29604:130:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;29604:130:12;;:::i;8247:51::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8247:51:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8247:51:12;-1:-1:-1;;;;;8247:51:12;;:::i;6965:70::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6965:70:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6965:70:12;;;;;;;;;;:::i;1713:32::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1713:32:12;;;:::i;4561:52::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4561:52:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4561:52:12;-1:-1:-1;;;;;4561:52:12;;:::i;32867:90::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;32867:90:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;32867:90:12;;;;;;;;;;;;;;;;;4927:159:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4927:159:13;;;:::i;38221:1140:12:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38221:1140:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;38221:1140:12;;;;;;;;;;:::i;7979:37::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7979:37:12;;;:::i;41767:167::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;41767:167:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;41767:167:12;-1:-1:-1;;;;;41767:167:12;;:::i;31360:933::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31360:933:12;;;:::i;42303:225::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;42303:225:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;42303:225:12;;;;;;;;;;:::i;7774:27::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7774:27:12;;;:::i;42614:199::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;42614:199:12;;;:::i;30220:182::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30220:182:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;30220:182:12;;:::i;39737:1040::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;39737:1040:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;39737:1040:12;;;;;;;;;;:::i;4273:81::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4273:81:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4273:81:12;;;;;;;;;;:::i;30458:846::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30458:846:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;30458:846:12;;;;;;;;;;;;:::i;34147:158::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34147:158:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;34147:158:12;;;;;;;;;;;;;;;;;;7664:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7664:42:12;;;:::i;15642:464::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15642:464:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15642:464:12;-1:-1:-1;;;;;15642:464:12;;:::i;35863:542::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35863:542:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;35863:542:12;;;;;;;;;;;;;:::i;41340:151::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;41340:151:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;41340:151:12;-1:-1:-1;;;;;41340:151:12;;:::i;3300:73::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3300:73:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3300:73:12;;;;;;;;;;:::i;40938:108::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;40938:108:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;40938:108:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;40938:108:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;40938:108:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;40938:108:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;40938:108:12;;-1:-1:-1;40938:108:12;;-1:-1:-1;;;;;40938:108:12:i;34759:112::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34759:112:12;;;:::i;6565:66::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6565:66:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6565:66:12;;;;;;;;;;:::i;36614:130::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36614:130:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;36614:130:12;-1:-1:-1;;;;;36614:130:12;;:::i;37656:206::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37656:206:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;37656:206:12;-1:-1:-1;;;;;37656:206:12;;:::i;22145:135::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;22145:135:12;;;;;;;;:::i;4958:44::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4958:44:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4958:44:12;-1:-1:-1;;;;;4958:44:12;;:::i;23870:4183::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23870:4183:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;23870:4183:12;;;;;;;;:::i;7407:69::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7407:69:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7407:69:12;;;;;;;;;;:::i;28410:995::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28410:995:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;28410:995:12;-1:-1:-1;;;;;28410:995:12;;:::i;35366:112::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35366:112:12;;;:::i;5093:162:13:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5093:162:13;;;:::i;7864:35:12:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7864:35:12;;;:::i;1829:32::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1829:32:12;;;:::i;2872:61::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2872:61:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2872:61:12;-1:-1:-1;;;;;2872:61:12;;:::i;33352:106::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33352:106:12;;;:::i;8366:45::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8366:45:12;;;:::i;:::-;;;;-1:-1:-1;;;;;8366:45:12;;;;;;;;;;;;;;5265:142:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5265:142:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5265:142:13;-1:-1:-1;;;;;5265:142:13;;:::i;2600:76:12:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2600:76:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2600:76:12;;;;;;;;;;:::i;19633:501::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19633:501:12;;;:::i;5851:55::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5851:55:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5851:55:12;-1:-1:-1;;;;;5851:55:12;;:::i;16290:98::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16290:98:12;;;:::i;8773:45::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8773:45:12;;;:::i;22789:358::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22789:358:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;22789:358:12;;;;;;;;:::i;36889:352::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36889:352:12;;;:::i;5412:55::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5412:55:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5412:55:12;-1:-1:-1;;;;;5412:55:12;;:::i;6085:1906:13:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6085:1906:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6085:1906:13;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6085:1906:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6085:1906:13;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;6085:1906:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6085:1906:13;;-1:-1:-1;;;;;;;6085:1906:13;;;;;-1:-1:-1;6085:1906:13;;;;;;;;;-1:-1:-1;6085:1906:13;;-1:-1:-1;6085:1906:13:i;2192:97:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3796:73::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;19014:238::-;13871:20;;-1:-1:-1;;;;;13871:20:12;13849:10;:43;13841:52;;;;;;19081:30;19114:17;19081:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19081:50:12;;;;;;;;;;;;;;;;-1:-1:-1;19081:50:12;;-1:-1:-1;19146:9:12;;-1:-1:-1;;;;19141:105:12;19165:13;:20;19161:1;:24;19141:105;;;19206:29;19218:13;19232:1;19218:16;;;;;;;;;;;;;;19206:11;:29::i;:::-;19187:3;;19141:105;;;;13903:1;19014:238::o;17463:848::-;17806:26;17798:35;;;;;;17875:28;17851:21;:52;17843:61;;;;;;17922:33;17914:42;;;;;;17966:158;17991:21;18026:24;;17966:158;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;18064:18:12;;-1:-1:-1;18096:18:12;;-1:-1:-1;17966:11:12;;-1:-1:-1;17966:158:12:i;:::-;18134:20;:44;;;;18188:27;:58;;;;18256:22;:48;-1:-1:-1;;;;;17463:848:12:o;20417:145::-;13871:20;;-1:-1:-1;;;;;13871:20:12;13849:10;:43;13841:52;;;;;;20518:22;:37;20417:145::o;30064:154::-;255:8:36;:6;:8::i;:::-;-1:-1:-1;;;;;241:22:36;:10;-1:-1:-1;;;;;241:22:36;;233:31;;;;;;13681:15:12;:13;:15::i;:::-;13673:24;;;;;;30171:20;:44;30064:154::o;21093:503::-;13324:11;13316:25;;;;;;13681:15;:13;:15::i;:::-;13673:24;;;;;;21309:21;-1:-1:-1;;;;;21282:48:12;:23;-1:-1:-1;;;;;21282:48:12;;;21274:57;;;;;;21358:10;21378:51;21388:23;21358:10;21421:7;21378:9;:51::i;:::-;21439:46;21446:21;21469:6;21477:7;21439:6;:46::i;:::-;21567:12;;21500:89;;;-1:-1:-1;;;;;21500:89:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13707:1;21093:503;;;:::o;29933:130::-;255:8:36;:6;:8::i;:::-;-1:-1:-1;;;;;241:22:36;:10;-1:-1:-1;;;;;241:22:36;;233:31;;;;;;13681:15:12;:13;:15::i;:::-;13673:24;;;;;;30027:17;:29;29933:130::o;6218:86::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14893:248::-;15023:20;;:70;;;-1:-1:-1;;;15023:70:12;;-1:-1:-1;;;;;15023:70:12;;;;;;;15003:10;15023:70;;;;;;;;15003:10;;15023:20;;:38;;:70;;;;;14978:22;;15023:70;;;;;;;;14978:22;15023:20;:70;;;5:2:-1;;;;30:1;27;20:12;5:2;15023:70:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15023:70:12;;;;15103:31;15110:14;15126:7;15103:6;:31::i;:::-;14893:248;;;:::o;37340:119::-;37408:20;;-1:-1:-1;;;;;37408:20:12;:44;;37340:119;;:::o;18669:124::-;13871:20;;-1:-1:-1;;;;;13871:20:12;13849:10;:43;13841:52;;;;;;18758:28;18770:15;18758:11;:28::i;:::-;18669:124;:::o;2051:2869:13:-;13324:11:12;13316:25;;;;;;13681:15;:13;:15::i;:::-;13673:24;;;;;;2370:20:13;;:51;;;-1:-1:-1;;;2370:51:13;;2230:10;2370:51;;;;;;;;2230:10;;2205:22;;;;;;-1:-1:-1;;;;;2370:20:13;;:43;;:51;;;;;;;;;;;;;;;:20;:51;;;5:2:-1;;;;30:1;27;20:12;5:2;2370:51:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2370:51:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2370:51:13;;-1:-1:-1;;;;;;2435:28:13;;;2431:199;;2487:40;2512:14;2487:24;:40::i;:::-;2479:85;;;;;-1:-1:-1;;;2479:85:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2603:14;2578:41;;2431:199;2667:6;-1:-1:-1;;;;;2644:29:13;:19;-1:-1:-1;;;;;2644:29:13;;2640:247;;-1:-1:-1;;;;;2725:36:13;;;;;;;:15;:36;;;;;;;;:44;;;;;;;;;;;-1:-1:-1;2791:15:13;2783:24;;;;;;-1:-1:-1;;;;;2833:35:13;;;;;;;:14;:35;;;;;;;;:43;;;;;;;;;;;-1:-1:-1;2640:247:13;2963:20;;:42;;;-1:-1:-1;;;2963:42:13;;;;2897:41;;-1:-1:-1;;;;;2963:20:13;;:40;;:42;;;;;;;;;;;;;;:20;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;2963:42:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2963:42:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2963:42:13;3040:20;;:64;;;-1:-1:-1;;;3040:64:13;;-1:-1:-1;;;;;3040:64:13;;;;;;;;;2963:42;;-1:-1:-1;3016:21:13;;3040:20;;;;;:43;;:64;;;;;2963:42;;3040:64;;;;;;;:20;:64;;;5:2:-1;;;;30:1;27;20:12;5:2;3040:64:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3040:64:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3040:64:13;3186:21;;3040:64;;-1:-1:-1;3114:17:13;;;;3182:158;;3270:19;-1:-1:-1;;;;;3245:69:13;;3315:13;3245:84;;;;;;;;;;;;;-1:-1:-1;;;;;3245:84:13;-1:-1:-1;;;;;3245:84:13;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3245:84:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3245:84:13;;;;;;39:16:-1;36:1;17:17;2:54;101:4;3245:84:13;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;3245:84:13;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;-1:-1;3245:84:13;;-1:-1:-1;;;;;3182:158:13;3355:9;3350:1500;3374:14;:21;3370:1;:25;3350:1500;;;3416:13;3432:14;3447:1;3432:17;;;;;;;;;;;;;;3416:33;;3472:1;3477;3472:6;:39;;;;3490:14;3509:1;3505;:5;3490:21;;;;;;;;;;;;;;3482:5;:29;3472:39;3464:48;;;;;;3542:12;;3534:5;:20;3526:29;;;;;;-1:-1:-1;;;;;3574:35:13;;;;;;;:14;:35;;;;;;;;:43;;;;;;;;;;;:50;;;;;;;;;3570:64;;;3626:8;;;3570:64;3649:14;3705:6;-1:-1:-1;;;;;3682:29:13;:19;-1:-1:-1;;;;;3682:29:13;;3678:965;;3766:10;3758:5;:18;3754:206;;;3933:8;;;;3754:206;3995:5;3982:9;:18;;:36;;;;-1:-1:-1;4004:14:13;;;3982:36;3978:258;;;4212:5;;;;3978:258;4271:82;4290:5;4297:10;4309:14;4325:19;4346:6;4271:18;:82::i;:::-;4254:99;;4384:5;4392:1;4384:9;4371:22;;4421:19;-1:-1:-1;;;;;4421:38:13;;4460:14;4476:5;4483:13;4421:76;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4421:76:13;-1:-1:-1;;;;;4421:76:13;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4421:76:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4421:76:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4421:76:13;;-1:-1:-1;3678:965:13;;;4568:19;-1:-1:-1;;;;;4568:38:13;;4607:5;4614:13;4568:60;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4568:60:13;-1:-1:-1;;;;;4568:60:13;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4568:60:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4568:60:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4568:60:13;;-1:-1:-1;3678:965:13;4669:21;:9;4683:6;4669:21;:13;:21;:::i;:::-;4657:33;;4758:4;4705:14;:35;4720:19;-1:-1:-1;;;;;4705:35:13;-1:-1:-1;;;;;4705:35:13;;;;;;;;;;;;:43;4741:6;-1:-1:-1;;;;;4705:43:13;-1:-1:-1;;;;;4705:43:13;;;;;;;;;;;;:50;4749:5;4705:50;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;4825:5;4817:6;-1:-1:-1;;;;;4782:57:13;4796:19;-1:-1:-1;;;;;4782:57:13;;4832:6;4782:57;;;;;;;;;;;;;;;;;;3350:1500;;;3397:3;;3350:1500;;;;4860:19;-1:-1:-1;;;;;4860:34:13;;4895:9;4906:6;4860:53;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4860:53:13;-1:-1:-1;;;;;4860:53:13;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4860:53:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4860:53:13;;;;13707:1:12;;;;;;;;2051:2869:13;;:::o;29604:130:12:-;255:8:36;:6;:8::i;:::-;-1:-1:-1;;;;;241:22:36;:10;-1:-1:-1;;;;;241:22:36;;233:31;;;;;;13681:15:12;:13;:15::i;:::-;13673:24;;;;;;29698:17;:29;29604:130::o;8247:51::-;;;;;;;;;;;;;:::o;6965:70::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1713:32::-;;;;:::o;4561:52::-;;;;;;;;;;;;;:::o;32867:90::-;32909:16;32944:6;32937:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;32937:13:12;;;;;;;;;;;;;;;;;;;;;;;32867:90;:::o;4927:159:13:-;13681:15:12;:13;:15::i;:::-;13673:24;;;;;;5013:10:13;4996:14;5037:31;;;:23;:31;;;;;:38;;-1:-1:-1;;5037:38:13;5071:4;5037:38;;;4927:159::o;38221:1140:12:-;38358:20;;:64;;;-1:-1:-1;;;38358:64:12;;-1:-1:-1;;;;;38358:64:12;;;;;;;;;38315:7;;;;38358:20;;:43;;:64;;;;;;;;;;;;;;:20;:64;;;5:2:-1;;;;30:1;27;20:12;5:2;38358:64:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38358:64:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;38358:64:12;;-1:-1:-1;38438:65:12;38358:64;-1:-1:-1;;;;;38472:30:12;;;;;;;;38438:18;:65::i;:::-;38433:105;;38526:1;38519:8;;;;;38433:105;-1:-1:-1;;;;;38570:32:12;;;38548:19;38570:32;;;:11;:32;;;;;;;;:41;;;;;;;;;;;;38627:20;;:56;;-1:-1:-1;;;38627:56:12;;;;;;;;;;;38570:41;;38627:20;;:41;;:56;;;;;38570:32;;38627:56;;;;;:20;:56;;;5:2:-1;;;;30:1;27;20:12;5:2;38627:56:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38627:56:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;38627:56:12;38622:286;;38886:11;-1:-1:-1;38879:18:12;;-1:-1:-1;38879:18:12;38622:286;39139:25;39167:55;39193:19;39214:7;39167:25;:55::i;:::-;39139:83;;39251:17;39237:11;:31;39233:93;;;39298:17;39284:31;;39233:93;-1:-1:-1;39343:11:12;-1:-1:-1;;38221:1140:12;;;;;:::o;7979:37::-;;;;:::o;41767:167::-;-1:-1:-1;;;;;41883:44:12;;;;;;:23;:44;;;;;;;;;41876:51;;;;;;;;;;;;;;;;;41848:16;;41876:51;;;41883:44;41876:51;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;41876:51:12;;;;;;;;;;;;;;;;;;;;;;;41767:167;;;:::o;31360:933::-;13505:20;;;;;;;;;-1:-1:-1;;;;;13505:20:12;-1:-1:-1;;;;;13505:40:12;;:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13505:42:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13505:42:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13505:42:12;-1:-1:-1;;;;;13491:56:12;:10;:56;13483:65;;;;;;13681:15;:13;:15::i;:::-;13673:24;;;;;;31454:21;;:26;;;;:75;;;31508:21;;31484:20;;:45;;31454:75;31450:189;;;31568:21;;;31545:20;:44;-1:-1:-1;31603:25:12;;31450:189;31652:35;;:40;;;;:110;;;31727:35;;31696:27;;:66;;31652:110;31648:259;;;31808:35;;;31778:27;:65;-1:-1:-1;31857:39:12;;31648:259;31957:20;;:37;;;-1:-1:-1;;;31957:37:12;;;;31916:26;;-1:-1:-1;;;;;31957:20:12;;:35;;:37;;;;;;;;;;;;;;:20;:37;;;5:2:-1;;;;30:1;27;20:12;5:2;31957:37:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31957:37:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;31957:37:12;31945:71;;;-1:-1:-1;;;31945:71:12;;;;-1:-1:-1;;;;;31945:69:12;;;;;;:71;;;;;31957:37;;31945:71;;;;;;;;:69;:71;;;5:2:-1;;;;30:1;27;20:12;5:2;31945:71:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31945:71:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;31945:71:12;32030:26;;31945:71;;-1:-1:-1;32030:31:12;;;;:83;;;32087:26;;32065:18;:48;;32030:83;32026:261;;;32141:20;;;;;;;;;-1:-1:-1;;;;;32141:20:12;-1:-1:-1;;;;;32141:35:12;;:37;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;32141:37:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32141:37:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;32141:37:12;32205:26;;32129:103;;;-1:-1:-1;;;32129:103:12;;;;;;;;;;-1:-1:-1;;;;;32129:75:12;;;;;;:103;;;;;-1:-1:-1;;32129:103:12;;;;;;;;-1:-1:-1;32129:75:12;:103;;;5:2:-1;;;;30:1;27;20:12;5:2;32129:103:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;32275:1:12;32246:26;:30;-1:-1:-1;;13707:1:12;31360:933::o;42303:225::-;-1:-1:-1;;;;;42458:40:12;;;42428:7;42458:40;;;:19;:40;;;;;;;;:49;;;;;;;;;;;;42508:12;;42458:63;;;;;;;;42303:225::o;7774:27::-;;;;:::o;42614:199::-;42706:22;;42666:7;;42782:15;;:23;;42804:1;42782:23;;;42800:1;42782:23;42745:61;;42758:20;;42745:10;:33;:61;42738:68;;;42614:199;:::o;30220:182::-;255:8:36;:6;:8::i;:::-;-1:-1:-1;;;;;241:22:36;:10;-1:-1:-1;;;;;241:22:36;;233:31;;;;;;13681:15:12;:13;:15::i;:::-;13673:24;;;;;;30341:27;:58;30220:182::o;39737:1040::-;39879:20;;:64;;;-1:-1:-1;;;39879:64:12;;-1:-1:-1;;;;;39879:64:12;;;;;;;;;39836:7;;;;39879:20;;:43;;:64;;;;;;;;;;;;;;:20;:64;;;5:2:-1;;;;30:1;27;20:12;5:2;39879:64:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;39879:64:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;39879:64:12;;-1:-1:-1;39959:65:12;39879:64;-1:-1:-1;;;;;39993:30:12;;;;;;;;39959:18;:65::i;:::-;39954:105;;40047:1;40040:8;;;;;39954:105;40074:20;;:56;;;-1:-1:-1;;;40074:56:12;;-1:-1:-1;;;;;40074:56:12;;;;;;;;;:20;;;;;:41;;:56;;;;;;;;;;;;;;:20;:56;;;5:2:-1;;;;30:1;27;20:12;5:2;40074:56:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;40074:56:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;40074:56:12;40069:349;;40406:1;40399:8;;;;;40069:349;40668:102;40714:55;40740:19;40761:7;40714:25;:55::i;:::-;-1:-1:-1;;;;;40668:32:12;;;;;;;:11;:32;;;;;;;;:41;;;;;;;;;;;:102;:45;:102;:::i;:::-;40661:109;39737:1040;-1:-1:-1;;;;39737:1040:12:o;4273:81::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;30458:846::-;255:8:36;:6;:8::i;:::-;-1:-1:-1;;;;;241:22:36;:10;-1:-1:-1;;;;;241:22:36;;233:31;;;;;;13681:15:12;:13;:15::i;:::-;13673:24;;;;;;30671:22;30663:31;;;;;;30732;30712:17;:51;30704:60;;;;;;30802:22;30782:17;:42;;;;;;:47;30774:56;;;;;;30873:1;30848:22;:26;:31;30840:40;;;;;;30923:20;;;;;;;;;-1:-1:-1;;;;;30923:20:12;-1:-1:-1;;;;;30923:35:12;;:37;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30923:37:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30923:37:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;30923:37:12;30898:22;30923:37;30898:62;;;;;:67;30890:76;;;;;;30981:22;;30977:81;;31017:21;:41;;;30977:81;31072:36;;31068:123;;31122:35;:69;;;31068:123;31205:27;;31201:96;;31246:26;:51;-1:-1:-1;;30458:846:12:o;34147:158::-;34199:28;34229:11;34260:16;34278:19;;34252:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34147:158;;:::o;7664:42::-;;;;:::o;15642:464::-;13871:20;;-1:-1:-1;;;;;13871:20:12;13849:10;:43;13841:52;;;;;;-1:-1:-1;;;;;15765:40:12;;15757:49;;;;;;-1:-1:-1;;;;;15820:39:12;;;;;;:11;:39;;;;;;;;:67;;;;;;:72;15816:284;;15908:47;15928:26;15908:19;:47::i;:::-;15969:42;15984:26;15969:14;:42::i;:::-;15816:284;;;16042:47;16062:26;16042:19;:47::i;35863:542::-;-1:-1:-1;;;;;36057:21:12;;36025:29;36057:21;;;:12;:21;;;;;35990:23;;36092:12;36088:61;;36120:18;;;;;;;;;;;;;;;;;;;;36127:11;;36120:18;;36127:11;36120:18;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;36120:18:12;;;;;;;;;;;;;;;;;;;;;;;;;;36088:61;36178:18;;36158:17;;36178:31;;36201:7;36178:31;:22;:31;:::i;:::-;36158:51;;36252:9;36242:7;:19;:41;;36276:7;36242:41;;;36264:9;36242:41;36228:56;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;36228:56:12;-1:-1:-1;36219:65:12;-1:-1:-1;36299:9:12;36294:105;36318:6;:13;36314:1;:17;36294:105;;;36364:11;36386:1;36376:7;:11;36364:24;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;36364:24:12;36352:6;36359:1;36352:9;;;;;;;;-1:-1:-1;;;;;36352:36:12;;;:9;;;;;;;;;;;:36;36333:3;;36294:105;;;;35863:542;;;;;;;;:::o;41340:151::-;-1:-1:-1;;;;;41448:36:12;;;;;;:15;:36;;;;;;;;;41441:43;;;;;;;;;;;;;;;;;41413:16;;41441:43;;;41448:36;41441:43;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;41441:43:12;;;;;;;;;;;;;;;;;;;;;;41340:151;;;:::o;3300:73::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;40938:108::-;41015:4;41031:8;;;34759:112;34812:16;34847:17;34840:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;34840:24:12;;;;;;;;;;;;;;;;;;;;;;34759:112;:::o;6565:66::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;36614:130::-;-1:-1:-1;;;;;36709:21:12;36683:7;36709:21;;;:12;:21;;;;;:28;;36614:130::o;37656:206::-;-1:-1:-1;;;;;37755:26:12;;37723:4;37755:26;;;:9;:26;;;;;;37806:13;;37798:21;;:57;;;;;37840:15;-1:-1:-1;;;;;37823:32:12;:6;37830:5;37823:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;37823:13:12;:32;37791:64;37656:206;-1:-1:-1;;;37656:206:12:o;22145:135::-;22235:38;22242:21;22265:7;22235:6;:38::i;4958:44::-;;;;;;;;;;;;;:::o;23870:4183::-;13324:11;13316:25;;;;;;13681:15;:13;:15::i;:::-;13673:24;;;;;;-1:-1:-1;;;;;23997:33:12;;23989:42;;;;;;24049:12;24041:21;;;;;;24151:20;;:64;;;-1:-1:-1;;;24151:64:12;;-1:-1:-1;;;;;24151:64:12;;;;;;;;;24090:10;;24119:137;;24151:20;;:43;;:64;;;;;;;;;;;;;;:20;:64;;;5:2:-1;;;;30:1;27;20:12;5:2;24151:64:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24151:64:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24151:64:12;-1:-1:-1;;;;;24217:29:12;;;;;;;;24119:18;:137::i;:::-;24111:146;;;;;;-1:-1:-1;;;;;24295:42:12;;;24268:24;24295:42;;;:21;:42;;;;;;;;:50;;;;;;;;;;;;;24387:47;;;:26;:47;;;;;;24469:11;:32;;;;;:40;;;;;;;;;;24549:37;;;:16;:37;;;;;;24295:50;;24387:47;24469:40;24600:11;;24596:915;;;24652:7;24793:52;24817:19;24838:6;24793:23;:52::i;:::-;24783:6;:62;;24775:71;;;;;;24880:28;:16;24901:6;24880:28;:20;:28;:::i;:::-;24861:47;-1:-1:-1;24946:33:12;:21;24972:6;24946:33;:25;:33;:::i;:::-;24922:57;-1:-1:-1;25010:26:12;:14;25029:6;25010:26;:18;:26;:::i;:::-;24993:43;-1:-1:-1;25072:31:12;:19;25096:6;25072:31;:23;:31;:::i;:::-;25167:12;;-1:-1:-1;;;;;25117:39:12;;;;;;;:18;:39;;;;;;;;:47;;;;;;;;;:62;25050:53;-1:-1:-1;24596:915:12;;-1:-1:-1;24596:915:12;;25210:14;25235:8;;;25277:28;:16;25235:8;25277:28;:20;:28;:::i;:::-;25258:47;-1:-1:-1;25343:33:12;:21;25369:6;25343:33;:25;:33;:::i;:::-;25319:57;-1:-1:-1;25407:26:12;:14;25426:6;25407:26;:18;:26;:::i;:::-;25390:43;-1:-1:-1;25469:31:12;:19;25493:6;25469:31;:23;:31;:::i;:::-;25447:53;;24596:915;;-1:-1:-1;;;;;25520:42:12;;;;;;;:21;:42;;;;;;;;:50;;;;;;;;;;;;:69;;;25599:47;;;:26;:47;;;;;:71;;;25680:11;:32;;;;;:40;;;;;;;;:57;;;25747:37;;;:16;:37;;;;;:59;;;25821:29;25817:2099;;;26041:19;;;:58;;;26082:17;;26064:14;:35;;26041:58;26033:67;;;;;;26151:20;;:43;;;-1:-1:-1;;;26151:43:12;;;;26115:33;;-1:-1:-1;;;;;26151:20:12;;:41;;:43;;;;;;;;;;;;;;:20;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;26151:43:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26151:43:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;26151:43:12;;-1:-1:-1;26223:1:12;26213:11;;26209:664;;;26304:19;;:71;;;;;26350:25;-1:-1:-1;;;;;26327:48:12;:19;-1:-1:-1;;;;;26327:48:12;;;26304:71;26300:293;;;26534:40;26554:19;26534;:40::i;:::-;26209:664;;;26773:85;26788:19;26832:25;-1:-1:-1;;;;;26809:48:12;:19;-1:-1:-1;;;;;26809:48:12;;;26773:14;:85::i;:::-;25817:2099;;;;27078:19;;;:58;;;27119:17;;27101:14;:35;;27078:58;27070:67;;;;;;27166:1;27156:7;:11;27152:602;;;27247:19;27243:258;;27433:49;27454:19;27475:6;27433:20;:49::i;:::-;27152:602;;;27693:46;27711:19;27732:6;27693:17;:46::i;:::-;27853:52;27877:19;27898:6;27853:23;:52::i;:::-;27926:35;27941:19;27926:14;:35::i;:::-;28024:12;;28016:6;-1:-1:-1;;;;;27977:69:12;27995:19;-1:-1:-1;;;;;27977:69:12;;28038:7;27977:69;;;;;;;;;;;;;;;;;;13707:1;;;;;23870:4183;;:::o;7407:69::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;28410:995::-;13324:11;13316:25;;;;;;13681:15;:13;:15::i;:::-;13673:24;;;;;;-1:-1:-1;;;;;28589:39:12;;28520:22;28589:39;;;:18;:39;;;;;;;;28545:10;28589:47;;;;;;;;;28574:12;;:62;28566:71;;;;;;28687:20;;:64;;;-1:-1:-1;;;28687:64:12;;-1:-1:-1;;;;;28687:64:12;;;;;;;;;28655:137;;28687:20;;;;;:43;;:64;;;;;;;;;;;;;;;:20;:64;;;5:2:-1;;;;30:1;27;20:12;5:2;28687:64:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28687:64:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;28687:64:12;-1:-1:-1;;;;;28753:29:12;;;;;;;;28655:18;:137::i;:::-;28647:146;;;;;;-1:-1:-1;;;;;28826:42:12;;;28804:19;28826:42;;;:21;:42;;;;;;;;:50;;;;;;;;;;28894:16;28886:25;;;;;;-1:-1:-1;;;;;28922:42:12;;;28975:1;28922:42;;;:21;:42;;;;;;;;:50;;;;;;;;;;;:54;;;29048:47;;;:26;:47;;;;;:64;;29100:11;29048:64;:51;:64;:::i;:::-;-1:-1:-1;;;;;28986:47:12;;;;;;;:26;:47;;;;;;;;:126;;;;29127:11;:32;;;;;:40;;;;;;;;;;;29123:123;;29188:47;29207:19;29228:6;29188:18;:47::i;:::-;29256:46;29282:6;29290:11;29256:25;:46::i;:::-;29372:12;;29364:6;-1:-1:-1;;;;;29318:80:12;29343:19;-1:-1:-1;;;;;29318:80:12;;29386:11;29318:80;;;;;;;;;;;;;;;;;;13707:1;;28410:995;:::o;35366:112::-;35419:16;35454:17;35447:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;35447:24:12;;;;;;;;;;;;;;;;;;;;;;35366:112;:::o;5093:162:13:-;13681:15:12;:13;:15::i;:::-;13673:24;;;;;;5182:10:13;5165:14;5206:31;;;:23;:31;;;;;:39;;-1:-1:-1;;5206:39:13;;;5093:162::o;7864:35:12:-;;;;:::o;1829:32::-;;;;:::o;2872:61::-;;;;;;;;;;;;;:::o;33352:106::-;33402:16;33437:14;33430:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;33430:21:12;;;;;;;;;;;;;;;;;;;;;;33352:106;:::o;8366:45::-;;;-1:-1:-1;;;;;8366:45:12;;:::o;5265:142:13:-;-1:-1:-1;;;;;5364:32:13;5336:4;5364:32;;;:23;:32;;;;;;;;;5265:142::o;2600:76:12:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;19633:501::-;13324:11;13316:25;;;;;;13681:15;:13;:15::i;:::-;13673:24;;;;;;19777:20;;:59;;;-1:-1:-1;;;19777:59:12;;19733:10;19777:59;;;;;;;;19733:10;;19708:22;;-1:-1:-1;;;;;19777:20:12;;;;:43;;:59;;;;;;;;;;;;;;:20;:59;;;5:2:-1;;;;30:1;27;20:12;5:2;19777:59:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19777:59:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19777:59:12;19941:12;;19777:59;;-1:-1:-1;19941:16:12;;;:68;;-1:-1:-1;19962:20:12;;:47;;;-1:-1:-1;;;19962:47:12;;-1:-1:-1;;;;;19962:47:12;;;;;;;;;:20;;;;;:32;;:47;;;;;;;;;;;;;;:20;:47;;;5:2:-1;;;;30:1;27;20:12;5:2;19962:47:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19962:47:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19962:47:12;19961:48;19941:68;19933:77;;;;;;20046:20;;;;;;;;;-1:-1:-1;;;;;20046:20:12;-1:-1:-1;;;;;20046:41:12;;:43;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20046:43:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20046:43:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20046:43:12;-1:-1:-1;;;;;20028:61:12;;;;;;;20020:70;;;;;;20100:27;20112:14;20100:11;:27::i;5851:55::-;;;;;;;;;;;;;:::o;16290:98::-;13871:20;;-1:-1:-1;;;;;13871:20:12;13849:10;:43;13841:52;;;;;;16367:12;:14;;;;;;16290:98::o;8773:45::-;8814:4;8773:45;:::o;22789:358::-;13324:11;13316:25;;;;;;13681:15;:13;:15::i;:::-;13673:24;;;;;;22933:10;22953:51;22963:23;22933:10;22996:7;22953:9;:51::i;:::-;23014:42;23040:6;23048:7;23014:25;:42::i;:::-;23118:12;;23110:6;-1:-1:-1;;;;;23071:69:12;23085:23;-1:-1:-1;;;;;23071:69:12;;23132:7;23071:69;;;;;;;;;;;;;;;;;;13707:1;22789:358;;:::o;36889:352::-;36947:4;36963:20;36986:24;:22;:24::i;:::-;37069:27;;37046:20;;37125:22;;36963:47;;-1:-1:-1;37046:50:12;;37110:37;;37106:55;;;37156:5;37149:12;;;;;;37106:55;37193:22;;37178:37;;;:56;;;-1:-1:-1;36889:352:12;:::o;5412:55::-;;;;;;;;;;;;;:::o;6085:1906:13:-;6239:17;6268:18;6296:17;6351:7;-1:-1:-1;;;;;6328:30:13;:19;-1:-1:-1;;;;;6328:30:13;;6324:250;;-1:-1:-1;;;;;6410:36:13;;;;;;;:15;:36;;;;;;;;:45;;;;;;;;;;;-1:-1:-1;6477:15:13;6469:24;;;;;;-1:-1:-1;;;;;;6519:35:13;;;;;;;:14;:35;;;;;;;;:44;;;;;;;;;;6324:250;6650:20;;:42;;;-1:-1:-1;;;6650:42:13;;;;6584:41;;-1:-1:-1;;;;;6650:20:13;;:40;;:42;;;;;;;;;;;;;;:20;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;6650:42:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6650:42:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6650:42:13;6727:20;;:64;;;-1:-1:-1;;;6727:64:13;;-1:-1:-1;;;;;6727:64:13;;;;;;;;;6650:42;;-1:-1:-1;6703:21:13;;6727:20;;;;;:43;;:64;;;;;6650:42;;6727:64;;;;;;;:20;:64;;;5:2:-1;;;;30:1;27;20:12;5:2;6727:64:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6727:64:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6727:64:13;6865:21;;6801:22;;-1:-1:-1;6727:64:13;;-1:-1:-1;6801:22:13;;6861:158;;6949:19;-1:-1:-1;;;;;6924:69:13;;6994:13;6924:84;;;;;;;;;;;;;-1:-1:-1;;;;;6924:84:13;-1:-1:-1;;;;;6924:84:13;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6924:84:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6924:84:13;;;;;;39:16:-1;36:1;17:17;2:54;101:4;6924:84:13;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;6924:84:13;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;-1:-1;6924:84:13;;-1:-1:-1;;;;;6861:158:13;7034:9;7029:956;7053:14;:21;7049:1;:25;7029:956;;;7095:13;7111:14;7126:1;7111:17;;;;;;;;;;;;;;7095:33;;7151:1;7156;7151:6;:39;;;;7169:14;7188:1;7184;:5;7169:21;;;;;;;;;;;;;;7161:5;:29;7151:39;7143:48;;;;;;7221:12;;7213:5;:20;7205:29;;;;;;-1:-1:-1;;;;;7253:35:13;;;;;;;:14;:35;;;;;;;;:44;;;;;;;;;;;:51;;;;;;;;;7249:65;;;7306:8;;;7249:65;7329:14;7385:7;-1:-1:-1;;;;;7362:30:13;:19;-1:-1:-1;;;;;7362:30:13;;7358:583;;7447:10;7439:5;:18;7435:32;;;7459:8;;;;7435:32;7502:5;7489:9;:18;;:36;;;;-1:-1:-1;7511:14:13;;;7489:36;7485:47;;;7527:5;;;;7485:47;7568:83;7587:5;7594:10;7606:14;7622:19;7643:7;7568:18;:83::i;:::-;7551:100;;7682:5;7690:1;7682:9;7669:22;;7719:19;-1:-1:-1;;;;;7719:38:13;;7758:14;7774:5;7781:13;7719:76;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7719:76:13;-1:-1:-1;;;;;7719:76:13;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7719:76:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7719:76:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7719:76:13;;-1:-1:-1;7358:583:13;;;7866:19;-1:-1:-1;;;;;7866:38:13;;7905:5;7912:13;7866:60;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7866:60:13;-1:-1:-1;;;;;7866:60:13;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7866:60:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7866:60:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7866:60:13;;-1:-1:-1;7358:583:13;7955:19;;;;;-1:-1:-1;7029:956:13;7076:3;;7029:956;;;;6085:1906;;;;;;;;;;:::o;48583:761:12:-;-1:-1:-1;;;;;48672:26:12;;48648:21;48672:26;;;:9;:26;;;;;;48712:13;;:29;-1:-1:-1;48712:73:12;;;;;48770:15;-1:-1:-1;;;;;48745:40:12;:6;48752:13;48745:21;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;48745:21:12;:40;48712:73;48708:363;;;48801:16;48827:13;;48801:16;;-1:-1:-1;;48827:17:12;;;48820:25;;;;;;;;;;;;;;;48859:21;;-1:-1:-1;;;;;48820:25:12;;;;-1:-1:-1;48820:25:12;;;48866:13;;48859:21;;;;;;;;;;;;;;;;;;:32;;-1:-1:-1;;;;;;48859:32:12;-1:-1:-1;;;;;48859:32:12;;;;;;48905:19;;;;;:9;:19;;;;;;:35;;;48954:26;;;;;;;;:30;;;48998:15;;;;;-1:-1:-1;;48998:15:12;;;:::i;:::-;-1:-1:-1;49032:28:12;;-1:-1:-1;;;;;49032:28:12;;;;;;;;48708:363;;49084:29;49097:15;49084:12;:29::i;:::-;49080:160;;;49129:36;49149:15;49129:19;:36::i;:::-;49080:160;;;49196:33;49213:15;49196:16;:33::i;:::-;49249:39;49272:15;49249:22;:39::i;:::-;49298;49321:15;49298:22;:39::i;50647:1174::-;50863:24;:22;:24::i;:::-;:29;;:55;;;50910:8;:6;:8::i;:::-;-1:-1:-1;;;;;50896:22:12;:10;-1:-1:-1;;;;;50896:22:12;;50863:55;50855:64;;;;;;50938:15;:13;:15::i;:::-;50937:16;50929:25;;;;;;-1:-1:-1;;;;;51012:35:12;;51004:44;;;;;;51100:1;51066:24;:31;:35;51058:44;;;;;;51120:23;51112:32;;;;;;51162:23;51154:32;;;;;;51197:20;:63;;-1:-1:-1;;;;;;51197:63:12;-1:-1:-1;;;;;51197:63:12;;;;;;;;;;;51307:43;;;-1:-1:-1;;;51307:43:12;;;;-1:-1:-1;;51307:20:12;;;;:41;;:43;;;;;;;;;;;;;;;:20;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;51307:43:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;51307:43:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;51307:43:12;;-1:-1:-1;51366:9:12;51361:357;51385:24;:31;51381:1;:35;51361:357;;;51484:1;-1:-1:-1;;;;;51445:41:12;:24;51470:1;51445:27;;;;;;;;;;;;;;-1:-1:-1;;;;;51445:41:12;;;51437:50;;;;;;51501;51516:24;51541:1;51516:27;;;;;;;;;;;;;;51545:5;51501:14;:50::i;:::-;51600:25;-1:-1:-1;;;;;51569:56:12;:24;51594:1;51569:27;;;;;;;;;;;;;;-1:-1:-1;;;;;51569:56:12;;51565:143;;51645:48;51665:24;51690:1;51665:27;;;;;;;;;;;;;;51645:19;:48::i;:::-;51418:3;;51361:357;;;-1:-1:-1;;51728:17:12;:38;;;;51776:17;:38;-1:-1:-1;;50647:1174:12:o;370:156:34:-;250:66;499:11;;478:42::o;61189:1445:12:-;-1:-1:-1;;;;;61298:33:12;;61290:42;;;;;;61350:12;61342:21;;;;;;61477:48;61496:19;61517:7;61477:18;:48::i;:::-;61466:7;:59;;61458:68;;;;;;-1:-1:-1;;;;;61562:32:12;;;61537:22;61562:32;;;:11;:32;;;;;;;;:41;;;;;;;;;;;;:54;;61608:7;61562:54;:45;:54;:::i;:::-;61537:79;;61776:23;61826:7;-1:-1:-1;;;;;61803:30:12;:19;-1:-1:-1;;;;;61803:30:12;;61802:72;;61857:17;;61802:72;;;61837:17;;61802:72;61776:98;-1:-1:-1;61892:19:12;;;:56;;;61933:15;61915:14;:33;;61892:56;61884:65;;;;;;-1:-1:-1;;;;;61960:32:12;;;;;;;:11;:32;;;;;;;;:41;;;;;;;;;;;:58;;;62052:55;61972:19;61993:7;62052:25;:55::i;:::-;62028:79;;62212:7;62195:13;:24;;:54;;62248:1;62195:54;;;62238:7;62222:13;:23;62195:54;-1:-1:-1;;;;;62117:40:12;;;;;;;:19;:40;;;;;;;;:49;;;;;;;;;;;62167:12;;62117:63;;;;;;;:132;;;;62299:37;;;:16;:37;;;;;;:50;;62341:7;62299:50;:41;:50;:::i;:::-;-1:-1:-1;;;;;62259:37:12;;;;;;:16;:37;;;;;:90;62364:19;62360:98;;62399:48;62418:19;62439:7;62399:18;:48::i;:::-;62483:19;-1:-1:-1;;;;;62472:30:12;:7;-1:-1:-1;;;;;62472:30:12;;62468:114;;62518:53;62542:19;62563:7;62518:23;:53::i;:::-;62592:35;62607:19;62592:14;:35::i;:::-;61189:1445;;;;;;:::o;58287:2518::-;58413:20;;:64;;;-1:-1:-1;;;58413:64:12;;-1:-1:-1;;;;;58413:64:12;;;;;;;;;58385:25;;58413:20;;;;;:43;;:64;;;;;;;;;;;;;;;:20;:64;;;5:2:-1;;;;30:1;27;20:12;5:2;58413:64:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;58413:64:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;58413:64:12;;-1:-1:-1;;;;;;58496:31:12;;58488:40;;;;;;-1:-1:-1;;;;;58546:33:12;;58538:42;;;;;;58598:12;58590:21;;;;;;58630:20;;:57;;;-1:-1:-1;;;58630:57:12;;-1:-1:-1;;;;;58630:57:12;;;;;;;;;:20;;;;;:38;;:57;;;;;;;;;;;;;;:20;:57;;;5:2:-1;;;;30:1;27;20:12;5:2;58630:57:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;58630:57:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;58630:57:12;58629:58;58621:67;;;;;;58706:28;:26;:28::i;:::-;58698:37;;;;;;-1:-1:-1;;;;;58771:32:12;;;58746:22;58771:32;;;:11;:32;;;;;;;;:41;;;;;;;;;;;;:54;;58817:7;58771:54;:45;:54;:::i;:::-;58746:79;;58851:19;-1:-1:-1;;;;;58840:30:12;:7;-1:-1:-1;;;;;58840:30:12;;58836:581;;;58982:17;;58964:14;:35;;58956:44;;;;;;58836:581;;;59127:17;;59109:14;:35;;59101:44;;;;;;-1:-1:-1;;;;;59347:32:12;;;;;;:11;:32;;;;;;;;:53;;;;;;59339:67;;;;;;-1:-1:-1;;;;;59427:32:12;;;;;;;:11;:32;;;;;;;;:41;;;;;;;;;:58;;;59573:68;59633:7;59573:55;59439:19;59460:7;59573:25;:55::i;:::-;:59;:68;:59;:68;:::i;:::-;-1:-1:-1;;;;;59495:40:12;;;;;;;:19;:40;;;;;;;;:49;;;;;;;;;;;59545:12;;59495:63;;;;;;;:146;;;;59691:37;;;:16;:37;;;;;;:50;;59733:7;59691:50;:41;:50;:::i;:::-;-1:-1:-1;;;;;59651:37:12;;;;;;;:16;:37;;;;;:90;;;;59756:30;;;59752:556;;;59928:103;59943:19;59987:20;;;;;;;;;-1:-1:-1;;;;;59987:20:12;-1:-1:-1;;;;;59987:41:12;;:43;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;59987:43:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;59987:43:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;59987:43:12;-1:-1:-1;;;;;59964:66:12;;;;;;;59928:14;:103::i;:::-;59752:556;;;60125:47;60143:19;60164:7;60125:17;:47::i;:::-;60244:53;60268:19;60289:7;60244:23;:53::i;:::-;60318:35;60333:19;60318:14;:35::i;:::-;-1:-1:-1;;;;;60469:21:12;;;60437:29;60469:21;;;:12;:21;;;;;;;;60516:19;:28;;;;;:49;;;;;;;;;;;;60588:18;;60579:27;;;;:72;;;60632:19;-1:-1:-1;;;;;60610:41:12;:11;60622:5;60610:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;60610:18:12;:41;;60579:72;60575:224;;;60719:18;;-1:-1:-1;;;;;60667:28:12;;;;;;;:19;:28;;;;;;;;:49;;;;;;;;;;;:70;;;39:1:-1;23:18;;45:23;;60751:37:12;;;;;;;;;;-1:-1:-1;;;;;;60751:37:12;;;;;;60575:224;58287:2518;;;;;;;:::o;9012:314:13:-;13324:11:12;13316:25;;;;;;13681:15;:13;:15::i;:::-;13673:24;;;;;;-1:-1:-1;9174:9:13;9144:10;9193:46;9200:21;9144:10;9174:9;9193:6;:46::i;:::-;9297:12;;9289:6;-1:-1:-1;;;;;9254:65:13;9266:21;-1:-1:-1;;;;;9254:65:13;;9311:7;9254:65;;;;;;;;;;;;;;;;;;13707:1:12;9012:314:13;;:::o;64225:679:12:-;64436:22;64470:428;-1:-1:-1;;;;;;64514:43:12;;;;;;;:22;:43;;;;;;;;:55;;;;;;;;;;;:63;;;;;;;64595:19;;64591:275;;-1:-1:-1;;64652:14:12;:29;64651:52;;64689:14;64651:52;;;64685:1;64651:52;64634:69;;64721:5;;64591:275;64761:11;64751:6;:21;64747:119;;;-1:-1:-1;64809:19:12;64846:5;;64747:119;-1:-1:-1;;64879:8:12;;;;64470:428;;;64225:679;;;;;;;:::o;773:143:29:-;830:7;861:5;;;884:6;;;;876:15;;;;;66765:705:12;66858:4;66878:12;66874:486;;;66910:20;;:56;;;-1:-1:-1;;;66910:56:12;;-1:-1:-1;;;;;66910:56:12;;;;;;;;;:20;;;;;:40;;:56;;;;;;;;;;;;;;:20;:56;;;5:2:-1;;;;30:1;27;20:12;5:2;66910:56:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;66910:56:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;66910:56:12;66906:212;;;-1:-1:-1;67098:5:12;67091:12;;66906:212;66874:486;;;67152:20;;:54;;;-1:-1:-1;;;67152:54:12;;-1:-1:-1;;;;;67152:54:12;;;;;;;;;:20;;;;;:38;;:54;;;;;;;;;;;;;;:20;:54;;;5:2:-1;;;;30:1;27;20:12;5:2;67152:54:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;67152:54:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;67152:54:12;67148:202;;;-1:-1:-1;67330:5:12;67323:12;;67148:202;67375:28;:26;:28::i;:::-;67370:72;;-1:-1:-1;67426:5:12;67419:12;;67370:72;-1:-1:-1;67459:4:12;66765:705;;;;:::o;647:120:29:-;704:7;736:1;731;:6;;723:15;;;;;;-1:-1:-1;755:5:29;;;647:120::o;44795:548:12:-;-1:-1:-1;;;;;44884:37:12;;44868:13;44884:37;;;:20;:37;;;;;;44948:17;:24;44986:15;;;;;:62;;;45033:15;-1:-1:-1;;;;;45005:43:12;:17;45023:5;45005:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;45005:24:12;:43;;44986:62;44982:306;;;-1:-1:-1;;;;;45064:37:12;;;;;;:20;:37;;;;;:46;;;45124:17;27:10:-1;;39:1;23:18;;;45:23;;;45124:39:12;;;;-1:-1:-1;;;;;;45124:39:12;;;;;;;45177:16;27:10:-1;;23:18;;;45:23;;45177:24:12;;;;;;;44982:306;45297:39;45320:15;45297:22;:39::i;56302:581::-;56375:18;56395:13;56412:39;56431:19;56412:18;:39::i;:::-;56374:77;;;;56467:13;56462:27;;56482:7;;;;56462:27;56499:16;56518;56535:5;56518:23;;;;;;;;;;;;;;;;56499:42;;56551:16;56570;:37;56587:19;-1:-1:-1;;;;;56570:37:12;-1:-1:-1;;;;;56570:37:12;;;;;;;;;;;;;56551:56;;56644:8;56618:16;56635:5;56618:23;;;;;;;;;;;;;;;;;:34;56667:20;;;56663:214;;56725:19;;:44;;56749:19;;;56725:44;:23;:44;:::i;:::-;56703:19;:66;56663:214;;;56822:19;;:44;;56846:19;;;56822:44;:23;:44;:::i;:::-;56800:19;:66;56663:214;56302:581;;;;;:::o;45620:434::-;-1:-1:-1;;;;;45709:37:12;;45693:13;45709:37;;;:20;:37;;;;;;45773:17;:24;45811:15;;;;;:62;;;45858:15;-1:-1:-1;;;;;45830:43:12;:17;45848:5;45830:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;45830:24:12;:43;;45811:62;45807:192;;;-1:-1:-1;;;;;45889:37:12;;;;;;:20;:37;;;;;:46;;;45949:17;27:10:-1;;39:1;23:18;;45:23;;45949:39:12;;;;;;-1:-1:-1;;;;;;45949:39:12;;;;;;45807:192;46008:39;46031:15;46008:22;:39::i;43398:476::-;43490:29;43503:15;43490:12;:29::i;:::-;43485:249;;43564:6;:13;;-1:-1:-1;;;;;43535:26:12;;;;;:9;:26;;;;;:42;;;39:1:-1;23:18;;45:23;;43591:28:12;;;;;;;-1:-1:-1;;;;;;43591:28:12;;;;;;43658:19;:17;:19::i;:::-;43641:6;:13;:36;;43633:45;;;;;;43697:26;;-1:-1:-1;;;;;43697:26:12;;;;;;;;43485:249;43743:36;43763:15;43743:19;:36::i;:::-;43793:12;43789:79;;;43821:36;43841:15;43821:19;:36::i;53803:920::-;-1:-1:-1;;;;;53932:36:12;;;53901:28;53932:36;;;:15;:36;;;;;;;;54002:18;:39;;;;;:51;;;;;;;;;;;;54067:17;;:33;-1:-1:-1;54067:76:12;;;;;54133:10;-1:-1:-1;;;;;54104:39:12;:10;54115:13;54104:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;54104:25:12;:39;54067:76;54063:405;;;54194:17;;54159:21;;54183:10;;-1:-1:-1;;54194:21:12;;;54183:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;54183:33:12;54159:57;;54258:13;54230:10;54241:13;54230:25;;;;;;;;;;;;;;;;;;;;:41;;-1:-1:-1;;;;;;54230:41:12;-1:-1:-1;;;;;54230:41:12;;;;;;54285:39;;;;;:18;:39;;;;;;:54;;;;;;;;;;;:70;;;54369:51;;;;;;;;:55;54438:19;;;;-1:-1:-1;;54438:19:12;;;:::i;:::-;;54063:405;;-1:-1:-1;;;;;54481:42:12;;;;;;;:21;:42;;;;;;;;:54;;;;;;;;;;:59;54477:240;;54556:58;54582:19;54603:10;54556:25;:58::i;:::-;54477:240;;;54645:61;54674:19;54695:10;54645:28;:61::i;:::-;53803:920;;;;:::o;52140:552::-;-1:-1:-1;;;;;52266:36:12;;;52235:28;52266:36;;;:15;:36;;;;;;;;52328:18;:39;;;;;:51;;;;;;;;;;;;52406:17;;52437:15;;;;;:50;;;52477:10;-1:-1:-1;;;;;52456:31:12;:10;52467:5;52456:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;52456:17:12;:31;;52437:50;52433:182;;;-1:-1:-1;;;;;52503:39:12;;;;;;;:18;:39;;;;;;;;:51;;;;;;;;;;;:60;;;27:10:-1;;39:1;23:18;;45:23;;52577:27:12;;;;;;;;-1:-1:-1;;;;;;52577:27:12;;;;;;52433:182;52624:61;52653:19;52674:10;52624:28;:61::i;57218:626::-;57346:12;;-1:-1:-1;;;;;57392:32:12;;;57319:24;57392:32;;;:11;:32;;;;;;;;:44;;;;;;;;;;57361:1;57346:16;;;;57536:14;57535:42;;-1:-1:-1;;57535:42:12;;;57554:9;57535:42;-1:-1:-1;;;;;57447:43:12;;;;;;;:22;:43;;;;;;;;:55;;;;;;;;;;;;:73;;;;;;;;:130;;;;57592:36;;;:15;:36;;;;;:48;;;;;;;;57588:151;;-1:-1:-1;;;;;57661:36:12;;;;;;;:15;:36;;;;;;;;:48;;;;;;;;;:67;;;57588:151;57799:14;;57798:39;;57836:1;57798:39;;;57817:16;57798:39;-1:-1:-1;;;;;57748:35:12;;;;;;;:14;:35;;;;;;;;:47;;;;;;;;;;;;;;:89;;;;-1:-1:-1;;57218:626:12:o;62945:865::-;63053:19;-1:-1:-1;;;;;63042:30:12;:7;-1:-1:-1;;;;;63042:30:12;;63038:766;;;63124:20;;:43;;;-1:-1:-1;;;63124:43:12;;;;63088:33;;-1:-1:-1;;;;;63124:20:12;;:41;;:43;;;;;;;;;;;;;;:20;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;63124:43:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;63124:43:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;63124:43:12;;-1:-1:-1;;;;;;63186:48:12;;;;;;;63182:405;;63278:20;;:64;;;-1:-1:-1;;;63278:64:12;;-1:-1:-1;;;;;63278:64:12;;;;;;;;;63254:21;;63278:20;;;;;:43;;:64;;;;;;;;;;;;;;;:20;:64;;;5:2:-1;;;;30:1;27;20:12;5:2;63278:64:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;63278:64:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;63278:64:12;63364:20;;:47;;;-1:-1:-1;;;63364:47:12;;-1:-1:-1;;;;;63364:47:12;;;;;;;;;63278:64;;-1:-1:-1;63364:20:12;;;:32;;:47;;;;;63278:64;;63364:47;;;;;;;;:20;:47;;;5:2:-1;;;;30:1;27;20:12;5:2;63364:47:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;63364:47:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;63364:47:12;63360:213;;;63435:40;63455:19;63435;:40::i;:::-;63360:213;;;63522:32;63534:19;63522:11;:32::i;:::-;63182:405;;63038:766;;;;63617:50;63638:19;63659:7;63617:20;:50::i;:::-;63686:33;63699:19;63686:12;:33::i;:::-;63682:112;;;63739:40;63759:19;63739;:40::i;8288:420:13:-;8385:17;;-1:-1:-1;;;;;8385:8:13;;;:17;;;;;8394:7;;8385:17;;;;8394:7;8385:8;:17;;;;;;;8380:322;;8678:7;8687:3;8656:35;;;;;:::i;:::-;-1:-1:-1;;;;;8656:35:13;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;63893:101:12;63975:12;63893:101;:::o;65381:201::-;-1:-1:-1;;;;;65477:37:12;;65454:4;65477:37;;;:16;:37;;;;;;:42;:98;;;;-1:-1:-1;;;;;;;65523:47:12;;;;;:26;:47;;;;;;:52;;65381:201::o;49667:527::-;-1:-1:-1;;;;;49764:34:12;;49740:21;49764:34;;;:17;:34;;;;;;49812:14;:21;:37;-1:-1:-1;49812:89:12;;;;;49886:15;-1:-1:-1;;;;;49853:48:12;:14;49868:13;49853:29;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;49853:29:12;:48;49812:89;49808:380;;;49936:14;49951:21;;49917:16;;49936:14;-1:-1:-1;;49951:25:12;;;49936:41;;;;;;;;;;;;;;;;;49991:29;;-1:-1:-1;;;;;49936:41:12;;;;-1:-1:-1;49936:41:12;;50006:13;;49991:29;;;;;;;;;;;;;;;;;;:40;;-1:-1:-1;;;;;;49991:40:12;-1:-1:-1;;;;;49991:40:12;;;;;;50045:27;;;;;:17;:27;;;;;;:43;;;50102:34;;;;;;;;:38;-1:-1:-1;50154:23:12;;;;;-1:-1:-1;;50154:23:12;;;:::i;44133:367::-;-1:-1:-1;;;;;44219:34:12;;44203:13;44219:34;;;:17;:34;;;;;;44280:14;:21;44315:15;;;;;:59;;;44359:15;-1:-1:-1;;;;;44334:40:12;:14;44349:5;44334:21;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;44334:21:12;:40;;44315:59;44311:183;;;-1:-1:-1;;;;;44390:34:12;;;;;;:17;:34;;;;;:43;;;44447:14;27:10:-1;;23:18;;;45:23;;44447:36:12;;;;;;-1:-1:-1;;;;;;44447:36:12;;;;;;44133:367;;;:::o;46390:1021::-;46498:16;:23;46470:17;:24;:51;46466:64;;46523:7;;46466:64;-1:-1:-1;;;;;46563:37:12;;46539:21;46563:37;;;:20;:37;;;;;;46614:17;:24;:40;-1:-1:-1;46614:95:12;;;;;46694:15;-1:-1:-1;;;;;46658:51:12;:17;46676:13;46658:32;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;46658:32:12;:51;46614:95;46610:795;;;46752:16;46769:13;46752:31;;;;;;;;;;;;;;;;46729:19;;:54;46725:209;;46826:16;46843:13;46826:31;;;;;;;;;;;;;;;;;;46803:19;:54;;;;;;;;46725:209;;;46918:1;46896:19;:23;46725:209;46971:17;:24;;-1:-1:-1;;46971:28:12;;;46947:21;;46971:28;;47032:32;;;;;;;;;;;;;;;;47078:17;:32;;-1:-1:-1;;;;;47032:32:12;;;;-1:-1:-1;47032:32:12;;47096:13;;47078:32;;;;;;;;;;;;;;:43;;;;;-1:-1:-1;;;;;47078:43:12;;;;;-1:-1:-1;;;;;47078:43:12;;;;;;47169:16;47186:13;47169:31;;;;;;;;;;;;;;;;47135:16;47152:13;47135:31;;;;;;;;;;;;;;;;;;;:65;;;;-1:-1:-1;;;;;47214:30:12;;;;;:20;:30;;;;;;;:46;;;47274:37;;;;;;;;:41;47329:17;:26;;;;;-1:-1:-1;;47329:26:12;;;:::i;:::-;-1:-1:-1;47369:16:12;:25;;;;;-1:-1:-1;;47369:25:12;;;:::i;47747:557::-;-1:-1:-1;;;;;47847:37:12;;47823:21;47847:37;;;:20;:37;;;;;;47898:17;:24;:40;-1:-1:-1;47898:95:12;;;;;47978:15;-1:-1:-1;;;;;47942:51:12;:17;47960:13;47942:32;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;47942:32:12;:51;47898:95;47894:404;;;48028:17;48046:24;;48009:16;;48028:17;-1:-1:-1;;48046:28:12;;;48028:47;;;;;;;;;;;;;;;;48089:17;:32;;-1:-1:-1;;;;;48028:47:12;;;;-1:-1:-1;48028:47:12;;48107:13;;48089:32;;;;;;;;;;;;;;;;;;:43;;-1:-1:-1;;;;;;48089:43:12;-1:-1:-1;;;;;48089:43:12;;;;;;48146:30;;;;;:20;:30;;;;;;:46;;;48206:37;;;;;;;;:41;48261:17;:26;;;;;-1:-1:-1;;48261:26:12;;;:::i;66078:336::-;-1:-1:-1;;;;;66204:37:12;;66153:16;66204:37;;;:20;:37;;;;;;66255:17;:24;:32;-1:-1:-1;66255:79:12;;;;;66319:15;-1:-1:-1;;;;;66291:43:12;:17;66309:5;66291:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;66291:24:12;:43;66255:79;66251:130;;;66358:4;;-1:-1:-1;66350:20:12;;66251:130;-1:-1:-1;66398:5:12;;-1:-1:-1;66398:5:12;66078:336;;;;:::o;65055:98::-;8814:4;65055:98;:::o;52983:513::-;-1:-1:-1;;;;;53117:44:12;;;53086:28;53117:44;;;:23;:44;;;;;;;;53187:26;:47;;;;;:59;;;;;;;;;;;;53273:17;;53304:15;;;;;:50;;;53344:10;-1:-1:-1;;;;;53323:31:12;:10;53334:5;53323:17;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;53323:17:12;:31;;53304:50;53300:190;;;-1:-1:-1;;;;;53370:47:12;;;;;;;:26;:47;;;;;;;;:59;;;;;;;;;;;:68;;;27:10:-1;;39:1;23:18;;45:23;;53452:27:12;;;;;;;;-1:-1:-1;;;;;;53452:27:12;;;;;;52983:513;;;;;:::o;55036:711::-;-1:-1:-1;;;;;55173:44:12;;;55142:28;55173:44;;;:23;:44;;;;;;;;55251:26;:47;;;;;:59;;;;;;;;;;;;55324:17;;:33;-1:-1:-1;55324:76:12;;;;;55390:10;-1:-1:-1;;;;;55361:39:12;:10;55372:13;55361:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;55361:25:12;:39;55324:76;55320:421;;;55451:17;;55416:21;;55440:10;;-1:-1:-1;;55451:21:12;;;55440:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;55440:33:12;55416:57;;55515:13;55487:10;55498:13;55487:25;;;;;;;;;;;;;;;;;;;;:41;;-1:-1:-1;;;;;;55487:41:12;-1:-1:-1;;;;;55487:41:12;;;;;;55542:47;;;;;:26;:47;;;;;;:62;;;;;;;;;;;:78;;;55634:59;;;;;;;;:63;55711:19;;;;-1:-1:-1;;55711:19:12;;278:43:6;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity 0.5.10;\n\n//import \"./base/StakingAuRaTokens.sol\";\nimport \"./base/StakingAuRaCoins.sol\";\n\n\n// contract StakingAuRa is StakingAuRaTokens {}\n\n// Uncomment this line and comment out the above one\n// if staking in native coins is needed instead of staking in tokens:\ncontract StakingAuRa is StakingAuRaCoins {}",
  "sourcePath": "/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/StakingAuRa.sol",
  "ast": {
    "absolutePath": "/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/StakingAuRa.sol",
    "exportedSymbols": {
      "StakingAuRa": [
        2292
      ]
    },
    "id": 2293,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2288,
        "literals": [
          "solidity",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/base/StakingAuRaCoins.sol",
        "file": "./base/StakingAuRaCoins.sol",
        "id": 2289,
        "nodeType": "ImportDirective",
        "scope": 2293,
        "sourceUnit": 11648,
        "src": "66:37:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2290,
              "name": "StakingAuRaCoins",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11647,
              "src": "302:16:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingAuRaCoins_$11647",
                "typeString": "contract StakingAuRaCoins"
              }
            },
            "id": 2291,
            "nodeType": "InheritanceSpecifier",
            "src": "302:16:6"
          }
        ],
        "contractDependencies": [
          11059,
          11647,
          12732,
          13311,
          13378
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2292,
        "linearizedBaseContracts": [
          2292,
          11647,
          11059,
          12732,
          13378,
          13311
        ],
        "name": "StakingAuRa",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 2293,
        "src": "278:43:6"
      }
    ],
    "src": "0:321:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/StakingAuRa.sol",
    "exportedSymbols": {
      "StakingAuRa": [
        2292
      ]
    },
    "id": 2293,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2288,
        "literals": [
          "solidity",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/Users/base/go/src/github.com/velas/velas-smarts/posdao-contracts/contracts/base/StakingAuRaCoins.sol",
        "file": "./base/StakingAuRaCoins.sol",
        "id": 2289,
        "nodeType": "ImportDirective",
        "scope": 2293,
        "sourceUnit": 11648,
        "src": "66:37:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2290,
              "name": "StakingAuRaCoins",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11647,
              "src": "302:16:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingAuRaCoins_$11647",
                "typeString": "contract StakingAuRaCoins"
              }
            },
            "id": 2291,
            "nodeType": "InheritanceSpecifier",
            "src": "302:16:6"
          }
        ],
        "contractDependencies": [
          11059,
          11647,
          12732,
          13311,
          13378
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2292,
        "linearizedBaseContracts": [
          2292,
          11647,
          11059,
          12732,
          13378,
          13311
        ],
        "name": "StakingAuRa",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 2293,
        "src": "278:43:6"
      }
    ],
    "src": "0:321:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.17",
  "updatedAt": "2020-07-22T15:14:35.344Z",
  "devdoc": {
    "methods": {
      "addPool(uint256,address)": {
        "details": "Adds a new candidate's pool to the list of active pools (see the `getPools` getter) and moves the specified amount of staking tokens/coins from the candidate's staking address to the candidate's pool. A participant calls this function using their staking address when they want to create a pool. This is a wrapper for the `stake` function.",
        "params": {
          "_amount": "The amount of tokens to be staked. Ignored when staking in native coins because `msg.value` is used in that case.",
          "_miningAddress": "The mining address of the candidate. The mining address is bound to the staking address (msg.sender). This address cannot be equal to `msg.sender`."
        }
      },
      "areStakeAndWithdrawAllowed()": {
        "details": "Determines whether staking/withdrawal operations are allowed at the moment. Used by all staking/withdrawal functions."
      },
      "claimOrderedWithdraw(address)": {
        "details": "Withdraws the staking tokens/coins from the specified pool ordered during the previous staking epochs with the `orderWithdraw` function. The ordered amount can be retrieved by the `orderedWithdrawAmount` getter.",
        "params": {
          "_poolStakingAddress": "The staking address of the pool from which the ordered tokens/coins are withdrawn."
        }
      },
      "claimReward(uint256[],address)": {
        "details": "Withdraws a reward from the specified pool for the specified staking epochs to the staker address (msg.sender).",
        "params": {
          "_poolStakingAddress": "The staking address of the pool from which the reward needs to be withdrawn.",
          "_stakingEpochs": "The list of staking epochs in ascending order. If the list is empty, it is taken with `BlockRewardAuRa.epochsPoolGotRewardFor` getter."
        }
      },
      "clearUnremovableValidator(address)": {
        "details": "Adds the `unremovable validator` to either the `poolsToBeElected` or the `poolsToBeRemoved` array depending on their own stake in their own pool when they become removable. This allows the `ValidatorSetAuRa.newValidatorSet` function to recognize the unremovable validator as a regular removable pool. Called by the `ValidatorSet.clearUnremovableValidator` function.",
        "params": {
          "_unremovableStakingAddress": "The staking address of the unremovable validator."
        }
      },
      "executeParamsChange()": {
        "details": "Schedule stakingEpochDuration change"
      },
      "getPools()": {
        "details": "Returns an array of the current active pools (the staking addresses of candidates and validators). The size of the array cannot exceed MAX_CANDIDATES. A pool can be added to this array with the `_addPoolActive` internal function which is called by the `stake` or `orderWithdraw` function. A pool is considered active if its address has at least the minimum stake and this stake is not ordered to be withdrawn."
      },
      "getPoolsInactive()": {
        "details": "Returns an array of the current inactive pools (the staking addresses of former candidates). A pool can be added to this array with the `_addPoolInactive` internal function which is called by `_removePool`. A pool is considered inactive if it is banned for some reason, if its address has zero stake, or if its entire stake is ordered to be withdrawn."
      },
      "getPoolsLikelihood()": {
        "details": "Returns the array of stake amounts for each corresponding address in the `poolsToBeElected` array (see the `getPoolsToBeElected` getter) and a sum of these amounts. Used by the `ValidatorSetAuRa.newValidatorSet` function when randomly selecting new validators at the last block of a staking epoch. An array value is updated every time any staked amount is changed in this pool (see the `_setLikelihood` internal function).",
        "return": "`uint256[] likelihoods` - The array of the coefficients. The array length is always equal to the length of the `poolsToBeElected` array. `uint256 sum` - The total sum of the amounts."
      },
      "getPoolsToBeElected()": {
        "details": "Returns the list of pools (their staking addresses) which will participate in a new validator set selection process in the `ValidatorSetAuRa.newValidatorSet` function. This is an array of pools which will be considered as candidates when forming a new validator set (at the last block of a staking epoch). This array is kept updated by the `_addPoolToBeElected` and `_deletePoolToBeElected` internal functions."
      },
      "getPoolsToBeRemoved()": {
        "details": "Returns the list of pools (their staking addresses) which will be removed by the `ValidatorSetAuRa.newValidatorSet` function from the active `pools` array (at the last block of a staking epoch). This array is kept updated by the `_addPoolToBeRemoved` and `_deletePoolToBeRemoved` internal functions. A pool is added to this array when the pool's address withdraws (or orders) all of its own staking tokens from the pool, inactivating the pool."
      },
      "getRewardAmount(uint256[],address,address)": {
        "details": "Returns reward amount in native coins for the specified pool, the specified staking epochs, and the specified staker address (delegator or validator).",
        "params": {
          "_poolStakingAddress": "The staking address of the pool for which the amounts need to be returned.",
          "_staker": "The staker address (validator's staking address or delegator's address).",
          "_stakingEpochs": "The list of staking epochs in ascending order. If the list is empty, it is taken with `BlockRewardAuRa.epochsPoolGotRewardFor` getter."
        }
      },
      "getStakerPools(address,uint256,uint256)": {
        "details": "Returns the list of pools (staking addresses) into which the specified staker have ever staked.",
        "params": {
          "_length": "The max number of items to return.",
          "_offset": "The index in the array at which the reading should start. Ignored if the `_length` is 0.",
          "_staker": "The staker address (it can be a delegator or a pool staking address itself)."
        }
      },
      "getStakerPoolsLength(address)": {
        "details": "Returns the length of the list of pools into which the specified staker have ever staked.",
        "params": {
          "_staker": "The staker address (it can be a delegator or a pool staking address itself)."
        }
      },
      "incrementStakingEpoch()": {
        "details": "Increments the serial number of the current staking epoch. Called by the `ValidatorSetAuRa.newValidatorSet` at the last block of the finished staking epoch."
      },
      "initialize(address,address[],uint256,uint256,uint256,uint256,uint256)": {
        "details": "Initializes the network parameters. Can only be called by the constructor of the `InitializerAuRa` contract or owner.",
        "params": {
          "_candidateMinStake": "The minimum allowed amount of candidate/validator stake in Wei.",
          "_delegatorMinStake": "The minimum allowed amount of delegator stake in Wei.",
          "_initialStakingAddresses": "The array of initial validators' staking addresses.",
          "_stakeWithdrawDisallowPeriod": "The duration period (in blocks) at the end of a staking epoch during which participants cannot stake/withdraw/order/claim their staking tokens/coins (e.g., 4320 = 6 hours for 5-seconds blocks in AuRa).",
          "_stakingEpochDuration": "The duration of a staking epoch in blocks (e.g., 120954 = 1 week for 5-seconds blocks in AuRa).",
          "_stakingEpochStartBlock": "The number of the first block of initial staking epoch (must be zero if the network is starting from genesis block).",
          "_validatorSetContract": "The address of the `ValidatorSetAuRa` contract."
        }
      },
      "isInitialized()": {
        "details": "Returns a boolean flag indicating if the `initialize` function has been called."
      },
      "isPoolActive(address)": {
        "details": "Returns a flag indicating whether a specified address is in the `pools` array. See the `getPools` getter.",
        "params": {
          "_stakingAddress": "The staking address of the pool."
        }
      },
      "maxWithdrawAllowed(address,address)": {
        "details": "Returns the maximum amount which can be withdrawn from the specified pool by the specified staker at the moment. Used by the `withdraw` and `moveStake` functions.",
        "params": {
          "_poolStakingAddress": "The pool staking address from which the withdrawal will be made.",
          "_staker": "The staker address that is going to withdraw."
        }
      },
      "maxWithdrawOrderAllowed(address,address)": {
        "details": "Returns the maximum amount which can be ordered to be withdrawn from the specified pool by the specified staker at the moment. Used by the `orderWithdraw` function.",
        "params": {
          "_poolStakingAddress": "The pool staking address from which the withdrawal will be ordered.",
          "_staker": "The staker address that is going to order the withdrawal."
        }
      },
      "moveStake(address,address,uint256)": {
        "details": "Moves staking tokens/coins from one pool to another. A staker calls this function when they want to move their tokens/coins from one pool to another without withdrawing their tokens/coins.",
        "params": {
          "_amount": "The amount of staking tokens/coins to be moved. The amount cannot exceed the value returned by the `maxWithdrawAllowed` getter.",
          "_fromPoolStakingAddress": "The staking address of the source pool.",
          "_toPoolStakingAddress": "The staking address of the target pool."
        }
      },
      "onTokenTransfer(address,uint256,bytes)": {
        "details": "Prevents sending tokens directly to the `StakingAuRa` contract address by the `ERC677BridgeTokenRewardable.transferAndCall` function."
      },
      "orderWithdraw(address,int256)": {
        "details": "Orders tokens/coins withdrawal from the staking address of the specified pool to the staker's address. The requested tokens/coins can be claimed after the current staking epoch is complete using the `claimOrderedWithdraw` function.",
        "params": {
          "_amount": "The amount to be withdrawn. A positive value means the staker wants to either set or increase their withdrawal amount. A negative value means the staker wants to decrease a withdrawal amount that was previously set. The amount cannot exceed the value returned by the `maxWithdrawOrderAllowed` getter.",
          "_poolStakingAddress": "The staking address of the pool from which the amount will be withdrawn."
        }
      },
      "poolDelegators(address)": {
        "details": "Returns an array of the current active delegators of the specified pool. A delegator is considered active if they have staked into the specified pool and their stake is not ordered to be withdrawn.",
        "params": {
          "_poolStakingAddress": "The pool staking address."
        }
      },
      "poolDelegatorsInactive(address)": {
        "details": "Returns an array of the current inactive delegators of the specified pool. A delegator is considered inactive if their entire stake is ordered to be withdrawn but not yet claimed.",
        "params": {
          "_poolStakingAddress": "The pool staking address."
        }
      },
      "removeMyPool()": {
        "details": "Removes the candidate's or validator's pool from the `pools` array (a list of active pools which can be retrieved by the `getPools` getter). When a candidate or validator wants to remove their pool, they should call this function from their staking address. A validator cannot remove their pool while they are an `unremovable validator`."
      },
      "removePool(address)": {
        "details": "Removes a specified pool from the `pools` array (a list of active pools which can be retrieved by the `getPools` getter). Called by the `ValidatorSetAuRa._removeMaliciousValidator` internal function when a pool must be removed by the algorithm.",
        "params": {
          "_stakingAddress": "The staking address of the pool to be removed."
        }
      },
      "removePools()": {
        "details": "Removes pools which are in the `_poolsToBeRemoved` internal array from the `pools` array. Called by the `ValidatorSetAuRa.newValidatorSet` function when a pool must be removed by the algorithm."
      },
      "scheduleParamsChange(uint256,uint256,uint256)": {
        "details": "Schedule stakingEpochDuration change"
      },
      "setCandidateMinStake(uint256)": {
        "details": "Sets (updates) the limit of the minimum candidate stake (CANDIDATE_MIN_STAKE). Can only be called by the `owner`.",
        "params": {
          "_minStake": "The value of a new limit in Wei."
        }
      },
      "setDelegatorMinStake(uint256)": {
        "details": "Sets (updates) the limit of the minimum delegator stake (DELEGATOR_MIN_STAKE). Can only be called by the `owner`.",
        "params": {
          "_minStake": "The value of a new limit in Wei."
        }
      },
      "setStakingEpochStartBlock(uint256)": {
        "details": "Sets the number of the first block in the upcoming staking epoch. Called by the `ValidatorSetAuRa.newValidatorSet` function at the last block of a staking epoch.",
        "params": {
          "_blockNumber": "The number of the very first block in the upcoming staking epoch."
        }
      },
      "stake(address,uint256)": {
        "details": "Moves the specified amount of staking tokens/coins from the staker's address to the staking address of the specified pool. Actually, the amount is stored in a balance of this StakingAuRa contract. A staker calls this function when they want to make a stake into a pool.",
        "params": {
          "_amount": "The amount of tokens to be staked. Ignored when staking in native coins because `msg.value` is used instead.",
          "_toPoolStakingAddress": "The staking address of the pool where the tokens should be staked."
        }
      },
      "stakeAmountByCurrentEpoch(address,address)": {
        "details": "Returns the amount of staking tokens/coins staked into the specified pool by the specified staker during the current staking epoch (see the `stakingEpoch` getter). Used by the `stake`, `withdraw`, and `orderWithdraw` functions.",
        "params": {
          "_poolStakingAddress": "The pool staking address.",
          "_staker": "The staker's address."
        }
      },
      "stakingEpochEndBlock()": {
        "details": "Returns the number of the last block of the current staking epoch."
      },
      "withdraw(address,uint256)": {
        "details": "Moves the specified amount of staking tokens/coins from the staking address of the specified pool to the staker's address. A staker calls this function when they want to withdraw their tokens/coins.",
        "params": {
          "_amount": "The amount of tokens/coins to be withdrawn. The amount cannot exceed the value returned by the `maxWithdrawAllowed` getter.",
          "_fromPoolStakingAddress": "The staking address of the pool from which the tokens/coins should be withdrawn."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}
