// Generated by LiveScript 1.6.0
(function(){
  var generateAddress, ref$, post, get, rawtransaction, transaction, outputs, search, calcFee, getKeys, pushTx, getBalance, getUnconfirmedBalance, getTransactions, createTransaction, out$ = typeof exports != 'undefined' && exports || this;
  generateAddress = require('../library/monero.js').generateAddress;
  ref$ = require('superagent'), post = ref$.post, get = ref$.get;
  rawtransaction = function(arg$, cb){
    var network, txhash;
    network = arg$.network, txhash = arg$.txhash;
    return get(network.api.apiUrl + "/api/rawtransaction/" + txhash).end(cb);
  };
  transaction = function(arg$, cb){
    var network, txhash;
    network = arg$.network, txhash = arg$.txhash;
    return get(network.api.apiUrl + "/api/transaction/" + txhash).end(cb);
  };
  outputs = function(arg$, cb){
    var network, txhash, address, viewkey;
    network = arg$.network, txhash = arg$.txhash, address = arg$.address, viewkey = arg$.viewkey;
    return get(network.api.apiUrl + "/outputs?txhash=" + txhash + "&address=" + address + "&viewkey=" + viewkey + "&txprove=0").end(cb);
  };
  search = function(arg$, cb){
    var network, txhash;
    network = arg$.network, txhash = arg$.txhash;
    return get(network.api.apiUrl + "/search/" + txhash).end(cb);
  };
  out$.calcFee = calcFee = function(arg$, cb){
    var network, tx;
    network = arg$.network, tx = arg$.tx;
    return cb(null);
  };
  out$.getKeys = getKeys = function(arg$, cb){
    var network, mnemonic, index, ref$, address, spendKey, viewKey;
    network = arg$.network, mnemonic = arg$.mnemonic, index = arg$.index;
    ref$ = generateAddress(mnemonic + " / " + index), address = ref$.address, spendKey = ref$.spendKey, viewKey = ref$.viewKey;
    return {
      address: address,
      privateKey: spendKey,
      viewKey: viewKey
    };
  };
  out$.pushTx = pushTx = curry$(function(arg$, cb){
    var rawtx;
    rawtx = arg$.rawtx;
    return cb("Not Implemented");
  });
  out$.getBalance = getBalance = function(arg$, cb){
    var address, network;
    address = arg$.address, network = arg$.network;
    return cb("Not Implemented");
  };
  out$.getUnconfirmedBalance = getUnconfirmedBalance = function(arg$, cb){
    var network, address;
    network = arg$.network, address = arg$.address;
    return cb("Not Implemented");
  };
  out$.getTransactions = getTransactions = function(arg$, cb){
    var address, network;
    address = arg$.address, network = arg$.network;
    return cb("Not Implemented");
  };
  out$.createTransaction = createTransaction = curry$(function(arg$, cb){
    var account, recipient, amount, amountFee, data, txType;
    account = arg$.account, recipient = arg$.recipient, amount = arg$.amount, amountFee = arg$.amountFee, data = arg$.data, txType = arg$.txType;
    return cb("Not Implemented");
  });
  function curry$(f, bound){
    var context,
    _curry = function(args) {
      return f.length > 1 ? function(){
        var params = args ? args.concat() : [];
        context = bound ? context || this : this;
        return params.push.apply(params, arguments) <
            f.length && arguments.length ?
          _curry.call(context, params) : f.apply(context, params);
      } : f;
    };
    return _curry();
  }
}).call(this);
