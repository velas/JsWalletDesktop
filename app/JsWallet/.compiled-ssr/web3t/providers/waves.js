// Generated by LiveScript 1.6.0
(function(){
  var get, div, jsonParse, deadline, calcFee, getKeys, createTransaction, pushTx, getUnconfirmedBalance, getBalance, checkTxStatus, getTotalReceived, getTransactions, out$ = typeof exports != 'undefined' && exports || this;
  get = require('./superagent.js').get;
  div = require('../math.js').div;
  jsonParse = require('../json-parse.js');
  deadline = require('../deadline.js');
  out$.calcFee = calcFee = function(arg$, cb){
    var network, tx;
    network = arg$.network, tx = arg$.tx;
    return cb(null);
  };
  out$.getKeys = getKeys = function(arg$, cb){
    var network, mnemonic, index;
    network = arg$.network, mnemonic = arg$.mnemonic, index = arg$.index;
    return cb("Not implemented");
  };
  out$.createTransaction = createTransaction = curry$(function(arg$, cb){
    var account, recipient, amount, amountFee;
    account = arg$.account, recipient = arg$.recipient, amount = arg$.amount, amountFee = arg$.amountFee;
    return cb("Not implemented");
  });
  out$.pushTx = pushTx = curry$(function(arg$, cb){
    var network, rawtx;
    network = arg$.network, rawtx = arg$.rawtx;
    return cb("Not implemented");
  });
  out$.getUnconfirmedBalance = getUnconfirmedBalance = function(arg$, cb){
    var network, address;
    network = arg$.network, address = arg$.address;
    return cb("Not Implemented");
  };
  out$.getBalance = getBalance = function(arg$, cb){
    var address;
    address = arg$.address;
    return get("https://nodes.wavesnodes.com/addresses/balance/" + address).timeout({
      deadline: deadline
    }).end(function(err, res){
      if (err != null) {
        return cb(err);
      }
      return jsonParse(res.text, function(err, result){
        var balance;
        if (err != null) {
          return cb(err);
        }
        if ((result != null ? result.balance : void 8) == null) {
          return cb("Balance is not available");
        }
        balance = div(result.balance, 100000000);
        return cb(null, balance);
      });
    });
  };
  out$.checkTxStatus = checkTxStatus = function(arg$, cb){
    var network, tx;
    network = arg$.network, tx = arg$.tx;
    return cb("Not Implemented");
  };
  out$.getTotalReceived = getTotalReceived = function(arg$, cb){
    var address, network;
    address = arg$.address, network = arg$.network;
    return cb("Not Implemented");
  };
  out$.getTransactions = getTransactions = function(arg$, cb){
    var network, address;
    network = arg$.network, address = arg$.address;
    return cb(null, []);
  };
  function curry$(f, bound){
    var context,
    _curry = function(args) {
      return f.length > 1 ? function(){
        var params = args ? args.concat() : [];
        context = bound ? context || this : this;
        return params.push.apply(params, arguments) <
            f.length && arguments.length ?
          _curry.call(context, params) : f.apply(context, params);
      } : f;
    };
    return _curry();
  }
}).call(this);
