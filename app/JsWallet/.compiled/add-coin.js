// Generated by LiveScript 1.6.0
(function(){
  var react, ref$, map, filter, groupBy, keys, objToPairs, sortWith, loading2, web3, getPrimaryInfo, getLang, icon, icons, get, button, CustomToken, loader, createItem, filterItem, addByAddress, addByVlxaddress;
  react = require('react');
  ref$ = require('prelude-ls'), map = ref$.map, filter = ref$.filter, groupBy = ref$.groupBy, keys = ref$.keys, objToPairs = ref$.objToPairs, sortWith = ref$.sortWith;
  loading2 = require('./loading2.ls');
  web3 = require('../web3.ls');
  getPrimaryInfo = require('../get-primary-info.ls');
  getLang = require('../get-lang.ls');
  icon = require('./icon.ls');
  icons = require('../icons.ls');
  get = require('../../web3t/providers/superagent.js').get;
  button = require('../components/button.ls');
  CustomToken = require('./custom-token.ls');
  loader = require('../components/popups/loader.ls');
  createItem = curry$(function(arg$, item){
    var store, web3t, add, title, style, buttonStyle, background, menuStyle, children;
    store = arg$.store, web3t = arg$.web3t;
    add = function(){
      store.current.addCoin = false;
      return web3t.installQuick(item, function(err){
        if (err != null) {
          return console.error("[add] err", err);
        }
      });
    };
    title = item.name + "";
    style = getPrimaryInfo(store);
    buttonStyle = {
      border: "1px solid " + style.app.text,
      color: style.app.text
    };
    background = {
      background: style.app.input
    };
    menuStyle = {
      color: style.app.text
    };
    return react.createElement('div', {
      className: 'outer-item'
    }, children = react.createElement('div', {
      style: background,
      'void': void 8,
      id: "add-token-" + item.token,
      className: 'item'
    }, children = [
      react.createElement('img', {
        src: item.image + ""
      }), react.createElement('span', {
        style: menuStyle,
        className: 'title'
      }, ' ' + title), react.createElement('button', {
        onClick: add,
        style: buttonStyle
      }, children = icon('Plus', 20))
    ]));
  });
  filterItem = function(store){
    return function(item){
      var ref$;
      if (((ref$ = store.current.filterPlugins) != null ? ref$ : "").length === 0) {
        return true;
      }
      return ((ref$ = item.token) != null ? ref$ : "").indexOf(store.current.filterPlugins) > -1;
    };
  };
  addByAddress = function(store, web3t){
    var coinContract, notFound, add, style, buttonStyle, inputStyle, ercBg, background, children;
    coinContract = function(e){
      return store.contractAddress = e.target.value;
    };
    notFound = function(){
      store.contractAddress = "Not Found";
      return setTimeout(function(){
        return store.contractAddress = "";
      }, 1000);
    };
    add = function(){
      return get("https://registry.web3.space/token/" + store.contractAddress).end(function(err, data){
        var ref$;
        if (err != null || ((ref$ = data.body) != null ? ref$.token : void 8) == null) {
          return notFound();
        }
        return web3t.installQuick(data.body, function(){
          return store.current.addCoin = false;
        });
      });
    };
    style = getPrimaryInfo(store);
    buttonStyle = {
      border: "1px solid " + style.app.text,
      color: style.app.text
    };
    inputStyle = {
      color: style.app.text,
      background: style.app.bgPrimaryLight,
      border: "0"
    };
    ercBg = {
      background: style.app.bgPrimaryLight
    };
    background = {
      background: style.app.input
    };
    return react.createElement('div', {
      style: background,
      className: 'item'
    }, children = [
      react.createElement('img', {
        src: icons.erc20Token + "",
        style: ercBg
      }), react.createElement('input', {
        placeholder: "0x....",
        value: store.contractAddress + "",
        onChange: coinContract,
        style: inputStyle,
        className: 'search'
      }), react.createElement('button', {
        onClick: add,
        style: buttonStyle
      }, children = icon('Plus', 20))
    ]);
  };
  addByVlxaddress = function(store, web3t){
    var coinContract, notFound, add, style, buttonStyle, inputStyle, ercBg, background, children;
    coinContract = function(e){
      return store.contractVlxaddress = e.target.value;
    };
    notFound = function(){
      store.contractVlxaddress = "Not Found";
      return setTimeout(function(){
        return store.contractVlxaddress = "";
      }, 1000);
    };
    add = function(){
      return get("https://registry.web3.space/token/" + store.contractVlxaddress).end(function(err, data){
        var ref$;
        if (err != null || ((ref$ = data.body) != null ? ref$.token : void 8) == null) {
          return notFound();
        }
        return web3t.installQuick(data.body, function(){
          return store.current.addVlxcoin = false;
        });
      });
    };
    style = getPrimaryInfo(store);
    buttonStyle = {
      border: "1px solid " + style.app.text,
      color: style.app.text
    };
    inputStyle = {
      color: style.app.text,
      background: style.app.bgPrimaryLight,
      border: "0"
    };
    ercBg = {
      background: style.app.bgPrimaryLight
    };
    background = {
      background: style.app.input
    };
    return react.createElement('div', {
      style: background,
      className: 'item'
    }, children = [
      react.createElement('img', {
        src: icons.vlxIcon + "",
        style: ercBg
      }), react.createElement('input', {
        placeholder: "V....",
        value: store.contractVlxaddress + "",
        onChange: coinContract,
        style: inputStyle,
        className: 'search'
      }), react.createElement('button', {
        onClick: add,
        style: buttonStyle
      }, children = icon('Plus', 20))
    ]);
  };
  module.exports = function(arg$){
    var store, web3t, currentNetwork, close, filterRegistery, style, accountBodyStyle, accountBodyStyleCustom, color, lang, inputStyle, plugins, groups, velasGroup, createGroup, addCustomToken, buttonStyle, titleStyle, goBackFromCustomToken, children;
    store = arg$.store, web3t = arg$.web3t;
    if (store.current.addCoin !== true) {
      return null;
    }
    currentNetwork = store.current.network;
    close = function(){
      store.current.addCoin = false;
      return store.customToken.add = false;
    };
    filterRegistery = function(event){
      return store.current.filterPlugins = event.target.value;
    };
    style = getPrimaryInfo(store);
    accountBodyStyle = {
      background: style.app.background,
      backgroundColor: style.app.bgspare,
      color: style.app.text,
      transition: "height .5s"
    };
    accountBodyStyleCustom = {
      background: style.app.background,
      backgroundColor: style.app.bgspare,
      color: style.app.text,
      transition: "height .5s",
      height: "550px",
      maxHeight: "550px"
    };
    color = {
      color: style.app.text
    };
    lang = getLang(store);
    inputStyle = {
      color: style.app.text,
      background: style.app.input,
      border: "0",
      width: "calc(100%) - 100"
    };
    plugins = store.registry;
    groups = groupBy(function(it){
      return it[currentNetwork].group;
    })(
    filter(filterItem(store))(
    filter(function(it){
      var ref$, ref1$;
      return ((ref$ = it[currentNetwork]) != null ? ref$.disabled : void 8) === false || ((ref1$ = it[currentNetwork]) != null ? ref1$.disabled : void 8) == null;
    })(
    filter(function(it){
      return it[currentNetwork] != null;
    })(
    plugins))));
    velasGroup = (function(){
      switch (false) {
      case groups.Velas == null:
        return {
          Velas: groups.Velas
        };
      default:
        return null;
      }
    }());
    delete groups.Velas;
    createGroup = curry$(function(arg$, item){
      var store, web3t, groupName, wallets, children;
      store = arg$.store, web3t = arg$.web3t;
      groupName = (function(){
        switch (false) {
        case (item != null ? item[0] : void 8) == null:
          return item[0];
        default:
          return '';
        }
      }());
      wallets = item[1];
      return react.createElement('div', {
        id: "wallet-group-add-" + groupName,
        className: 'wallet-group'
      }, children = [
        react.createElement('div', {
          className: 'group-name'
        }, ' ' + groupName + ' Network'), react.createElement('div', {
          className: 'network-wallets'
        }, children = [
          react.createElement('div', {}, '         '), map(createItem({
            store: store,
            web3t: web3t
          }))(
          wallets)
        ])
      ]);
    });
    addCustomToken = function(){
      store.customToken.add = true;
      store.customToken.network = null;
      store.customToken.contractAddress = "";
      store.customToken.symbol = "";
      store.customToken.decimals = 0;
      store.customToken.errors.contractAddress = "";
      store.customToken.errors.symbol = "";
      store.customToken.errors.decimals = "";
      return store.customToken.errors.network = "";
    };
    buttonStyle = {
      border: "1px solid " + style.app.text,
      color: style.app.text
    };
    titleStyle = {
      fontWeight: "bold",
      opacity: ".9"
    };
    goBackFromCustomToken = function(){
      return store.customToken.add = false;
    };
    return react.createElement('div', {
      className: 'manage-account manage-account-635636907'
    }, children = !store.customToken.add
      ? react.createElement('div', {
        style: accountBodyStyle,
        className: 'account-body'
      }, children = [
        react.createElement('div', {
          style: color,
          className: 'title'
        }, children = [
          react.createElement('div', {}, children = [
            react.createElement('div', {
              style: titleStyle
            }, ' ' + lang.yourWallets), react.createElement('div', {
              onClick: close,
              className: 'closed'
            }, children = icon('X', 20))
          ]), react.createElement('div', {
            className: 'search-content'
          }, children = [
            react.createElement('div', {
              className: 'jhjj'
            }, '    '), react.createElement('input', {
              placeholder: lang.search + "",
              onChange: filterRegistery,
              style: inputStyle,
              className: 'search'
            }), react.createElement('div', {
              className: 'icon'
            }, children = icon('Search', 15))
          ]), react.createElement('div', {
            className: 'add-custom-token'
          }, children = button({
            store: store,
            onClick: typeof onClick != 'undefined' && onClick !== null ? onClick : addCustomToken,
            text: "Add custom token",
            icon: 'plus',
            type: 'secondary',
            id: "add-custom-token",
            makeDisabled: typeof makeDisabled != 'undefined' && makeDisabled !== null ? makeDisabled : false
          }))
        ]), react.createElement('div', {
          className: 'settings'
        }, children = store.registry.length > 0 ? react.createElement('div', {
          className: 'section'
        }, children = react.createElement('div', {
          className: 'list'
        }, children = [
          velasGroup != null ? map(createGroup({
            store: store,
            web3t: web3t
          }))(
          objToPairs(
          velasGroup)) : void 8, map(createGroup({
            store: store,
            web3t: web3t
          }))(
          objToPairs(
          groups))
        ])) : void 8)
      ])
      : react.createElement('div', {
        style: accountBodyStyleCustom,
        className: 'account-body'
      }, children = [
        loader({
          loading: store.customToken.isLoading
        }), react.createElement('div', {
          style: color,
          className: 'title'
        }, children = react.createElement('div', {}, children = [
          react.createElement('div', {
            style: titleStyle
          }, ' Add custom token   '), react.createElement('div', {
            onClick: close,
            className: 'closed'
          }, children = icon('X', 20))
        ])), CustomToken({
          store: store,
          web3t: web3t
        })
      ]));
  };
  function curry$(f, bound){
    var context,
    _curry = function(args) {
      return f.length > 1 ? function(){
        var params = args ? args.concat() : [];
        context = bound ? context || this : this;
        return params.push.apply(params, arguments) <
            f.length && arguments.length ?
          _curry.call(context, params) : f.apply(context, params);
      } : f;
    };
    return _curry();
  }
}).call(this);
