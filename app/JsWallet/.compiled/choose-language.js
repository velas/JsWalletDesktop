// Generated by LiveScript 1.6.0
(function(){
  var react, menuFuncs, naming, getPrimaryInfo, getLang, icon, navigate, get, ref$, each, map, find, icons, language;
  react = require('react');
  menuFuncs = require('../menu-funcs.ls');
  naming = require('./naming.ls');
  getPrimaryInfo = require('../get-primary-info.ls');
  getLang = require('../get-lang.ls');
  icon = require('./icon.ls');
  navigate = require('../navigate.ls');
  get = require('../../web3t/providers/superagent.js').get;
  ref$ = require('prelude-ls'), each = ref$.each, map = ref$.map, find = ref$.find;
  menuFuncs = require('../menu-funcs.ls');
  icons = require('../icons.ls');
  navigate = require('../navigate.ls');
  language = function(store, web3t){
    var style, lang, closeLanguage, inputStyle, color, styleTextarea, logoStyle, buttonPrimary2Style, buttonPrimary3Style, filterIcon, textStyle, countryCodes, order, setLang, changeLang, download, children, ref$;
    style = getPrimaryInfo(store);
    lang = getLang(store);
    closeLanguage = menuFuncs(store, web3t).closeLanguage;
    inputStyle = {
      background: style.app.wallet,
      color: style.app.text
    };
    color = {
      color: style.app.text
    };
    styleTextarea = {
      background: style.app.wallet,
      color: style.app.text
    };
    logoStyle = {
      filter: style.app.filterLogo
    };
    buttonPrimary2Style = {
      border: "1px solid " + style.app.primary2,
      color: style.app.text,
      background: style.app.primary2,
      backgroundColor: style.app.primary2Spare
    };
    buttonPrimary3Style = {
      border: "1px solid " + style.app.border,
      color: style.app.text2,
      background: style.app.primary3,
      backgroundColor: style.app.primary3Spare
    };
    filterIcon = {
      filter: style.app.filterIcon
    };
    textStyle = {
      color: style.app.text
    };
    countryCodes = {
      en: 'English',
      ru: 'Русский',
      ua: 'Українська',
      cn: '中文語言',
      kr: '한국어',
      fr: 'Français',
      es: 'Español',
      ar: 'عربى',
      'in': "हिंदी",
      id: 'Indonesian',
      ph: 'Pilipino',
      yr: 'Yoruba',
      vn: "Tiếng Việt"
    };
    order = [['fr', 'en', 'cn', 'kr'], ['ru', 'ua', 'es', 'ar'], ['in', 'id', 'ph', 'yr'], ['vn']];
    setLang = function(lang){
      store.lang = lang;
      return store.current.chooseLanguage = false;
    };
    changeLang = function(code){
      return function(){
        store.current.languageMenu = false;
        return setLang(code);
      };
    };
    download = function(){
      return navigate(store, web3t, 'downloadwallet');
    };
    return react.createElement('div', {}, children = react.createElement('div', {
      className: 'section'
    }, children = [
      react.createElement('div', {
        className: 'logo'
      }, children = [
        react.createElement('img', {
          src: style.branding.logo + ""
        }), react.createElement('div', {
          style: textStyle,
          className: 'title'
        }, ' ' + style.branding.title), react.createElement('span', {
          className: 'version low'
        }, ' ' + store.version)
      ]), react.createElement('div', {
        style: textStyle,
        className: 'welcome'
      }, ' ' + lang.language), react.createElement('div', {
        className: 'langs'
      }, children = map(function(arr){
        var children;
        return react.createElement('ul', {}, children = map(function(code){
          var langStyle, name, tag, children;
          langStyle = color;
          name = countryCodes[code];
          tag = "langs_" + code;
          return react.createElement('li', {
            key: "lang_" + code,
            onClick: changeLang(code),
            style: color,
            id: "lang-" + code,
            className: 'lang-item'
          }, children = [
            react.createElement('img', {
              src: icons[tag] + ""
            }), react.createElement('div', {}, ' ' + name)
          ]);
        })(
        arr));
      })(
      order)), (typeof process != 'undefined' && process !== null ? (ref$ = process.versions) != null ? ref$.electron : void 8 : void 8) == null ? react.createElement('div', {
        className: 'downloadwalletlist'
      }, children = [
        react.createElement('a', {
          href: "https://apps.apple.com/us/app/velas-mobile-wallet/id1541032748",
          target: "_blank",
          id: "download-ios"
        }, children = react.createElement('img', {
          src: icons['ios'] + "",
          className: 'icon-download'
        })), react.createElement('a', {
          href: "https://play.google.com/store/apps/details?id=com.velas.mobile_wallet",
          target: "_blank",
          id: "download-android"
        }, children = react.createElement('img', {
          src: icons['android'] + "",
          className: 'icon-download'
        })), react.createElement('span', {
          id: "download-desktop"
        }, children = react.createElement('img', {
          onClick: download,
          src: icons['desktop'] + "",
          className: 'icon-download'
        }))
      ]) : void 8
    ]));
  };
  module.exports = function(arg$){
    var store, web3t, closeLanguage, style, accountBodyStyle, bodyStyle, borderStyle, lang, children;
    store = arg$.store, web3t = arg$.web3t;
    if (store.current.chooseLanguage !== true) {
      return null;
    }
    closeLanguage = menuFuncs(store, web3t).closeLanguage;
    style = getPrimaryInfo(store);
    accountBodyStyle = {
      background: style.app.background,
      color: style.app.text,
      backgroundColor: style.app.bgspare
    };
    bodyStyle = {
      background: "transparent",
      color: style.app.text
    };
    borderStyle = {
      background: style.app.header,
      color: style.app.text
    };
    lang = getLang(store);
    return react.createElement('div', {
      style: accountBodyStyle,
      className: 'choose-language choose-language2113094753'
    }, children = react.createElement('div', {
      className: 'account-body'
    }, children = [
      false ? react.createElement('div', {
        style: borderStyle,
        className: 'title'
      }, children = [
        react.createElement('div', {
          className: 'header'
        }, ' ' + lang.chooseLanguage), false ? react.createElement('div', {
          onClick: closeLanguage,
          className: 'close'
        }, children = icon('X', 20)) : void 8
      ]) : void 8, react.createElement('div', {
        className: 'settings'
      }, children = language(store, web3t))
    ]));
  };
}).call(this);
