// Generated by LiveScript 1.6.0
(function(){
  var react, bignumber, clickProvideAddress, queryAddress, send, messageHandlers, onMessage, e;
  react = require('react');
  bignumber = require('bignumber.js');
  clickProvideAddress = function(){
    var wallets, vlx2, message, data, amount, to;
    if (!window.store) {
      return;
    }
    wallets = window.store.current.account.wallets;
    vlx2 = wallets.find(function(it){
      return it.coin.token === 'vlx2';
    });
    message = JSON.stringify({
      type: 'address',
      address: vlx2.address,
      ethAddress: toEthAddress(vlx2.address)
    });
    window.parent.postMessage(message, window.store.interop.origin);
    return;
    data = store.urlHashParams.transaction;
    if (!data.startsWith('0x')) {
      data = '0x' + data;
    }
    amount = store.urlHashParams.amount || '0';
    to = store.urlHashParams.to;
    return web3t.vlx2.sendTransaction({
      to: to,
      data: data,
      amount: amount
    }, function(err, txHash){
      var message;
      message = JSON.stringify({
        type: 'tx',
        err: err,
        txHash: txHash
      });
      return window.parent.postMessage(message, '*');
    });
  };
  queryAddress = function(data, event){
    if (!window.store) {
      return;
    }
    window.store.interop.isAddressQueried = true;
    return window.store.interop.origin = event.origin;
  };
  send = function(data, event){
    var transaction, amount, to;
    if (!window.store) {
      return;
    }
    transaction = data.transaction;
    if (!transaction.startsWith('0x')) {
      data = '0x' + data;
    }
    amount = data.amount || '0';
    to = data.to;
    return web3t.vlx2.sendTransaction({
      to: to,
      data: transaction,
      amount: amount
    }, function(err, txHash){
      var message;
      message = JSON.stringify({
        type: 'tx',
        err: err != null ? err.toString() : void 8,
        txHash: txHash
      });
      return window.parent.postMessage(message, '*');
    });
  };
  messageHandlers = Object.create(null);
  messageHandlers.queryAddress = queryAddress;
  messageHandlers.send = send;
  onMessage = function(event){
    var data;
    console.log(event.data);
    if (typeof event.data !== 'string') {
      return;
    }
    data = JSON.parse(event.data);
    return messageHandlers[data.type](data, event);
  };
  try {
    if (window !== window.parent) {
      window.addEventListener('message', onMessage);
    }
  } catch (e$) {
    e = e$;
    console.log(e);
  }
  module.exports = function(arg$){
    var store, web3t, isInIframe;
    store = arg$.store, web3t = arg$.web3t;
    isInIframe = window !== window.parent;
    if (!store.interop.isAddressQueried || !isInIframe) {
      return null;
    }
    return react.createElement('div', {
      onClick: clickProvideAddress
    }, ' Website ' + store.interop.origin + ' request your address. Click to provide it.');
  };
}).call(this);
