// Generated by LiveScript 1.6.0
(function(){
  var react, getLang, getPrimaryInfo, icons, navigate, get, network, init;
  react = require('react');
  getLang = require('../get-lang.ls');
  getPrimaryInfo = require('../get-primary-info.ls');
  icons = require('../icons.ls');
  navigate = require('../navigate.ls');
  get = require('../../web3t/providers/superagent.js').get;
  network = require('../../web3t/providers/superagent-adapter.js');
  init = function(arg$, cb){
    var store, web3t;
    store = arg$.store, web3t = arg$.web3t;
    return get("https://api.ipify.org?format=json").end(function(err, data){
      if (err != null) {
        return cb(err);
      }
      store.tor.proxy = data.body;
      return network.all.get("https://api.ipify.org?format=json").end(function(err, data){
        if (err != null) {
          return cb(err);
        }
        store.tor.real = data.body;
        return cb(null);
      });
    });
  };
  module.exports = function(store, web3t){
    var style, lang, filterBody, borderBottom, buttonAdd, openTor, active, change, children;
    if (store.urlParams.tor == null) {
      return null;
    }
    style = getPrimaryInfo(store);
    lang = getLang(store);
    filterBody = {
      border: "1px solid " + style.app.border,
      background: style.app.header,
      backgroundPosition: "160px 70px",
      backgroundSize: "50px",
      backgroundRepeat: "no-repeat",
      backgroundImage: "url(" + icons.tor2 + ")"
    };
    borderBottom = {
      borderBottom: "1px solid " + style.app.border
    };
    buttonAdd = {
      color: style.app.text,
      background: style.app.bgBtn
    };
    openTor = function(){
      store.current.tor = !store.current.tor;
      if (store.current.tor !== true) {
        return;
      }
      return init({
        store: store,
        web3t: web3t
      }, function(){});
    };
    active = store.current.tor ? 'active' : "";
    change = function(){
      store.tor.enabled = !store.tor.enabled;
      console.log('store.tor.enabled', store.tor.enabled);
      network.type = (function(){
        switch (false) {
        case !store.tor.enabled:
          return 'tor';
        default:
          return 'all';
        }
      }());
      return init({
        store: store,
        web3t: web3t
      }, function(){});
    };
    return react.createElement('button', {
      className: 'tor tor1758860262'
    }, children = [
      react.createElement('span', {
        onClick: openTor,
        style: buttonAdd,
        className: active + " icon"
      }, children = react.createElement('img', {
        src: icons.tor + "",
        className: 'icon-svg-create'
      })), store.current.tor ? react.createElement('div', {
        style: filterBody,
        className: 'tor-content'
      }, children = [
        react.createElement('label', {
          className: 'active-tor'
        }, children = [
          react.createElement('input', {
            type: 'checkbox',
            defaultChecked: store.tor.enabled,
            onChange: change
          }), react.createElement('div', {
            className: 'track thumb'
          })
        ]), react.createElement('div', {
          style: borderBottom,
          className: 'header-tor'
        }, children = react.createElement('div', {}, ' Private mode')), react.createElement('div', {
          className: 'col'
        }, children = [react.createElement('div', {}, ' ' + store.tor.proxy.ip), react.createElement('span', {}, children = react.createElement('span', {}, ' real IP'))]), react.createElement('div', {
          className: 'col'
        }, children = [react.createElement('div', {}, ' ' + store.tor.real.ip), react.createElement('span', {}, children = react.createElement('span', {}, ' current IP'))])
      ]) : void 8
    ]);
  };
}).call(this);
