// Generated by LiveScript 1.6.0
(function(){
  var react, sendFuncs, ref$, map, find, objToPairs, filter, join, getPrimaryInfo, icon, getLang, switchAccount, icons, roundHuman, walletsFuncs, epoch, button, addressHolder, identicon, send, getTxDetails, formGroup, buildPart, sendContract;
  react = require('react');
  sendFuncs = require('../send-funcs.ls');
  ref$ = require('prelude-ls'), map = ref$.map, find = ref$.find, objToPairs = ref$.objToPairs, filter = ref$.filter, join = ref$.join;
  getPrimaryInfo = require('../get-primary-info.ls');
  icon = require('./icon.ls');
  getLang = require('../get-lang.ls');
  switchAccount = require('./switch-account.ls');
  icons = require('../icons.ls');
  roundHuman = require('../round-human.ls');
  walletsFuncs = require('../wallets-funcs.ls');
  epoch = require('./epoch.ls');
  button = require('../components/button.ls');
  addressHolder = require('../components/address-holder.ls');
  identicon = require('../components/identicon.ls');
  send = require('./send.ls');
  getTxDetails = require('../get-tx-details.ls');
  formGroup = function(title, style, content){
    var children;
    return react.createElement('div', {
      className: 'form-group'
    }, children = [
      react.createElement('label', {
        style: style,
        className: 'control-label'
      }, ' ' + title), content()
    ]);
  };
  buildPart = curry$(function(store, item){
    return react.createElement('li', {
      key: "build-part-" + item
    }, ' ' + item);
  });
  sendContract = function(arg$){
    var store, web3t, ref$, token, name, feeToken, network, send, wallet, round5, pending, history, cancel, sendAnyway, isData, invoice, style, borderStyle, iconStyle, moreText, borderHeader, lang, walletTitle, showClass, textParts, seeDetails, children;
    store = arg$.store, web3t = arg$.web3t;
    ref$ = sendFuncs(store, web3t), token = ref$.token, name = ref$.name, feeToken = ref$.feeToken, network = ref$.network, send = ref$.send, wallet = ref$.wallet, round5 = ref$.round5, pending = ref$.pending, history = ref$.history, cancel = ref$.cancel, sendAnyway = ref$.sendAnyway, round5 = ref$.round5, isData = ref$.isData, invoice = ref$.invoice;
    style = getPrimaryInfo(store);
    borderStyle = {
      border: "1px solid " + style.app.border
    };
    iconStyle = {
      color: style.app.icon
    };
    moreText = {
      color: style.app.text
    };
    borderHeader = {
      color: style.app.text,
      borderBottom: "1px solid " + style.app.border,
      background: style.app.background,
      backgroundColor: style.app.bgspare
    };
    lang = getLang(store);
    walletTitle = (name + network) + " " + ((ref$ = lang.wallet) != null ? ref$ : 'wallet');
    showClass = store.current.openMenu ? 'hide' : "";
    textParts = getTxDetails(store, web3t);
    seeDetails = function(){
      return send.details = true;
    };
    return react.createElement('div', {
      className: 'content content-824167059'
    }, children = [
      react.createElement('div', {
        style: borderHeader,
        className: 'title'
      }, children = [
        react.createElement('div', {
          className: showClass + " header"
        }, ' ' + lang.send), react.createElement('div', {
          onClick: cancel,
          className: 'close'
        }, children = react.createElement('img', {
          src: icons.arrowLeft + "",
          className: 'icon-svg'
        })), epoch(store, web3t), switchAccount(store, web3t)
      ]), react.createElement('div', {
        style: moreText,
        className: 'content-body'
      }, children = [
        react.createElement('img', {
          src: icons.attention + ""
        }), react.createElement('div', {
          className: 'contract-body'
        }, children = [
          react.createElement('ul', {}, children = map(buildPart(store))(
          textParts)), react.createElement('div', {
            className: 'center'
          }, children = [
            react.createElement('div', {
              className: 'control-label not-enough text-left'
            }, ' ' + send.error), react.createElement('a', {
              onClick: seeDetails
            }, ' ' + lang.details)
          ])
        ]), react.createElement('div', {
          className: 'button-container'
        }, children = react.createElement('div', {
          className: 'buttons'
        }, children = [
          button({
            store: store,
            text: 'send',
            onClick: sendAnyway,
            loading: send.sending,
            type: 'primary'
          }), button({
            store: store,
            text: 'cancel',
            onClick: cancel,
            icon: 'close2'
          })
        ]))
      ])
    ]);
  };
  module.exports = sendContract;
  module.exports.init = send.init;
  function curry$(f, bound){
    var context,
    _curry = function(args) {
      return f.length > 1 ? function(){
        var params = args ? args.concat() : [];
        context = bound ? context || this : this;
        return params.push.apply(params, arguments) <
            f.length && arguments.length ?
          _curry.call(context, params) : f.apply(context, params);
      } : f;
    };
    return _curry();
  }
}).call(this);
