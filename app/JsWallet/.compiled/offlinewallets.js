// Generated by LiveScript 1.6.0
(function(){
  var react, button, ref$, map, filter, head, find, get, getPrimaryInfo, icons, navigate, burger, buildVersion, onlyVersion, onlyMd5, header, slice$ = [].slice;
  react = require('react');
  button = require('../components/button.ls');
  ref$ = require('prelude-ls'), map = ref$.map, filter = ref$.filter, head = ref$.head, find = ref$.find;
  get = require('../../web3t/providers/superagent.js').get;
  getPrimaryInfo = require('../get-primary-info.ls');
  icons = require('../icons.ls');
  navigate = require('../navigate.ls');
  burger = require('../components/burger.ls');
  buildVersion = curry$(function(store, release){
    var style, buttonPrimary1Style, buttonPrimary3Style, buttonPrimary2Style, buttonLink, resource, ref$, i$, parts, last, source, name, icon, md5File, children;
    style = getPrimaryInfo(store);
    buttonPrimary1Style = {
      border: "0",
      color: style.app.textInvert,
      background: style.app.primary1,
      backgroundColor: style.app.primary1Spare
    };
    buttonPrimary3Style = {
      border: "0",
      color: style.app.text2,
      background: style.app.primary3,
      backgroundColor: style.app.primary3Spare
    };
    buttonPrimary2Style = {
      border: "1px solid " + style.app.primary2,
      color: style.app.text,
      background: style.app.primary2,
      backgroundColor: style.app.primary2Spare
    };
    buttonLink = {
      border: "0",
      color: style.app.text2,
      background: "transparent"
    };
    resource = {
      color: style.app.text,
      border: "1px solid " + style.app.border,
      background: style.app.header
    };
    ref$ = release.name.split('.'), parts = 0 < (i$ = ref$.length - 1) ? slice$.call(ref$, 0, i$) : (i$ = 0, []), last = ref$[i$];
    source = "https://github.com/velas/JsWalletDesktop";
    name = (function(){
      switch (false) {
      case last !== 'dmg':
        return 'MacOS';
      case last !== 'exe':
        return 'Windows';
      case last !== 'snap':
        return 'Linux';
      }
    }());
    icon = (function(){
      switch (false) {
      case last !== 'dmg':
        return icons.macos + "";
      case last !== 'exe':
        return icons.windows + "";
      case last !== 'snap':
        return icons.linux + "";
      }
    }());
    console.log(release.name + ".md5");
    md5File = find(function(it){
      return it.name === release.name + ".md5";
    })(
    store.releases);
    return react.createElement('div', {
      style: resource,
      className: 'platform'
    }, children = [
      react.createElement('img', {
        src: icon + "",
        className: 'title-icons'
      }), react.createElement('div', {
        className: 'title'
      }, ' ' + name), react.createElement('div', {
        className: 'tag_name'
      }, ' ' + release.tag_name), react.createElement('div', {
        className: 'source'
      }, children = react.createElement('a', {
        href: source + "",
        style: buttonPrimary3Style,
        target: "_blank"
      }, ' Source Code')), react.createElement('div', {
        className: 'download'
      }, children = react.createElement('a', {
        href: release.browser_download_url + "",
        style: buttonPrimary1Style,
        target: "_blank"
      }, ' Download')), react.createElement('div', {
        className: 'source link'
      }, children = react.createElement('a', {
        href: (md5File != null ? md5File.browser_download_url : void 8) + "",
        style: buttonLink,
        target: "_blank"
      }, ' MD5'))
    ]);
  });
  onlyVersion = function(item){
    var ref$, i$, parts, last;
    ref$ = item.name.split('.'), parts = 0 < (i$ = ref$.length - 1) ? slice$.call(ref$, 0, i$) : (i$ = 0, []), last = ref$[i$];
    return last === 'dmg' || last === 'exe' || last === 'snap';
  };
  onlyMd5 = function(item){
    var ref$, i$, parts, last;
    ref$ = item.name.split('.'), parts = 0 < (i$ = ref$.length - 1) ? slice$.call(ref$, 0, i$) : (i$ = 0, []), last = ref$[i$];
    return last === 'md5';
  };
  header = function(store, web3t){
    var info, borderStyle, gotoSearch, showClass, children;
    info = getPrimaryInfo(store);
    borderStyle = {
      color: info.app.text,
      borderBottom: "1px solid " + info.app.border,
      background: info.app.background,
      backgroundColor: info.app.bgspare
    };
    gotoSearch = function(){
      return navigate(store, web3t, 'search');
    };
    showClass = store.current.openMenu ? 'hide' : "";
    return react.createElement('div', {
      style: borderStyle,
      className: 'title'
    }, children = [
      react.createElement('div', {
        className: showClass + " header"
      }, ' Download Wallets'), react.createElement('div', {
        onClick: gotoSearch,
        className: 'close'
      }, children = react.createElement('img', {
        src: icons.arrowLeft + "",
        className: 'icon-svg'
      })), burger(store, web3t)
    ]);
  };
  module.exports = function(arg$){
    var store, web3t, children;
    store = arg$.store, web3t = arg$.web3t;
    return react.createElement('div', {
      className: 'wallets wallets-1770015941'
    }, children = [
      header(store, web3t), react.createElement('div', {
        className: 'platforms'
      }, children = map(buildVersion(store))(
      filter(onlyVersion)(
      store.releases)))
    ]);
  };
  module.exports.init = function(arg$, cb){
    var store, web3t;
    store = arg$.store, web3t = arg$.web3t;
    console.log('init');
    return get('https://api.github.com/repos/velas/JsWalletDesktop/releases').end(function(err, data){
      var latestRelease;
      if (err != null) {
        return cb(err);
      }
      console.log('init', err, data);
      latestRelease = head(
      data.body);
      if (latestRelease == null) {
        return cb("latest release is not found");
      }
      console.log('latest-release.assets_url', latestRelease.assets_url);
      return get(latestRelease.assets_url).end(function(err, data){
        console.log('init', err, data);
        if (err != null) {
          return cb(err);
        }
        store.releases = map(function(it){
          var ref$;
          return ref$ = {}, import$(ref$, it), ref$.tag_name = latestRelease.tag_name, ref$;
        })(
        data.body);
        return cb(null);
      });
    });
  };
  function curry$(f, bound){
    var context,
    _curry = function(args) {
      return f.length > 1 ? function(){
        var params = args ? args.concat() : [];
        context = bound ? context || this : this;
        return params.push.apply(params, arguments) <
            f.length && arguments.length ?
          _curry.call(context, params) : f.apply(context, params);
      } : f;
    };
    return _curry();
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
