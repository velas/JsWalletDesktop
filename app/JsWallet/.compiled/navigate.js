// Generated by LiveScript 1.6.0
(function(){
  var window, pages, seedmem, transaction, scrollTop, initFlow, getPage, initControl, focusControl, performAskPin, toString$ = {}.toString;
  window = require('./browser/window.ls');
  pages = require('./pages.ls');
  seedmem = require('./seed.ls');
  transaction = require('mobx').transaction;
  scrollTop = require('./scroll-top.ls');
  initFlow = function(prev){
    if (prev === 'chooseinit' && store.current.seedGenerated === false) {
      return 'newseedrestore';
    }
    if (prev === 'chooseinit' && store.current.seedGenerated === true) {
      return 'locked';
    }
    if (prev === 'newseedrestore') {
      return 'locked';
    }
    if ((prev === 'locked' || prev === 'newseedrestore') && !seedmem.saved() && store.current.seedGenerated === true) {
      return 'reviewwords';
    }
    if (prev === 'reviewwords') {
      return 'verifyseed';
    }
    if ((prev === 'locked' || prev === 'newseedrestore') && !seedmem.saved() && store.current.seedGenerated === false) {
      return 'restorewords';
    }
    if (prev === 'verifyseed') {
      return 'terms';
    }
    if (prev === 'choosestaker-pool') {
      return 'choosestaker';
    }
    return 'wallets';
  };
  getPage = function(store, page, prev){
    if (page !== ':init') {
      return page;
    }
    return initFlow(prev);
  };
  initControl = function(scope, name, cb){
    var control;
    control = pages[name];
    if (toString$.call(control != null ? control.init : void 8).slice(8, -1) !== 'Function') {
      return cb(null);
    }
    control.init(scope, cb);
  };
  focusControl = function(scope, name, cb){
    var control;
    scrollTop();
    control = pages[name];
    if (toString$.call(control != null ? control.focus : void 8).slice(8, -1) !== 'Function') {
      return cb(null);
    }
    control.focus(scope, cb);
  };
  performAskPin = function(store, page){
    scrollTop();
    store.current.page = 'locked';
    return store.current.pagePin = page;
  };
  module.exports = function(store, web3t, page, askPin, cb){
    var index, prev, name;
    if (askPin === true) {
      return performAskPin(store, page);
    }
    if (store == null) {
      return alert("store is required");
    }
    if (web3t == null) {
      return alert("web3t is required");
    }
    scrollTop();
    if (page != null && page !== 'loading' && page !== ':init') {
      if (store.pages.length > 0) {
        if (store.pages.indexOf(page) > -1) {
          index = store.pages.indexOf(page);
          store.pages.splice(-(store.pages.length - index), 1);
        }
        store.pages.push(page);
      }
    }
    if (page === 'locked') {
      store.pages = ['locked'];
    }
    if (page === 'wallets' || page === ':init') {
      store.pages = ['wallets'];
    }
    prev = store.current.page;
    store.current.page = 'loading';
    store.current.loading = true;
    name = getPage(store, page, prev);
    initControl({
      store: store,
      web3t: web3t
    }, name, function(){
      store.current.page = name;
      store.current.loading = false;
      return focusControl({
        store: store,
        web3t: web3t
      }, name, function(){
        if (cb != null) {
          return cb();
        }
      });
    });
  };
}).call(this);
