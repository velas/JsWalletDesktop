// Generated by LiveScript 1.6.0
(function(){
  var react, menuFuncs, getPrimaryInfo, getLang, addCoin, topup, icon, ref$, map, filter, localStorage, icons, tor, background;
  react = require('react');
  menuFuncs = require('../menu-funcs.ls');
  getPrimaryInfo = require('../get-primary-info.ls');
  getLang = require('../get-lang.ls');
  addCoin = require('../add-coin.ls');
  topup = require('../topup.ls');
  icon = require('./icon.ls');
  ref$ = require('prelude-ls'), map = ref$.map, filter = ref$.filter;
  localStorage = require('localStorage');
  icons = require('../icons.ls');
  tor = require('./tor.ls');
  background = function(){
    var children;
    return react.createElement('svg', {
      height: '128px',
      version: '1.1',
      viewBox: '0 0 128 128',
      width: '128px'
    }, children = react.createElement('g', {}, children = react.createElement('path', {
      d: 'M86.785,109.878   c-8.188,4.317-16.533,5.962-26.515,5.962c-24.428,0-45.133-17.879-45.133-46.479c0-30.687,21.299-57.201,54.376-57.201   c25.918,0,43.348,18.175,43.348,43.052c0,22.342-12.517,35.448-26.514,35.448c-5.968,0-11.475-4.021-11.025-13.105h-0.594   C69.514,86.342,62.66,90.66,53.721,90.66c-8.636,0-16.083-7-16.083-18.764c0-18.473,14.591-35.309,35.296-35.309   c6.403,0,12.067,1.34,15.937,3.13L83.813,66.68c-2.232,11.323-0.45,16.532,4.463,16.685c7.604,0.146,16.095-9.982,16.095-27.261   c0-21.602-12.964-37.09-36.06-37.09c-24.27,0-44.684,19.212-44.684,49.456c0,24.877,16.241,40.215,38.28,40.215   c8.491,0,16.387-1.783,22.499-5.21L86.785,109.878z M78.598,45.527c-1.493-0.449-4.027-1.043-7.446-1.043   c-13.112,0-23.689,12.366-23.689,26.812c0,6.556,3.275,11.322,9.836,11.322c8.637,0,16.532-11.025,18.169-20.256L78.598,45.527z'
    })));
  };
  module.exports = function(store, web3t){
    var ref$, current, accountName, refresh, lock, createAccount, style, buttonStyle, buttonPrimary1Style, buttonPrimary4Style, buttonPrimary2Style, buttonPrimary0Style, buttonPrimary3Style, filterBody, borderTop, iconStyle, lang, accountIndex, length, excludeCurrent, syncing, showClass, show, disabledClass, createAccountPosition, children;
    ref$ = menuFuncs(store, web3t), current = ref$.current, accountName = ref$.accountName, refresh = ref$.refresh, lock = ref$.lock;
    createAccount = function(){
      var newLength;
      if (store.current.refreshing === true) {
        return;
      }
      store.forceReload = true;
      store.forceReloadTxs = true;
      newLength = 1 + length;
      store.current.accountIndex = newLength;
      localStorage.setItem('Accounts', newLength);
      store.current.switchAccount = false;
      return web3t.refresh(function(){});
    };
    style = getPrimaryInfo(store);
    buttonStyle = {
      border: "0",
      color: style.app.text,
      background: style.app.input
    };
    buttonPrimary1Style = {
      border: "0",
      color: style.app.text,
      background: style.app.primary1,
      backgroundColor: style.app.primary1Spare
    };
    buttonPrimary4Style = {
      color: style.app.text,
      borderRadius: "50px",
      border: "0",
      background: style.app.bgBtn,
      lineHeight: "25px",
      padding: "10px",
      width: "40px",
      height: "40px",
      margin: "20px 5px 0"
    };
    buttonPrimary2Style = {
      border: "0",
      color: style.app.text,
      background: style.app.primary2,
      backgroundColor: style.app.primary2Spare
    };
    buttonPrimary0Style = {
      border: "0",
      color: style.app.text,
      background: "transparent"
    };
    buttonPrimary3Style = {
      border: "0px",
      color: style.app.text2,
      background: style.app.primary3,
      backgroundColor: style.app.primary3Spare
    };
    filterBody = {
      border: "1px solid " + style.app.border,
      background: style.app.accountBg
    };
    borderTop = {
      borderTop: "1px solid " + style.app.border
    };
    buttonPrimary1Style = {
      border: "0",
      color: style.app.text,
      background: style.app.primary1,
      backgroundColor: style.app.primary1Spare
    };
    iconStyle = {
      color: style.app.loader,
      borderRadius: "50px",
      border: "0",
      background: style.app.bgBtn,
      padding: "0px",
      width: "40px",
      height: "40px",
      margin: "20px 5px 0"
    };
    lang = getLang(store);
    accountIndex = ((ref$ = lang.accountIndex) != null ? ref$ : 'Account index') + ": " + current.accountIndex;
    length = +((ref$ = localStorage.getItem('Accounts')) != null ? ref$ : 3);
    excludeCurrent = function(it){
      return it !== store.current.accountIndex;
    };
    syncing = (function(){
      switch (false) {
      case !store.current.refreshing:
        return 'syncing';
      default:
        return "";
      }
    }());
    showClass = store.menu.show ? 'show' : "";
    show = function(){
      var ref$;
      if ((ref$ = store.current.page) === 'account_details' || ref$ === 'staking2') {
        return;
      }
      return store.menu.show = !store.menu.show;
    };
    disabledClass = store.current.refreshing === true || store.staking.accountsAreLoading === true ? "disabled" : "";
    createAccountPosition = function(index){
      var changeAccount, defaultAccountName, currentAccountName, accountName, positionStyle, children;
      changeAccount = function(){
        var ref$;
        if ((ref$ = store.current.page) === 'account_details' || ref$ === 'staking2') {
          return;
        }
        if (store.current.refreshing === true || store.staking.accountsAreLoading === true) {
          return;
        }
        if (store.current.accountIndex === index) {
          store.current.switchAccount = false;
          return;
        }
        store.forceReload = true;
        store.forceReloadTxs = true;
        store.current.accountIndex = index;
        store.current.switchAccount = false;
        store.staking.fetchAccounts = true;
        store.staking.getAccountsFromCashe = false;
        store.transactions.all = [];
        store.transactions.applied = [];
        return web3t.refresh(function(){});
      };
      defaultAccountName = function(){
        return "Account " + index;
      };
      currentAccountName = function(){
        var ref$;
        return (ref$ = localStorage.getItem(defaultAccountName())) != null
          ? ref$
          : defaultAccountName();
      };
      accountName = currentAccountName();
      positionStyle = {
        color: store.current.accountIndex === index ? '#3cd5af' : ''
      };
      return react.createElement('div', {
        onClick: changeAccount,
        key: "account" + index,
        style: positionStyle,
        className: disabledClass + " table-row-menu"
      }, children = react.createElement('div', {
        className: 'col folder-menu'
      }, children = react.createElement('div', {}, ' ' + accountName)));
    };
    return react.createElement('div', {
      className: 'your-account your-account15090199'
    }, children = [
      store.preference.usernameVisible === true ? react.createElement('div', {
        className: 'username'
      }, children = [
        react.createElement('div', {
          className: 'nick'
        }, ' ' + current.account.accountName), react.createElement('div', {
          className: 'index'
        }, ' ' + accountIndex)
      ]) : void 8, react.createElement('div', {
        className: 'buttons'
      }, children = [
        false ? react.createElement('div', {
          onClick: topup(store),
          style: buttonPrimary1Style,
          className: 'button edit'
        }, ' ' + lang.topup) : void 8, store.current.device === 'mobile' ? store.preference.refreshVisible === true ? react.createElement('button', {
          onClick: refresh,
          style: iconStyle,
          className: syncing + " button lock mt-5"
        }, children = icon('Sync', 20)) : void 8 : void 8, store.current.device === 'mobile' ? react.createElement('button', {
          onClick: addCoin(store),
          style: buttonPrimary4Style,
          className: 'button lock mt-5'
        }, children = react.createElement('img', {
          src: icons.create + "",
          className: 'icon-svg-plus'
        })) : void 8, store.current.device === 'mobile' ? tor(store, web3t) : void 8, store.current.device === 'mobile' ? react.createElement('button', {
          onClick: show,
          style: buttonPrimary4Style,
          id: "menu-hamb-mobile",
          className: showClass + " button lock mt-5"
        }, children = react.createElement('img', {
          src: icons.menu + "",
          className: 'icon-svg-plus'
        })) : void 8, false ? store.current.device === 'mobile' ? react.createElement('button', {
          onClick: openMigration,
          style: buttonPrimary1Style,
          className: 'button lock mt-5'
        }, ' Migration') : void 8 : void 8, false ? store.current.device === 'desktop' ? react.createElement('button', {
          onClick: openMigration,
          style: buttonPrimary0Style,
          className: 'button lock'
        }, children = icon("Zap", 20)) : void 8 : void 8
      ]), store.current.switchAccount ? react.createElement('div', {
        style: filterBody,
        className: 'switch-menu'
      }, children = [
        react.createElement('div', {
          className: 'middle account'
        }, children = map(createAccountPosition)(
        (function(){
          var i$, to$, results$ = [];
          for (i$ = 0, to$ = length; i$ <= to$; ++i$) {
            results$.push(i$);
          }
          return results$;
        }()))), react.createElement('div', {
          style: borderTop,
          className: 'middle'
        }, children = react.createElement('div', {
          className: 'table-row-menu'
        }, children = react.createElement('div', {
          onClick: createAccount,
          className: 'col buttons folder-menu'
        }, children = react.createElement('button', {
          style: buttonPrimary2Style,
          className: disabledClass + ""
        }, children = react.createElement('span', {}, children = [
          react.createElement('img', {
            src: icons.createAcc + "",
            className: 'icon-svg'
          }), " " + lang.createAccount
        ])))))
      ]) : void 8
    ]);
  };
}).call(this);
