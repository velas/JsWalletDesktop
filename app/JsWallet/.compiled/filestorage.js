// Generated by LiveScript 1.6.0
(function(){
  var react, reactDom, navigate, getPrimaryInfo, web3, getLang, historyFuncs, icon, switchAccount, icons, epoch, alertDemo, burger, filestorage;
  react = require('react');
  reactDom = require('react-dom');
  navigate = require('../navigate.ls');
  getPrimaryInfo = require('../get-primary-info.ls');
  web3 = require('../web3.ls');
  getLang = require('../get-lang.ls');
  historyFuncs = require('../history-funcs.ls');
  icon = require('./icon.ls');
  switchAccount = require('./switch-account.ls');
  icons = require('../icons.ls');
  epoch = require('./epoch.ls');
  alertDemo = require('./alert-demo.ls');
  burger = require('../components/burger.ls');
  filestorage = function(arg$){
    var store, web3t, lang, goBack, gotoSearch, info, switchProgress, hideProgress, switchFiles, fileTree, action, active, dragarea, style, borderStyle, borderRight, buttonPrimary2Style, headerTableStyle, dashedBorder, filterBody, borderB, buttonPrimary1Style, lightText, iconStyle, dragareaBg, expandCollapse, openTree, activeFolder, showClass, children;
    store = arg$.store, web3t = arg$.web3t;
    lang = getLang(store);
    goBack = historyFuncs(store, web3t).goBack;
    gotoSearch = function(){
      return navigate(store, web3t, 'search');
    };
    info = getPrimaryInfo(store);
    switchProgress = function(){
      return store.current.progress = !store.current.progress;
    };
    hideProgress = store.current.progress ? 'hide-progress' : "";
    switchFiles = function(){
      return store.current.files = !store.current.files;
    };
    fileTree = store.current.files ? 'file-tree' : "";
    action = function(){
      return store.current.active = !store.current.active;
    };
    active = store.current.active ? 'active' : "";
    dragarea = store.current.dragfile ? 'dragarea' : "";
    style = {
      background: info.app.wallet,
      color: info.app.text
    };
    borderStyle = {
      color: info.app.text,
      borderBottom: "1px solid " + info.app.border,
      background: info.app.background,
      backgroundColor: info.app.bgspare
    };
    borderRight = {
      color: info.app.text,
      borderRight: "1px solid " + info.app.border
    };
    buttonPrimary2Style = {
      border: "1px solid " + info.app.primary2,
      color: info.app.text,
      background: info.app.primary2,
      backgroundColor: info.app.primary2Spare
    };
    headerTableStyle = {
      borderBottom: "1px solid " + info.app.border,
      background: info.app.walletLight,
      position: "sticky"
    };
    dashedBorder = {
      borderColor: info.app.border + "",
      color: info.app.color3
    };
    filterBody = {
      border: "1px solid " + info.app.border,
      background: info.app.header
    };
    borderB = {
      borderBottom: "1px solid " + info.app.border
    };
    buttonPrimary1Style = {
      border: "1px solid " + info.app.primary1,
      color: info.app.text,
      background: info.app.primary1,
      backgroundColor: info.app.primary1Spare
    };
    lightText = {
      color: info.app.color3
    };
    iconStyle = {
      filter: info.app.nothingIcon
    };
    dragareaBg = {
      background: info.app.dragarea
    };
    expandCollapse = function(){
      store.filestore.menuOpen = !store.filestore.menuOpen;
      return store.current.dragfile = !store.current.dragfile;
    };
    openTree = function(){
      return store.filestore.fileTree = !store.filestore.fileTree;
    };
    activeFolder = store.filestore.fileTree ? 'arrow-down' : "";
    showClass = store.current.openMenu ? 'hide' : "";
    return react.createElement('div', {
      className: 'filestore filestore159510556'
    }, children = [
      alertDemo(store, web3t), react.createElement('div', {
        style: borderStyle,
        className: 'title'
      }, children = [
        react.createElement('div', {
          className: showClass + " header"
        }, ' File Storage'), react.createElement('div', {
          onClick: goBack,
          className: 'close'
        }, children = react.createElement('img', {
          src: icons.arrowLeft + "",
          className: 'icon-svg'
        })), burger(store, web3t), epoch(store, web3t), switchAccount(store, web3t)
      ]), react.createElement('div', {
        style: borderStyle,
        className: 'toolbar'
      }, children = [
        react.createElement('span', {
          onClick: switchFiles,
          className: fileTree + " files"
        }, children = react.createElement('img', {
          src: icons.fileSideMenu + ""
        })), react.createElement('ul', {
          className: 'path'
        }, children = [
          react.createElement('li', {
            key: "files"
          }, children = react.createElement('span', {}, ' Files  ' + store.filestore.path + ' ')), react.createElement('li', {
            key: "docs"
          }, children = react.createElement('span', {}, ' Documents'))
        ]), react.createElement('span', {
          onClick: expandCollapse,
          className: 'add-file'
        }, children = icon("Plus", 20)), react.createElement('ul', {
          className: active + " action"
        }, children = [
          react.createElement('li', {
            key: "cloud-download"
          }, children = react.createElement('span', {}, children = icon("CloudDownload", 20))), react.createElement('li', {
            key: "link-external"
          }, children = react.createElement('span', {}, children = icon("LinkExternal", 20))), react.createElement('li', {
            key: "trashcan"
          }, children = react.createElement('span', {}, children = icon("Trashcan", 20)))
        ]), store.filestore.menuOpen ? react.createElement('div', {
          style: filterBody,
          className: 'menu'
        }, children = react.createElement('div', {
          className: 'middle'
        }, children = [
          react.createElement('div', {
            className: 'table-row-menu'
          }, children = react.createElement('div', {
            className: 'col folder-menu'
          }, children = [react.createElement('span', {}, children = icon("CloudDownload", 20)), react.createElement('div', {}, ' Folder')])), react.createElement('div', {
            className: 'table-row-menu'
          }, children = react.createElement('div', {
            className: 'col folder-menu'
          }, children = [react.createElement('span', {}, children = icon("CloudDownload", 20)), react.createElement('div', {}, ' Upload Files')])), react.createElement('div', {
            className: 'table-row-menu'
          }, children = react.createElement('div', {
            className: 'col folder-menu'
          }, children = [react.createElement('span', {}, children = icon("CloudDownload", 20)), react.createElement('div', {}, ' Upload Folder')]))
        ])) : void 8
      ]), react.createElement('div', {
        className: 'wrapper'
      }, children = [
        react.createElement('div', {
          style: borderRight,
          className: fileTree + " panel-content"
        }, children = [
          react.createElement('div', {
            onClick: openTree,
            className: activeFolder + " table-row"
          }, children = [
            react.createElement('div', {
              className: 'cell arrow'
            }, children = icon("ChevronRight", 20)), react.createElement('div', {
              className: 'cell folder'
            }, children = [
              react.createElement('img', {
                src: icons.fileFolder + ""
              }), react.createElement('div', {}, ' Files')
            ])
          ]), store.filestore.fileTree ? react.createElement('div', {
            className: 'table-row'
          }, children = [
            react.createElement('div', {
              className: 'cell indent'
            }), react.createElement('div', {
              className: 'cell arrow'
            }, children = icon("ChevronRight", 20)), react.createElement('div', {
              className: 'cell folder'
            }, children = [
              react.createElement('img', {
                src: icons.fileFolder + ""
              }), react.createElement('div', {}, ' Images')
            ])
          ]) : void 8
        ]), react.createElement('div', {
          className: dragarea + " store-content"
        }, children = [
          react.createElement('div', {
            style: dragareaBg,
            className: dragarea + " header-table dragfile"
          }, children = react.createElement('div', {
            style: dashedBorder,
            className: 'cell network'
          }, children = [
            react.createElement('img', {
              src: icons.fileDrag + "",
              style: iconStyle,
              className: 'bounce'
            }), " Drag and Drop here", react.createElement('br', {}), " or", react.createElement('span', {}, ' Browse files')
          ])), react.createElement('div', {
            style: headerTableStyle,
            className: 'header-table'
          }, children = [
            react.createElement('span', {
              style: lightText,
              className: 'cell network'
            }, ' Name'), react.createElement('span', {
              style: lightText,
              className: 'cell txhash'
            }, ' Date Modified'), react.createElement('span', {
              style: lightText,
              className: 'cell amount'
            }, ' File Size')
          ]), react.createElement('div', {
            onClick: action,
            className: active + " table-row"
          }, children = [
            react.createElement('div', {
              className: 'cell file'
            }, children = [
              react.createElement('img', {
                src: store.filestore.extensionIcons.txt + ""
              }), react.createElement('div', {}, ' File.txt')
            ]), react.createElement('div', {
              className: 'cell date'
            }, children = react.createElement('div', {}, ' 16/03/2020')), react.createElement('div', {
              className: 'cell size'
            }, children = react.createElement('div', {}, ' 2 KB'))
          ])
        ]), react.createElement('div', {
          style: filterBody,
          className: 'active-download'
        }, children = [
          react.createElement('div', {
            style: headerTableStyle,
            className: 'top'
          }, children = react.createElement('div', {
            className: 'table-row-menu'
          }, children = [
            react.createElement('span', {
              className: 'col folder-menu'
            }, children = react.createElement('div', {}, ' Uploading 1 item')), react.createElement('ul', {
              className: active + " action col"
            }, children = [
              react.createElement('li', {
                key: "hide-progress",
                onClick: switchProgress,
                className: hideProgress + ""
              }, children = react.createElement('span', {}, children = icon("ChevronDown", 15))), react.createElement('li', {
                key: "close-icon"
              }, children = react.createElement('span', {}, children = icon('X', 15)))
            ])
          ])), react.createElement('div', {
            style: headerTableStyle,
            className: hideProgress + ""
          }, children = react.createElement('div', {
            className: 'table-row-menu'
          }, children = [
            react.createElement('span', {
              className: 'col folder-menu'
            }, children = react.createElement('div', {}, ' Left 7min.')), react.createElement('span', {
              className: 'col cancel'
            }, ' Cancel')
          ])), react.createElement('div', {
            className: hideProgress + ""
          }, children = react.createElement('div', {
            className: 'table-row-menu'
          }, children = [
            react.createElement('div', {
              className: 'col folder-menu pending'
            }, children = [
              react.createElement('img', {
                src: store.filestore.extensionIcons.txt + ""
              }), react.createElement('div', {
                className: 'file-name'
              }, ' File.txt')
            ]), react.createElement('div', {
              className: 'col folder-menu progress'
            }, children = react.createElement('progress', {
              value: "30",
              max: "100"
            }))
          ]))
        ])
      ])
    ]);
  };
  module.exports = filestorage;
}).call(this);
